/*! Textarena v1.0.0 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["Textarena"] = factory();
	else
		root["Textarena"] = factory();
})(window, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ({

/***/ "../node_modules/lit-element/lib/css-tag.js":
/*!**************************************************!*\
  !*** ../node_modules/lit-element/lib/css-tag.js ***!
  \**************************************************/
/*! exports provided: supportsAdoptingStyleSheets, CSSResult, unsafeCSS, css */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"supportsAdoptingStyleSheets\", function() { return supportsAdoptingStyleSheets; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CSSResult\", function() { return CSSResult; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"unsafeCSS\", function() { return unsafeCSS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"css\", function() { return css; });\n/**\n@license\nCopyright (c) 2019 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\n/**\n * Whether the current browser supports `adoptedStyleSheets`.\n */\nconst supportsAdoptingStyleSheets = (window.ShadowRoot) &&\n    (window.ShadyCSS === undefined || window.ShadyCSS.nativeShadow) &&\n    ('adoptedStyleSheets' in Document.prototype) &&\n    ('replace' in CSSStyleSheet.prototype);\nconst constructionToken = Symbol();\nclass CSSResult {\n    constructor(cssText, safeToken) {\n        if (safeToken !== constructionToken) {\n            throw new Error('CSSResult is not constructable. Use `unsafeCSS` or `css` instead.');\n        }\n        this.cssText = cssText;\n    }\n    // Note, this is a getter so that it's lazy. In practice, this means\n    // stylesheets are not created until the first element instance is made.\n    get styleSheet() {\n        if (this._styleSheet === undefined) {\n            // Note, if `supportsAdoptingStyleSheets` is true then we assume\n            // CSSStyleSheet is constructable.\n            if (supportsAdoptingStyleSheets) {\n                this._styleSheet = new CSSStyleSheet();\n                this._styleSheet.replaceSync(this.cssText);\n            }\n            else {\n                this._styleSheet = null;\n            }\n        }\n        return this._styleSheet;\n    }\n    toString() {\n        return this.cssText;\n    }\n}\n/**\n * Wrap a value for interpolation in a [[`css`]] tagged template literal.\n *\n * This is unsafe because untrusted CSS text can be used to phone home\n * or exfiltrate data to an attacker controlled site. Take care to only use\n * this with trusted input.\n */\nconst unsafeCSS = (value) => {\n    return new CSSResult(String(value), constructionToken);\n};\nconst textFromCSSResult = (value) => {\n    if (value instanceof CSSResult) {\n        return value.cssText;\n    }\n    else if (typeof value === 'number') {\n        return value;\n    }\n    else {\n        throw new Error(`Value passed to 'css' function must be a 'css' function result: ${value}. Use 'unsafeCSS' to pass non-literal values, but\n            take care to ensure page security.`);\n    }\n};\n/**\n * Template tag which which can be used with LitElement's [[LitElement.styles |\n * `styles`]] property to set element styles. For security reasons, only literal\n * string values may be used. To incorporate non-literal values [[`unsafeCSS`]]\n * may be used inside a template string part.\n */\nconst css = (strings, ...values) => {\n    const cssText = values.reduce((acc, v, idx) => acc + textFromCSSResult(v) + strings[idx + 1], strings[0]);\n    return new CSSResult(cssText, constructionToken);\n};\n//# sourceMappingURL=css-tag.js.map\n\n//# sourceURL=webpack://Textarena/../node_modules/lit-element/lib/css-tag.js?");

/***/ }),

/***/ "../node_modules/lit-element/lib/decorators.js":
/*!*****************************************************!*\
  !*** ../node_modules/lit-element/lib/decorators.js ***!
  \*****************************************************/
/*! exports provided: customElement, property, internalProperty, query, queryAsync, queryAll, eventOptions, queryAssignedNodes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"customElement\", function() { return customElement; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"property\", function() { return property; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"internalProperty\", function() { return internalProperty; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"query\", function() { return query; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"queryAsync\", function() { return queryAsync; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"queryAll\", function() { return queryAll; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"eventOptions\", function() { return eventOptions; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"queryAssignedNodes\", function() { return queryAssignedNodes; });\n/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst legacyCustomElement = (tagName, clazz) => {\n    window.customElements.define(tagName, clazz);\n    // Cast as any because TS doesn't recognize the return type as being a\n    // subtype of the decorated class when clazz is typed as\n    // `Constructor<HTMLElement>` for some reason.\n    // `Constructor<HTMLElement>` is helpful to make sure the decorator is\n    // applied to elements however.\n    // tslint:disable-next-line:no-any\n    return clazz;\n};\nconst standardCustomElement = (tagName, descriptor) => {\n    const { kind, elements } = descriptor;\n    return {\n        kind,\n        elements,\n        // This callback is called once the class is otherwise fully defined\n        finisher(clazz) {\n            window.customElements.define(tagName, clazz);\n        }\n    };\n};\n/**\n * Class decorator factory that defines the decorated class as a custom element.\n *\n * ```\n * @customElement('my-element')\n * class MyElement {\n *   render() {\n *     return html``;\n *   }\n * }\n * ```\n * @category Decorator\n * @param tagName The name of the custom element to define.\n */\nconst customElement = (tagName) => (classOrDescriptor) => (typeof classOrDescriptor === 'function') ?\n    legacyCustomElement(tagName, classOrDescriptor) :\n    standardCustomElement(tagName, classOrDescriptor);\nconst standardProperty = (options, element) => {\n    // When decorating an accessor, pass it through and add property metadata.\n    // Note, the `hasOwnProperty` check in `createProperty` ensures we don't\n    // stomp over the user's accessor.\n    if (element.kind === 'method' && element.descriptor &&\n        !('value' in element.descriptor)) {\n        return Object.assign(Object.assign({}, element), { finisher(clazz) {\n                clazz.createProperty(element.key, options);\n            } });\n    }\n    else {\n        // createProperty() takes care of defining the property, but we still\n        // must return some kind of descriptor, so return a descriptor for an\n        // unused prototype field. The finisher calls createProperty().\n        return {\n            kind: 'field',\n            key: Symbol(),\n            placement: 'own',\n            descriptor: {},\n            // When @babel/plugin-proposal-decorators implements initializers,\n            // do this instead of the initializer below. See:\n            // https://github.com/babel/babel/issues/9260 extras: [\n            //   {\n            //     kind: 'initializer',\n            //     placement: 'own',\n            //     initializer: descriptor.initializer,\n            //   }\n            // ],\n            initializer() {\n                if (typeof element.initializer === 'function') {\n                    this[element.key] = element.initializer.call(this);\n                }\n            },\n            finisher(clazz) {\n                clazz.createProperty(element.key, options);\n            }\n        };\n    }\n};\nconst legacyProperty = (options, proto, name) => {\n    proto.constructor\n        .createProperty(name, options);\n};\n/**\n * A property decorator which creates a LitElement property which reflects a\n * corresponding attribute value. A [[`PropertyDeclaration`]] may optionally be\n * supplied to configure property features.\n *\n * This decorator should only be used for public fields. Private or protected\n * fields should use the [[`internalProperty`]] decorator.\n *\n * @example\n * ```ts\n * class MyElement {\n *   @property({ type: Boolean })\n *   clicked = false;\n * }\n * ```\n * @category Decorator\n * @ExportDecoratedItems\n */\nfunction property(options) {\n    // tslint:disable-next-line:no-any decorator\n    return (protoOrDescriptor, name) => (name !== undefined) ?\n        legacyProperty(options, protoOrDescriptor, name) :\n        standardProperty(options, protoOrDescriptor);\n}\n/**\n * Declares a private or protected property that still triggers updates to the\n * element when it changes.\n *\n * Properties declared this way must not be used from HTML or HTML templating\n * systems, they're solely for properties internal to the element. These\n * properties may be renamed by optimization tools like closure compiler.\n * @category Decorator\n */\nfunction internalProperty(options) {\n    return property({ attribute: false, hasChanged: options === null || options === void 0 ? void 0 : options.hasChanged });\n}\n/**\n * A property decorator that converts a class property into a getter that\n * executes a querySelector on the element's renderRoot.\n *\n * @param selector A DOMString containing one or more selectors to match.\n * @param cache An optional boolean which when true performs the DOM query only\n * once and caches the result.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\n *\n * @example\n *\n * ```ts\n * class MyElement {\n *   @query('#first')\n *   first;\n *\n *   render() {\n *     return html`\n *       <div id=\"first\"></div>\n *       <div id=\"second\"></div>\n *     `;\n *   }\n * }\n * ```\n * @category Decorator\n */\nfunction query(selector, cache) {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            get() {\n                return this.renderRoot.querySelector(selector);\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        if (cache) {\n            const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n            descriptor.get = function () {\n                if (this[key] === undefined) {\n                    (this[key] =\n                        this.renderRoot.querySelector(selector));\n                }\n                return this[key];\n            };\n        }\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\n// Note, in the future, we may extend this decorator to support the use case\n// where the queried element may need to do work to become ready to interact\n// with (e.g. load some implementation code). If so, we might elect to\n// add a second argument defining a function that can be run to make the\n// queried element loaded/updated/ready.\n/**\n * A property decorator that converts a class property into a getter that\n * returns a promise that resolves to the result of a querySelector on the\n * element's renderRoot done after the element's `updateComplete` promise\n * resolves. When the queried property may change with element state, this\n * decorator can be used instead of requiring users to await the\n * `updateComplete` before accessing the property.\n *\n * @param selector A DOMString containing one or more selectors to match.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\n *\n * @example\n * ```ts\n * class MyElement {\n *   @queryAsync('#first')\n *   first;\n *\n *   render() {\n *     return html`\n *       <div id=\"first\"></div>\n *       <div id=\"second\"></div>\n *     `;\n *   }\n * }\n *\n * // external usage\n * async doSomethingWithFirst() {\n *  (await aMyElement.first).doSomething();\n * }\n * ```\n * @category Decorator\n */\nfunction queryAsync(selector) {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            async get() {\n                await this.updateComplete;\n                return this.renderRoot.querySelector(selector);\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\n/**\n * A property decorator that converts a class property into a getter\n * that executes a querySelectorAll on the element's renderRoot.\n *\n * @param selector A DOMString containing one or more selectors to match.\n *\n * See:\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelectorAll\n *\n * @example\n * ```ts\n * class MyElement {\n *   @queryAll('div')\n *   divs;\n *\n *   render() {\n *     return html`\n *       <div id=\"first\"></div>\n *       <div id=\"second\"></div>\n *     `;\n *   }\n * }\n * ```\n * @category Decorator\n */\nfunction queryAll(selector) {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            get() {\n                return this.renderRoot.querySelectorAll(selector);\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\nconst legacyQuery = (descriptor, proto, name) => {\n    Object.defineProperty(proto, name, descriptor);\n};\nconst standardQuery = (descriptor, element) => ({\n    kind: 'method',\n    placement: 'prototype',\n    key: element.key,\n    descriptor,\n});\nconst standardEventOptions = (options, element) => {\n    return Object.assign(Object.assign({}, element), { finisher(clazz) {\n            Object.assign(clazz.prototype[element.key], options);\n        } });\n};\nconst legacyEventOptions = \n// tslint:disable-next-line:no-any legacy decorator\n(options, proto, name) => {\n    Object.assign(proto[name], options);\n};\n/**\n * Adds event listener options to a method used as an event listener in a\n * lit-html template.\n *\n * @param options An object that specifies event listener options as accepted by\n * `EventTarget#addEventListener` and `EventTarget#removeEventListener`.\n *\n * Current browsers support the `capture`, `passive`, and `once` options. See:\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Parameters\n *\n * @example\n * ```ts\n * class MyElement {\n *   clicked = false;\n *\n *   render() {\n *     return html`\n *       <div @click=${this._onClick}`>\n *         <button></button>\n *       </div>\n *     `;\n *   }\n *\n *   @eventOptions({capture: true})\n *   _onClick(e) {\n *     this.clicked = true;\n *   }\n * }\n * ```\n * @category Decorator\n */\nfunction eventOptions(options) {\n    // Return value typed as any to prevent TypeScript from complaining that\n    // standard decorator function signature does not match TypeScript decorator\n    // signature\n    // TODO(kschaaf): unclear why it was only failing on this decorator and not\n    // the others\n    return ((protoOrDescriptor, name) => (name !== undefined) ?\n        legacyEventOptions(options, protoOrDescriptor, name) :\n        standardEventOptions(options, protoOrDescriptor));\n}\n// x-browser support for matches\n// tslint:disable-next-line:no-any\nconst ElementProto = Element.prototype;\nconst legacyMatches = ElementProto.msMatchesSelector || ElementProto.webkitMatchesSelector;\n/**\n * A property decorator that converts a class property into a getter that\n * returns the `assignedNodes` of the given named `slot`. Note, the type of\n * this property should be annotated as `NodeListOf<HTMLElement>`.\n *\n * @param slotName A string name of the slot.\n * @param flatten A boolean which when true flattens the assigned nodes,\n * meaning any assigned nodes that are slot elements are replaced with their\n * assigned nodes.\n * @param selector A string which filters the results to elements that match\n * the given css selector.\n *\n * * @example\n * ```ts\n * class MyElement {\n *   @queryAssignedNodes('list', true, '.item')\n *   listItems;\n *\n *   render() {\n *     return html`\n *       <slot name=\"list\"></slot>\n *     `;\n *   }\n * }\n * ```\n * @category Decorator\n */\nfunction queryAssignedNodes(slotName = '', flatten = false, selector = '') {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            get() {\n                const slotSelector = `slot${slotName ? `[name=${slotName}]` : ':not([name])'}`;\n                const slot = this.renderRoot.querySelector(slotSelector);\n                let nodes = slot && slot.assignedNodes({ flatten });\n                if (nodes && selector) {\n                    nodes = nodes.filter((node) => node.nodeType === Node.ELEMENT_NODE &&\n                        node.matches ?\n                        node.matches(selector) :\n                        legacyMatches.call(node, selector));\n                }\n                return nodes;\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\n//# sourceMappingURL=decorators.js.map\n\n//# sourceURL=webpack://Textarena/../node_modules/lit-element/lib/decorators.js?");

/***/ }),

/***/ "../node_modules/lit-element/lib/updating-element.js":
/*!***********************************************************!*\
  !*** ../node_modules/lit-element/lib/updating-element.js ***!
  \***********************************************************/
/*! exports provided: defaultConverter, notEqual, UpdatingElement */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"defaultConverter\", function() { return defaultConverter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"notEqual\", function() { return notEqual; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"UpdatingElement\", function() { return UpdatingElement; });\n/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nvar _a;\n/**\n * Use this module if you want to create your own base class extending\n * [[UpdatingElement]].\n * @packageDocumentation\n */\n/*\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is\n * replaced at compile time by the munged name for object[property]. We cannot\n * alias this function, so we have to use a small shim that has the same\n * behavior when not compiling.\n */\nwindow.JSCompiler_renameProperty =\n    (prop, _obj) => prop;\nconst defaultConverter = {\n    toAttribute(value, type) {\n        switch (type) {\n            case Boolean:\n                return value ? '' : null;\n            case Object:\n            case Array:\n                // if the value is `null` or `undefined` pass this through\n                // to allow removing/no change behavior.\n                return value == null ? value : JSON.stringify(value);\n        }\n        return value;\n    },\n    fromAttribute(value, type) {\n        switch (type) {\n            case Boolean:\n                return value !== null;\n            case Number:\n                return value === null ? null : Number(value);\n            case Object:\n            case Array:\n                return JSON.parse(value);\n        }\n        return value;\n    }\n};\n/**\n * Change function that returns true if `value` is different from `oldValue`.\n * This method is used as the default for a property's `hasChanged` function.\n */\nconst notEqual = (value, old) => {\n    // This ensures (old==NaN, value==NaN) always returns false\n    return old !== value && (old === old || value === value);\n};\nconst defaultPropertyDeclaration = {\n    attribute: true,\n    type: String,\n    converter: defaultConverter,\n    reflect: false,\n    hasChanged: notEqual\n};\nconst STATE_HAS_UPDATED = 1;\nconst STATE_UPDATE_REQUESTED = 1 << 2;\nconst STATE_IS_REFLECTING_TO_ATTRIBUTE = 1 << 3;\nconst STATE_IS_REFLECTING_TO_PROPERTY = 1 << 4;\n/**\n * The Closure JS Compiler doesn't currently have good support for static\n * property semantics where \"this\" is dynamic (e.g.\n * https://github.com/google/closure-compiler/issues/3177 and others) so we use\n * this hack to bypass any rewriting by the compiler.\n */\nconst finalized = 'finalized';\n/**\n * Base element class which manages element properties and attributes. When\n * properties change, the `update` method is asynchronously called. This method\n * should be supplied by subclassers to render updates as desired.\n * @noInheritDoc\n */\nclass UpdatingElement extends HTMLElement {\n    constructor() {\n        super();\n        this.initialize();\n    }\n    /**\n     * Returns a list of attributes corresponding to the registered properties.\n     * @nocollapse\n     */\n    static get observedAttributes() {\n        // note: piggy backing on this to ensure we're finalized.\n        this.finalize();\n        const attributes = [];\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        this._classProperties.forEach((v, p) => {\n            const attr = this._attributeNameForProperty(p, v);\n            if (attr !== undefined) {\n                this._attributeToPropertyMap.set(attr, p);\n                attributes.push(attr);\n            }\n        });\n        return attributes;\n    }\n    /**\n     * Ensures the private `_classProperties` property metadata is created.\n     * In addition to `finalize` this is also called in `createProperty` to\n     * ensure the `@property` decorator can add property metadata.\n     */\n    /** @nocollapse */\n    static _ensureClassProperties() {\n        // ensure private storage for property declarations.\n        if (!this.hasOwnProperty(JSCompiler_renameProperty('_classProperties', this))) {\n            this._classProperties = new Map();\n            // NOTE: Workaround IE11 not supporting Map constructor argument.\n            const superProperties = Object.getPrototypeOf(this)._classProperties;\n            if (superProperties !== undefined) {\n                superProperties.forEach((v, k) => this._classProperties.set(k, v));\n            }\n        }\n    }\n    /**\n     * Creates a property accessor on the element prototype if one does not exist\n     * and stores a PropertyDeclaration for the property with the given options.\n     * The property setter calls the property's `hasChanged` property option\n     * or uses a strict identity check to determine whether or not to request\n     * an update.\n     *\n     * This method may be overridden to customize properties; however,\n     * when doing so, it's important to call `super.createProperty` to ensure\n     * the property is setup correctly. This method calls\n     * `getPropertyDescriptor` internally to get a descriptor to install.\n     * To customize what properties do when they are get or set, override\n     * `getPropertyDescriptor`. To customize the options for a property,\n     * implement `createProperty` like this:\n     *\n     * static createProperty(name, options) {\n     *   options = Object.assign(options, {myOption: true});\n     *   super.createProperty(name, options);\n     * }\n     *\n     * @nocollapse\n     */\n    static createProperty(name, options = defaultPropertyDeclaration) {\n        // Note, since this can be called by the `@property` decorator which\n        // is called before `finalize`, we ensure storage exists for property\n        // metadata.\n        this._ensureClassProperties();\n        this._classProperties.set(name, options);\n        // Do not generate an accessor if the prototype already has one, since\n        // it would be lost otherwise and that would never be the user's intention;\n        // Instead, we expect users to call `requestUpdate` themselves from\n        // user-defined accessors. Note that if the super has an accessor we will\n        // still overwrite it\n        if (options.noAccessor || this.prototype.hasOwnProperty(name)) {\n            return;\n        }\n        const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n        const descriptor = this.getPropertyDescriptor(name, key, options);\n        if (descriptor !== undefined) {\n            Object.defineProperty(this.prototype, name, descriptor);\n        }\n    }\n    /**\n     * Returns a property descriptor to be defined on the given named property.\n     * If no descriptor is returned, the property will not become an accessor.\n     * For example,\n     *\n     *   class MyElement extends LitElement {\n     *     static getPropertyDescriptor(name, key, options) {\n     *       const defaultDescriptor =\n     *           super.getPropertyDescriptor(name, key, options);\n     *       const setter = defaultDescriptor.set;\n     *       return {\n     *         get: defaultDescriptor.get,\n     *         set(value) {\n     *           setter.call(this, value);\n     *           // custom action.\n     *         },\n     *         configurable: true,\n     *         enumerable: true\n     *       }\n     *     }\n     *   }\n     *\n     * @nocollapse\n     */\n    static getPropertyDescriptor(name, key, options) {\n        return {\n            // tslint:disable-next-line:no-any no symbol in index\n            get() {\n                return this[key];\n            },\n            set(value) {\n                const oldValue = this[name];\n                this[key] = value;\n                this\n                    .requestUpdateInternal(name, oldValue, options);\n            },\n            configurable: true,\n            enumerable: true\n        };\n    }\n    /**\n     * Returns the property options associated with the given property.\n     * These options are defined with a PropertyDeclaration via the `properties`\n     * object or the `@property` decorator and are registered in\n     * `createProperty(...)`.\n     *\n     * Note, this method should be considered \"final\" and not overridden. To\n     * customize the options for a given property, override `createProperty`.\n     *\n     * @nocollapse\n     * @final\n     */\n    static getPropertyOptions(name) {\n        return this._classProperties && this._classProperties.get(name) ||\n            defaultPropertyDeclaration;\n    }\n    /**\n     * Creates property accessors for registered properties and ensures\n     * any superclasses are also finalized.\n     * @nocollapse\n     */\n    static finalize() {\n        // finalize any superclasses\n        const superCtor = Object.getPrototypeOf(this);\n        if (!superCtor.hasOwnProperty(finalized)) {\n            superCtor.finalize();\n        }\n        this[finalized] = true;\n        this._ensureClassProperties();\n        // initialize Map populated in observedAttributes\n        this._attributeToPropertyMap = new Map();\n        // make any properties\n        // Note, only process \"own\" properties since this element will inherit\n        // any properties defined on the superClass, and finalization ensures\n        // the entire prototype chain is finalized.\n        if (this.hasOwnProperty(JSCompiler_renameProperty('properties', this))) {\n            const props = this.properties;\n            // support symbols in properties (IE11 does not support this)\n            const propKeys = [\n                ...Object.getOwnPropertyNames(props),\n                ...(typeof Object.getOwnPropertySymbols === 'function') ?\n                    Object.getOwnPropertySymbols(props) :\n                    []\n            ];\n            // This for/of is ok because propKeys is an array\n            for (const p of propKeys) {\n                // note, use of `any` is due to TypeSript lack of support for symbol in\n                // index types\n                // tslint:disable-next-line:no-any no symbol in index\n                this.createProperty(p, props[p]);\n            }\n        }\n    }\n    /**\n     * Returns the property name for the given attribute `name`.\n     * @nocollapse\n     */\n    static _attributeNameForProperty(name, options) {\n        const attribute = options.attribute;\n        return attribute === false ?\n            undefined :\n            (typeof attribute === 'string' ?\n                attribute :\n                (typeof name === 'string' ? name.toLowerCase() : undefined));\n    }\n    /**\n     * Returns true if a property should request an update.\n     * Called when a property value is set and uses the `hasChanged`\n     * option for the property if present or a strict identity check.\n     * @nocollapse\n     */\n    static _valueHasChanged(value, old, hasChanged = notEqual) {\n        return hasChanged(value, old);\n    }\n    /**\n     * Returns the property value for the given attribute value.\n     * Called via the `attributeChangedCallback` and uses the property's\n     * `converter` or `converter.fromAttribute` property option.\n     * @nocollapse\n     */\n    static _propertyValueFromAttribute(value, options) {\n        const type = options.type;\n        const converter = options.converter || defaultConverter;\n        const fromAttribute = (typeof converter === 'function' ? converter : converter.fromAttribute);\n        return fromAttribute ? fromAttribute(value, type) : value;\n    }\n    /**\n     * Returns the attribute value for the given property value. If this\n     * returns undefined, the property will *not* be reflected to an attribute.\n     * If this returns null, the attribute will be removed, otherwise the\n     * attribute will be set to the value.\n     * This uses the property's `reflect` and `type.toAttribute` property options.\n     * @nocollapse\n     */\n    static _propertyValueToAttribute(value, options) {\n        if (options.reflect === undefined) {\n            return;\n        }\n        const type = options.type;\n        const converter = options.converter;\n        const toAttribute = converter && converter.toAttribute ||\n            defaultConverter.toAttribute;\n        return toAttribute(value, type);\n    }\n    /**\n     * Performs element initialization. By default captures any pre-set values for\n     * registered properties.\n     */\n    initialize() {\n        this._updateState = 0;\n        this._updatePromise =\n            new Promise((res) => this._enableUpdatingResolver = res);\n        this._changedProperties = new Map();\n        this._saveInstanceProperties();\n        // ensures first update will be caught by an early access of\n        // `updateComplete`\n        this.requestUpdateInternal();\n    }\n    /**\n     * Fixes any properties set on the instance before upgrade time.\n     * Otherwise these would shadow the accessor and break these properties.\n     * The properties are stored in a Map which is played back after the\n     * constructor runs. Note, on very old versions of Safari (<=9) or Chrome\n     * (<=41), properties created for native platform properties like (`id` or\n     * `name`) may not have default values set in the element constructor. On\n     * these browsers native properties appear on instances and therefore their\n     * default value will overwrite any element default (e.g. if the element sets\n     * this.id = 'id' in the constructor, the 'id' will become '' since this is\n     * the native platform default).\n     */\n    _saveInstanceProperties() {\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        this.constructor\n            ._classProperties.forEach((_v, p) => {\n            if (this.hasOwnProperty(p)) {\n                const value = this[p];\n                delete this[p];\n                if (!this._instanceProperties) {\n                    this._instanceProperties = new Map();\n                }\n                this._instanceProperties.set(p, value);\n            }\n        });\n    }\n    /**\n     * Applies previously saved instance properties.\n     */\n    _applyInstanceProperties() {\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        // tslint:disable-next-line:no-any\n        this._instanceProperties.forEach((v, p) => this[p] = v);\n        this._instanceProperties = undefined;\n    }\n    connectedCallback() {\n        // Ensure first connection completes an update. Updates cannot complete\n        // before connection.\n        this.enableUpdating();\n    }\n    enableUpdating() {\n        if (this._enableUpdatingResolver !== undefined) {\n            this._enableUpdatingResolver();\n            this._enableUpdatingResolver = undefined;\n        }\n    }\n    /**\n     * Allows for `super.disconnectedCallback()` in extensions while\n     * reserving the possibility of making non-breaking feature additions\n     * when disconnecting at some point in the future.\n     */\n    disconnectedCallback() {\n    }\n    /**\n     * Synchronizes property values when attributes change.\n     */\n    attributeChangedCallback(name, old, value) {\n        if (old !== value) {\n            this._attributeToProperty(name, value);\n        }\n    }\n    _propertyToAttribute(name, value, options = defaultPropertyDeclaration) {\n        const ctor = this.constructor;\n        const attr = ctor._attributeNameForProperty(name, options);\n        if (attr !== undefined) {\n            const attrValue = ctor._propertyValueToAttribute(value, options);\n            // an undefined value does not change the attribute.\n            if (attrValue === undefined) {\n                return;\n            }\n            // Track if the property is being reflected to avoid\n            // setting the property again via `attributeChangedCallback`. Note:\n            // 1. this takes advantage of the fact that the callback is synchronous.\n            // 2. will behave incorrectly if multiple attributes are in the reaction\n            // stack at time of calling. However, since we process attributes\n            // in `update` this should not be possible (or an extreme corner case\n            // that we'd like to discover).\n            // mark state reflecting\n            this._updateState = this._updateState | STATE_IS_REFLECTING_TO_ATTRIBUTE;\n            if (attrValue == null) {\n                this.removeAttribute(attr);\n            }\n            else {\n                this.setAttribute(attr, attrValue);\n            }\n            // mark state not reflecting\n            this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_ATTRIBUTE;\n        }\n    }\n    _attributeToProperty(name, value) {\n        // Use tracking info to avoid deserializing attribute value if it was\n        // just set from a property setter.\n        if (this._updateState & STATE_IS_REFLECTING_TO_ATTRIBUTE) {\n            return;\n        }\n        const ctor = this.constructor;\n        // Note, hint this as an `AttributeMap` so closure clearly understands\n        // the type; it has issues with tracking types through statics\n        // tslint:disable-next-line:no-unnecessary-type-assertion\n        const propName = ctor._attributeToPropertyMap.get(name);\n        if (propName !== undefined) {\n            const options = ctor.getPropertyOptions(propName);\n            // mark state reflecting\n            this._updateState = this._updateState | STATE_IS_REFLECTING_TO_PROPERTY;\n            this[propName] =\n                // tslint:disable-next-line:no-any\n                ctor._propertyValueFromAttribute(value, options);\n            // mark state not reflecting\n            this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_PROPERTY;\n        }\n    }\n    /**\n     * This protected version of `requestUpdate` does not access or return the\n     * `updateComplete` promise. This promise can be overridden and is therefore\n     * not free to access.\n     */\n    requestUpdateInternal(name, oldValue, options) {\n        let shouldRequestUpdate = true;\n        // If we have a property key, perform property update steps.\n        if (name !== undefined) {\n            const ctor = this.constructor;\n            options = options || ctor.getPropertyOptions(name);\n            if (ctor._valueHasChanged(this[name], oldValue, options.hasChanged)) {\n                if (!this._changedProperties.has(name)) {\n                    this._changedProperties.set(name, oldValue);\n                }\n                // Add to reflecting properties set.\n                // Note, it's important that every change has a chance to add the\n                // property to `_reflectingProperties`. This ensures setting\n                // attribute + property reflects correctly.\n                if (options.reflect === true &&\n                    !(this._updateState & STATE_IS_REFLECTING_TO_PROPERTY)) {\n                    if (this._reflectingProperties === undefined) {\n                        this._reflectingProperties = new Map();\n                    }\n                    this._reflectingProperties.set(name, options);\n                }\n            }\n            else {\n                // Abort the request if the property should not be considered changed.\n                shouldRequestUpdate = false;\n            }\n        }\n        if (!this._hasRequestedUpdate && shouldRequestUpdate) {\n            this._updatePromise = this._enqueueUpdate();\n        }\n    }\n    /**\n     * Requests an update which is processed asynchronously. This should\n     * be called when an element should update based on some state not triggered\n     * by setting a property. In this case, pass no arguments. It should also be\n     * called when manually implementing a property setter. In this case, pass the\n     * property `name` and `oldValue` to ensure that any configured property\n     * options are honored. Returns the `updateComplete` Promise which is resolved\n     * when the update completes.\n     *\n     * @param name {PropertyKey} (optional) name of requesting property\n     * @param oldValue {any} (optional) old value of requesting property\n     * @returns {Promise} A Promise that is resolved when the update completes.\n     */\n    requestUpdate(name, oldValue) {\n        this.requestUpdateInternal(name, oldValue);\n        return this.updateComplete;\n    }\n    /**\n     * Sets up the element to asynchronously update.\n     */\n    async _enqueueUpdate() {\n        this._updateState = this._updateState | STATE_UPDATE_REQUESTED;\n        try {\n            // Ensure any previous update has resolved before updating.\n            // This `await` also ensures that property changes are batched.\n            await this._updatePromise;\n        }\n        catch (e) {\n            // Ignore any previous errors. We only care that the previous cycle is\n            // done. Any error should have been handled in the previous update.\n        }\n        const result = this.performUpdate();\n        // If `performUpdate` returns a Promise, we await it. This is done to\n        // enable coordinating updates with a scheduler. Note, the result is\n        // checked to avoid delaying an additional microtask unless we need to.\n        if (result != null) {\n            await result;\n        }\n        return !this._hasRequestedUpdate;\n    }\n    get _hasRequestedUpdate() {\n        return (this._updateState & STATE_UPDATE_REQUESTED);\n    }\n    get hasUpdated() {\n        return (this._updateState & STATE_HAS_UPDATED);\n    }\n    /**\n     * Performs an element update. Note, if an exception is thrown during the\n     * update, `firstUpdated` and `updated` will not be called.\n     *\n     * You can override this method to change the timing of updates. If this\n     * method is overridden, `super.performUpdate()` must be called.\n     *\n     * For instance, to schedule updates to occur just before the next frame:\n     *\n     * ```\n     * protected async performUpdate(): Promise<unknown> {\n     *   await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n     *   super.performUpdate();\n     * }\n     * ```\n     */\n    performUpdate() {\n        // Abort any update if one is not pending when this is called.\n        // This can happen if `performUpdate` is called early to \"flush\"\n        // the update.\n        if (!this._hasRequestedUpdate) {\n            return;\n        }\n        // Mixin instance properties once, if they exist.\n        if (this._instanceProperties) {\n            this._applyInstanceProperties();\n        }\n        let shouldUpdate = false;\n        const changedProperties = this._changedProperties;\n        try {\n            shouldUpdate = this.shouldUpdate(changedProperties);\n            if (shouldUpdate) {\n                this.update(changedProperties);\n            }\n            else {\n                this._markUpdated();\n            }\n        }\n        catch (e) {\n            // Prevent `firstUpdated` and `updated` from running when there's an\n            // update exception.\n            shouldUpdate = false;\n            // Ensure element can accept additional updates after an exception.\n            this._markUpdated();\n            throw e;\n        }\n        if (shouldUpdate) {\n            if (!(this._updateState & STATE_HAS_UPDATED)) {\n                this._updateState = this._updateState | STATE_HAS_UPDATED;\n                this.firstUpdated(changedProperties);\n            }\n            this.updated(changedProperties);\n        }\n    }\n    _markUpdated() {\n        this._changedProperties = new Map();\n        this._updateState = this._updateState & ~STATE_UPDATE_REQUESTED;\n    }\n    /**\n     * Returns a Promise that resolves when the element has completed updating.\n     * The Promise value is a boolean that is `true` if the element completed the\n     * update without triggering another update. The Promise result is `false` if\n     * a property was set inside `updated()`. If the Promise is rejected, an\n     * exception was thrown during the update.\n     *\n     * To await additional asynchronous work, override the `_getUpdateComplete`\n     * method. For example, it is sometimes useful to await a rendered element\n     * before fulfilling this Promise. To do this, first await\n     * `super._getUpdateComplete()`, then any subsequent state.\n     *\n     * @returns {Promise} The Promise returns a boolean that indicates if the\n     * update resolved without triggering another update.\n     */\n    get updateComplete() {\n        return this._getUpdateComplete();\n    }\n    /**\n     * Override point for the `updateComplete` promise.\n     *\n     * It is not safe to override the `updateComplete` getter directly due to a\n     * limitation in TypeScript which means it is not possible to call a\n     * superclass getter (e.g. `super.updateComplete.then(...)`) when the target\n     * language is ES5 (https://github.com/microsoft/TypeScript/issues/338).\n     * This method should be overridden instead. For example:\n     *\n     *   class MyElement extends LitElement {\n     *     async _getUpdateComplete() {\n     *       await super._getUpdateComplete();\n     *       await this._myChild.updateComplete;\n     *     }\n     *   }\n     */\n    _getUpdateComplete() {\n        return this._updatePromise;\n    }\n    /**\n     * Controls whether or not `update` should be called when the element requests\n     * an update. By default, this method always returns `true`, but this can be\n     * customized to control when to update.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    shouldUpdate(_changedProperties) {\n        return true;\n    }\n    /**\n     * Updates the element. This method reflects property values to attributes.\n     * It can be overridden to render and keep updated element DOM.\n     * Setting properties inside this method will *not* trigger\n     * another update.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    update(_changedProperties) {\n        if (this._reflectingProperties !== undefined &&\n            this._reflectingProperties.size > 0) {\n            // Use forEach so this works even if for/of loops are compiled to for\n            // loops expecting arrays\n            this._reflectingProperties.forEach((v, k) => this._propertyToAttribute(k, this[k], v));\n            this._reflectingProperties = undefined;\n        }\n        this._markUpdated();\n    }\n    /**\n     * Invoked whenever the element is updated. Implement to perform\n     * post-updating tasks via DOM APIs, for example, focusing an element.\n     *\n     * Setting properties inside this method will trigger the element to update\n     * again after this update cycle completes.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    updated(_changedProperties) {\n    }\n    /**\n     * Invoked when the element is first updated. Implement to perform one time\n     * work on the element after update.\n     *\n     * Setting properties inside this method will trigger the element to update\n     * again after this update cycle completes.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    firstUpdated(_changedProperties) {\n    }\n}\n_a = finalized;\n/**\n * Marks class as having finished creating properties.\n */\nUpdatingElement[_a] = true;\n//# sourceMappingURL=updating-element.js.map\n\n//# sourceURL=webpack://Textarena/../node_modules/lit-element/lib/updating-element.js?");

/***/ }),

/***/ "../node_modules/lit-element/lit-element.js":
/*!**************************************************!*\
  !*** ../node_modules/lit-element/lit-element.js ***!
  \**************************************************/
/*! exports provided: defaultConverter, notEqual, UpdatingElement, customElement, property, internalProperty, query, queryAsync, queryAll, eventOptions, queryAssignedNodes, html, svg, TemplateResult, SVGTemplateResult, supportsAdoptingStyleSheets, CSSResult, unsafeCSS, css, LitElement */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LitElement\", function() { return LitElement; });\n/* harmony import */ var lit_html_lib_shady_render_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit-html/lib/shady-render.js */ \"../node_modules/lit-html/lib/shady-render.js\");\n/* harmony import */ var _lib_updating_element_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/updating-element.js */ \"../node_modules/lit-element/lib/updating-element.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"defaultConverter\", function() { return _lib_updating_element_js__WEBPACK_IMPORTED_MODULE_1__[\"defaultConverter\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"notEqual\", function() { return _lib_updating_element_js__WEBPACK_IMPORTED_MODULE_1__[\"notEqual\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"UpdatingElement\", function() { return _lib_updating_element_js__WEBPACK_IMPORTED_MODULE_1__[\"UpdatingElement\"]; });\n\n/* harmony import */ var _lib_decorators_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/decorators.js */ \"../node_modules/lit-element/lib/decorators.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"customElement\", function() { return _lib_decorators_js__WEBPACK_IMPORTED_MODULE_2__[\"customElement\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"property\", function() { return _lib_decorators_js__WEBPACK_IMPORTED_MODULE_2__[\"property\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"internalProperty\", function() { return _lib_decorators_js__WEBPACK_IMPORTED_MODULE_2__[\"internalProperty\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"query\", function() { return _lib_decorators_js__WEBPACK_IMPORTED_MODULE_2__[\"query\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"queryAsync\", function() { return _lib_decorators_js__WEBPACK_IMPORTED_MODULE_2__[\"queryAsync\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"queryAll\", function() { return _lib_decorators_js__WEBPACK_IMPORTED_MODULE_2__[\"queryAll\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"eventOptions\", function() { return _lib_decorators_js__WEBPACK_IMPORTED_MODULE_2__[\"eventOptions\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"queryAssignedNodes\", function() { return _lib_decorators_js__WEBPACK_IMPORTED_MODULE_2__[\"queryAssignedNodes\"]; });\n\n/* harmony import */ var lit_html_lit_html_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lit-html/lit-html.js */ \"../node_modules/lit-html/lit-html.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"html\", function() { return lit_html_lit_html_js__WEBPACK_IMPORTED_MODULE_3__[\"html\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"svg\", function() { return lit_html_lit_html_js__WEBPACK_IMPORTED_MODULE_3__[\"svg\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"TemplateResult\", function() { return lit_html_lit_html_js__WEBPACK_IMPORTED_MODULE_3__[\"TemplateResult\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"SVGTemplateResult\", function() { return lit_html_lit_html_js__WEBPACK_IMPORTED_MODULE_3__[\"SVGTemplateResult\"]; });\n\n/* harmony import */ var _lib_css_tag_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./lib/css-tag.js */ \"../node_modules/lit-element/lib/css-tag.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"supportsAdoptingStyleSheets\", function() { return _lib_css_tag_js__WEBPACK_IMPORTED_MODULE_4__[\"supportsAdoptingStyleSheets\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"CSSResult\", function() { return _lib_css_tag_js__WEBPACK_IMPORTED_MODULE_4__[\"CSSResult\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"unsafeCSS\", function() { return _lib_css_tag_js__WEBPACK_IMPORTED_MODULE_4__[\"unsafeCSS\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"css\", function() { return _lib_css_tag_js__WEBPACK_IMPORTED_MODULE_4__[\"css\"]; });\n\n/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * The main LitElement module, which defines the [[`LitElement`]] base class and\n * related APIs.\n *\n *  LitElement components can define a template and a set of observed\n * properties. Changing an observed property triggers a re-render of the\n * element.\n *\n *  Import [[`LitElement`]] and [[`html`]] from this module to create a\n * component:\n *\n *  ```js\n * import {LitElement, html} from 'lit-element';\n *\n * class MyElement extends LitElement {\n *\n *   // Declare observed properties\n *   static get properties() {\n *     return {\n *       adjective: {}\n *     }\n *   }\n *\n *   constructor() {\n *     this.adjective = 'awesome';\n *   }\n *\n *   // Define the element's template\n *   render() {\n *     return html`<p>your ${adjective} template here</p>`;\n *   }\n * }\n *\n * customElements.define('my-element', MyElement);\n * ```\n *\n * `LitElement` extends [[`UpdatingElement`]] and adds lit-html templating.\n * The `UpdatingElement` class is provided for users that want to build\n * their own custom element base classes that don't use lit-html.\n *\n * @packageDocumentation\n */\n\n\n\n\n\n\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for LitElement usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litElementVersions'] || (window['litElementVersions'] = []))\n    .push('2.4.0');\n/**\n * Sentinal value used to avoid calling lit-html's render function when\n * subclasses do not implement `render`\n */\nconst renderNotImplemented = {};\n/**\n * Base element class that manages element properties and attributes, and\n * renders a lit-html template.\n *\n * To define a component, subclass `LitElement` and implement a\n * `render` method to provide the component's template. Define properties\n * using the [[`properties`]] property or the [[`property`]] decorator.\n */\nclass LitElement extends _lib_updating_element_js__WEBPACK_IMPORTED_MODULE_1__[\"UpdatingElement\"] {\n    /**\n     * Return the array of styles to apply to the element.\n     * Override this method to integrate into a style management system.\n     *\n     * @nocollapse\n     */\n    static getStyles() {\n        return this.styles;\n    }\n    /** @nocollapse */\n    static _getUniqueStyles() {\n        // Only gather styles once per class\n        if (this.hasOwnProperty(JSCompiler_renameProperty('_styles', this))) {\n            return;\n        }\n        // Take care not to call `this.getStyles()` multiple times since this\n        // generates new CSSResults each time.\n        // TODO(sorvell): Since we do not cache CSSResults by input, any\n        // shared styles will generate new stylesheet objects, which is wasteful.\n        // This should be addressed when a browser ships constructable\n        // stylesheets.\n        const userStyles = this.getStyles();\n        if (Array.isArray(userStyles)) {\n            // De-duplicate styles preserving the _last_ instance in the set.\n            // This is a performance optimization to avoid duplicated styles that can\n            // occur especially when composing via subclassing.\n            // The last item is kept to try to preserve the cascade order with the\n            // assumption that it's most important that last added styles override\n            // previous styles.\n            const addStyles = (styles, set) => styles.reduceRight((set, s) => \n            // Note: On IE set.add() does not return the set\n            Array.isArray(s) ? addStyles(s, set) : (set.add(s), set), set);\n            // Array.from does not work on Set in IE, otherwise return\n            // Array.from(addStyles(userStyles, new Set<CSSResult>())).reverse()\n            const set = addStyles(userStyles, new Set());\n            const styles = [];\n            set.forEach((v) => styles.unshift(v));\n            this._styles = styles;\n        }\n        else {\n            this._styles = userStyles === undefined ? [] : [userStyles];\n        }\n        // Ensure that there are no invalid CSSStyleSheet instances here. They are\n        // invalid in two conditions.\n        // (1) the sheet is non-constructible (`sheet` of a HTMLStyleElement), but\n        //     this is impossible to check except via .replaceSync or use\n        // (2) the ShadyCSS polyfill is enabled (:. supportsAdoptingStyleSheets is\n        //     false)\n        this._styles = this._styles.map((s) => {\n            if (s instanceof CSSStyleSheet && !_lib_css_tag_js__WEBPACK_IMPORTED_MODULE_4__[\"supportsAdoptingStyleSheets\"]) {\n                // Flatten the cssText from the passed constructible stylesheet (or\n                // undetectable non-constructible stylesheet). The user might have\n                // expected to update their stylesheets over time, but the alternative\n                // is a crash.\n                const cssText = Array.prototype.slice.call(s.cssRules)\n                    .reduce((css, rule) => css + rule.cssText, '');\n                return Object(_lib_css_tag_js__WEBPACK_IMPORTED_MODULE_4__[\"unsafeCSS\"])(cssText);\n            }\n            return s;\n        });\n    }\n    /**\n     * Performs element initialization. By default this calls\n     * [[`createRenderRoot`]] to create the element [[`renderRoot`]] node and\n     * captures any pre-set values for registered properties.\n     */\n    initialize() {\n        super.initialize();\n        this.constructor._getUniqueStyles();\n        this.renderRoot = this.createRenderRoot();\n        // Note, if renderRoot is not a shadowRoot, styles would/could apply to the\n        // element's getRootNode(). While this could be done, we're choosing not to\n        // support this now since it would require different logic around de-duping.\n        if (window.ShadowRoot && this.renderRoot instanceof window.ShadowRoot) {\n            this.adoptStyles();\n        }\n    }\n    /**\n     * Returns the node into which the element should render and by default\n     * creates and returns an open shadowRoot. Implement to customize where the\n     * element's DOM is rendered. For example, to render into the element's\n     * childNodes, return `this`.\n     * @returns {Element|DocumentFragment} Returns a node into which to render.\n     */\n    createRenderRoot() {\n        return this.attachShadow({ mode: 'open' });\n    }\n    /**\n     * Applies styling to the element shadowRoot using the [[`styles`]]\n     * property. Styling will apply using `shadowRoot.adoptedStyleSheets` where\n     * available and will fallback otherwise. When Shadow DOM is polyfilled,\n     * ShadyCSS scopes styles and adds them to the document. When Shadow DOM\n     * is available but `adoptedStyleSheets` is not, styles are appended to the\n     * end of the `shadowRoot` to [mimic spec\n     * behavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).\n     */\n    adoptStyles() {\n        const styles = this.constructor._styles;\n        if (styles.length === 0) {\n            return;\n        }\n        // There are three separate cases here based on Shadow DOM support.\n        // (1) shadowRoot polyfilled: use ShadyCSS\n        // (2) shadowRoot.adoptedStyleSheets available: use it\n        // (3) shadowRoot.adoptedStyleSheets polyfilled: append styles after\n        // rendering\n        if (window.ShadyCSS !== undefined && !window.ShadyCSS.nativeShadow) {\n            window.ShadyCSS.ScopingShim.prepareAdoptedCssText(styles.map((s) => s.cssText), this.localName);\n        }\n        else if (_lib_css_tag_js__WEBPACK_IMPORTED_MODULE_4__[\"supportsAdoptingStyleSheets\"]) {\n            this.renderRoot.adoptedStyleSheets =\n                styles.map((s) => s instanceof CSSStyleSheet ? s : s.styleSheet);\n        }\n        else {\n            // This must be done after rendering so the actual style insertion is done\n            // in `update`.\n            this._needsShimAdoptedStyleSheets = true;\n        }\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        // Note, first update/render handles styleElement so we only call this if\n        // connected after first update.\n        if (this.hasUpdated && window.ShadyCSS !== undefined) {\n            window.ShadyCSS.styleElement(this);\n        }\n    }\n    /**\n     * Updates the element. This method reflects property values to attributes\n     * and calls `render` to render DOM via lit-html. Setting properties inside\n     * this method will *not* trigger another update.\n     * @param _changedProperties Map of changed properties with old values\n     */\n    update(changedProperties) {\n        // Setting properties in `render` should not trigger an update. Since\n        // updates are allowed after super.update, it's important to call `render`\n        // before that.\n        const templateResult = this.render();\n        super.update(changedProperties);\n        // If render is not implemented by the component, don't call lit-html render\n        if (templateResult !== renderNotImplemented) {\n            this.constructor\n                .render(templateResult, this.renderRoot, { scopeName: this.localName, eventContext: this });\n        }\n        // When native Shadow DOM is used but adoptedStyles are not supported,\n        // insert styling after rendering to ensure adoptedStyles have highest\n        // priority.\n        if (this._needsShimAdoptedStyleSheets) {\n            this._needsShimAdoptedStyleSheets = false;\n            this.constructor._styles.forEach((s) => {\n                const style = document.createElement('style');\n                style.textContent = s.cssText;\n                this.renderRoot.appendChild(style);\n            });\n        }\n    }\n    /**\n     * Invoked on each update to perform rendering tasks. This method may return\n     * any value renderable by lit-html's `NodePart` - typically a\n     * `TemplateResult`. Setting properties inside this method will *not* trigger\n     * the element to update.\n     */\n    render() {\n        return renderNotImplemented;\n    }\n}\n/**\n * Ensure this class is marked as `finalized` as an optimization ensuring\n * it will not needlessly try to `finalize`.\n *\n * Note this property name is a string to prevent breaking Closure JS Compiler\n * optimizations. See updating-element.ts for more information.\n */\nLitElement['finalized'] = true;\n/**\n * Reference to the underlying library method used to render the element's\n * DOM. By default, points to the `render` method from lit-html's shady-render\n * module.\n *\n * **Most users will never need to touch this property.**\n *\n * This  property should not be confused with the `render` instance method,\n * which should be overridden to define a template for the element.\n *\n * Advanced users creating a new base class based on LitElement can override\n * this property to point to a custom render method with a signature that\n * matches [shady-render's `render`\n * method](https://lit-html.polymer-project.org/api/modules/shady_render.html#render).\n *\n * @nocollapse\n */\nLitElement.render = lit_html_lib_shady_render_js__WEBPACK_IMPORTED_MODULE_0__[\"render\"];\n//# sourceMappingURL=lit-element.js.map\n\n//# sourceURL=webpack://Textarena/../node_modules/lit-element/lit-element.js?");

/***/ }),

/***/ "../node_modules/lit-html/directives/repeat.js":
/*!*****************************************************!*\
  !*** ../node_modules/lit-html/directives/repeat.js ***!
  \*****************************************************/
/*! exports provided: repeat */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"repeat\", function() { return repeat; });\n/* harmony import */ var _lit_html_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../lit-html.js */ \"../node_modules/lit-html/lit-html.js\");\n/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n// Helper functions for manipulating parts\n// TODO(kschaaf): Refactor into Part API?\nconst createAndInsertPart = (containerPart, beforePart) => {\n    const container = containerPart.startNode.parentNode;\n    const beforeNode = beforePart === undefined ? containerPart.endNode :\n        beforePart.startNode;\n    const startNode = container.insertBefore(Object(_lit_html_js__WEBPACK_IMPORTED_MODULE_0__[\"createMarker\"])(), beforeNode);\n    container.insertBefore(Object(_lit_html_js__WEBPACK_IMPORTED_MODULE_0__[\"createMarker\"])(), beforeNode);\n    const newPart = new _lit_html_js__WEBPACK_IMPORTED_MODULE_0__[\"NodePart\"](containerPart.options);\n    newPart.insertAfterNode(startNode);\n    return newPart;\n};\nconst updatePart = (part, value) => {\n    part.setValue(value);\n    part.commit();\n    return part;\n};\nconst insertPartBefore = (containerPart, part, ref) => {\n    const container = containerPart.startNode.parentNode;\n    const beforeNode = ref ? ref.startNode : containerPart.endNode;\n    const endNode = part.endNode.nextSibling;\n    if (endNode !== beforeNode) {\n        Object(_lit_html_js__WEBPACK_IMPORTED_MODULE_0__[\"reparentNodes\"])(container, part.startNode, endNode, beforeNode);\n    }\n};\nconst removePart = (part) => {\n    Object(_lit_html_js__WEBPACK_IMPORTED_MODULE_0__[\"removeNodes\"])(part.startNode.parentNode, part.startNode, part.endNode.nextSibling);\n};\n// Helper for generating a map of array item to its index over a subset\n// of an array (used to lazily generate `newKeyToIndexMap` and\n// `oldKeyToIndexMap`)\nconst generateMap = (list, start, end) => {\n    const map = new Map();\n    for (let i = start; i <= end; i++) {\n        map.set(list[i], i);\n    }\n    return map;\n};\n// Stores previous ordered list of parts and map of key to index\nconst partListCache = new WeakMap();\nconst keyListCache = new WeakMap();\n/**\n * A directive that repeats a series of values (usually `TemplateResults`)\n * generated from an iterable, and updates those items efficiently when the\n * iterable changes based on user-provided `keys` associated with each item.\n *\n * Note that if a `keyFn` is provided, strict key-to-DOM mapping is maintained,\n * meaning previous DOM for a given key is moved into the new position if\n * needed, and DOM will never be reused with values for different keys (new DOM\n * will always be created for new keys). This is generally the most efficient\n * way to use `repeat` since it performs minimum unnecessary work for insertions\n * and removals.\n *\n * IMPORTANT: If providing a `keyFn`, keys *must* be unique for all items in a\n * given call to `repeat`. The behavior when two or more items have the same key\n * is undefined.\n *\n * If no `keyFn` is provided, this directive will perform similar to mapping\n * items to values, and DOM will be reused against potentially different items.\n */\nconst repeat = Object(_lit_html_js__WEBPACK_IMPORTED_MODULE_0__[\"directive\"])((items, keyFnOrTemplate, template) => {\n    let keyFn;\n    if (template === undefined) {\n        template = keyFnOrTemplate;\n    }\n    else if (keyFnOrTemplate !== undefined) {\n        keyFn = keyFnOrTemplate;\n    }\n    return (containerPart) => {\n        if (!(containerPart instanceof _lit_html_js__WEBPACK_IMPORTED_MODULE_0__[\"NodePart\"])) {\n            throw new Error('repeat can only be used in text bindings');\n        }\n        // Old part & key lists are retrieved from the last update\n        // (associated with the part for this instance of the directive)\n        const oldParts = partListCache.get(containerPart) || [];\n        const oldKeys = keyListCache.get(containerPart) || [];\n        // New part list will be built up as we go (either reused from\n        // old parts or created for new keys in this update). This is\n        // saved in the above cache at the end of the update.\n        const newParts = [];\n        // New value list is eagerly generated from items along with a\n        // parallel array indicating its key.\n        const newValues = [];\n        const newKeys = [];\n        let index = 0;\n        for (const item of items) {\n            newKeys[index] = keyFn ? keyFn(item, index) : index;\n            newValues[index] = template(item, index);\n            index++;\n        }\n        // Maps from key to index for current and previous update; these\n        // are generated lazily only when needed as a performance\n        // optimization, since they are only required for multiple\n        // non-contiguous changes in the list, which are less common.\n        let newKeyToIndexMap;\n        let oldKeyToIndexMap;\n        // Head and tail pointers to old parts and new values\n        let oldHead = 0;\n        let oldTail = oldParts.length - 1;\n        let newHead = 0;\n        let newTail = newValues.length - 1;\n        // Overview of O(n) reconciliation algorithm (general approach\n        // based on ideas found in ivi, vue, snabbdom, etc.):\n        //\n        // * We start with the list of old parts and new values (and\n        //   arrays of their respective keys), head/tail pointers into\n        //   each, and we build up the new list of parts by updating\n        //   (and when needed, moving) old parts or creating new ones.\n        //   The initial scenario might look like this (for brevity of\n        //   the diagrams, the numbers in the array reflect keys\n        //   associated with the old parts or new values, although keys\n        //   and parts/values are actually stored in parallel arrays\n        //   indexed using the same head/tail pointers):\n        //\n        //      oldHead v                 v oldTail\n        //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n        //   newParts: [ ,  ,  ,  ,  ,  ,  ]\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6] <- reflects the user's new\n        //                                      item order\n        //      newHead ^                 ^ newTail\n        //\n        // * Iterate old & new lists from both sides, updating,\n        //   swapping, or removing parts at the head/tail locations\n        //   until neither head nor tail can move.\n        //\n        // * Example below: keys at head pointers match, so update old\n        //   part 0 in-place (no need to move it) and record part 0 in\n        //   the `newParts` list. The last thing we do is advance the\n        //   `oldHead` and `newHead` pointers (will be reflected in the\n        //   next diagram).\n        //\n        //      oldHead v                 v oldTail\n        //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n        //   newParts: [0,  ,  ,  ,  ,  ,  ] <- heads matched: update 0\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance both oldHead\n        //                                      & newHead\n        //      newHead ^                 ^ newTail\n        //\n        // * Example below: head pointers don't match, but tail\n        //   pointers do, so update part 6 in place (no need to move\n        //   it), and record part 6 in the `newParts` list. Last,\n        //   advance the `oldTail` and `oldHead` pointers.\n        //\n        //         oldHead v              v oldTail\n        //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n        //   newParts: [0,  ,  ,  ,  ,  , 6] <- tails matched: update 6\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance both oldTail\n        //                                      & newTail\n        //         newHead ^              ^ newTail\n        //\n        // * If neither head nor tail match; next check if one of the\n        //   old head/tail items was removed. We first need to generate\n        //   the reverse map of new keys to index (`newKeyToIndexMap`),\n        //   which is done once lazily as a performance optimization,\n        //   since we only hit this case if multiple non-contiguous\n        //   changes were made. Note that for contiguous removal\n        //   anywhere in the list, the head and tails would advance\n        //   from either end and pass each other before we get to this\n        //   case and removals would be handled in the final while loop\n        //   without needing to generate the map.\n        //\n        // * Example below: The key at `oldTail` was removed (no longer\n        //   in the `newKeyToIndexMap`), so remove that part from the\n        //   DOM and advance just the `oldTail` pointer.\n        //\n        //         oldHead v           v oldTail\n        //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n        //   newParts: [0,  ,  ,  ,  ,  , 6] <- 5 not in new map: remove\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    5 and advance oldTail\n        //         newHead ^           ^ newTail\n        //\n        // * Once head and tail cannot move, any mismatches are due to\n        //   either new or moved items; if a new key is in the previous\n        //   \"old key to old index\" map, move the old part to the new\n        //   location, otherwise create and insert a new part. Note\n        //   that when moving an old part we null its position in the\n        //   oldParts array if it lies between the head and tail so we\n        //   know to skip it when the pointers get there.\n        //\n        // * Example below: neither head nor tail match, and neither\n        //   were removed; so find the `newHead` key in the\n        //   `oldKeyToIndexMap`, and move that old part's DOM into the\n        //   next head position (before `oldParts[oldHead]`). Last,\n        //   null the part in the `oldPart` array since it was\n        //   somewhere in the remaining oldParts still to be scanned\n        //   (between the head and tail pointers) so that we know to\n        //   skip that old part on future iterations.\n        //\n        //         oldHead v        v oldTail\n        //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n        //   newParts: [0, 2,  ,  ,  ,  , 6] <- stuck: update & move 2\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    into place and advance\n        //                                      newHead\n        //         newHead ^           ^ newTail\n        //\n        // * Note that for moves/insertions like the one above, a part\n        //   inserted at the head pointer is inserted before the\n        //   current `oldParts[oldHead]`, and a part inserted at the\n        //   tail pointer is inserted before `newParts[newTail+1]`. The\n        //   seeming asymmetry lies in the fact that new parts are\n        //   moved into place outside in, so to the right of the head\n        //   pointer are old parts, and to the right of the tail\n        //   pointer are new parts.\n        //\n        // * We always restart back from the top of the algorithm,\n        //   allowing matching and simple updates in place to\n        //   continue...\n        //\n        // * Example below: the head pointers once again match, so\n        //   simply update part 1 and record it in the `newParts`\n        //   array.  Last, advance both head pointers.\n        //\n        //         oldHead v        v oldTail\n        //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n        //   newParts: [0, 2, 1,  ,  ,  , 6] <- heads matched: update 1\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance both oldHead\n        //                                      & newHead\n        //            newHead ^        ^ newTail\n        //\n        // * As mentioned above, items that were moved as a result of\n        //   being stuck (the final else clause in the code below) are\n        //   marked with null, so we always advance old pointers over\n        //   these so we're comparing the next actual old value on\n        //   either end.\n        //\n        // * Example below: `oldHead` is null (already placed in\n        //   newParts), so advance `oldHead`.\n        //\n        //            oldHead v     v oldTail\n        //   oldKeys:  [0, 1, -, 3, 4, 5, 6] <- old head already used:\n        //   newParts: [0, 2, 1,  ,  ,  , 6]    advance oldHead\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]\n        //               newHead ^     ^ newTail\n        //\n        // * Note it's not critical to mark old parts as null when they\n        //   are moved from head to tail or tail to head, since they\n        //   will be outside the pointer range and never visited again.\n        //\n        // * Example below: Here the old tail key matches the new head\n        //   key, so the part at the `oldTail` position and move its\n        //   DOM to the new head position (before `oldParts[oldHead]`).\n        //   Last, advance `oldTail` and `newHead` pointers.\n        //\n        //               oldHead v  v oldTail\n        //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n        //   newParts: [0, 2, 1, 4,  ,  , 6] <- old tail matches new\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]   head: update & move 4,\n        //                                     advance oldTail & newHead\n        //               newHead ^     ^ newTail\n        //\n        // * Example below: Old and new head keys match, so update the\n        //   old head part in place, and advance the `oldHead` and\n        //   `newHead` pointers.\n        //\n        //               oldHead v oldTail\n        //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n        //   newParts: [0, 2, 1, 4, 3,   ,6] <- heads match: update 3\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance oldHead &\n        //                                      newHead\n        //                  newHead ^  ^ newTail\n        //\n        // * Once the new or old pointers move past each other then all\n        //   we have left is additions (if old list exhausted) or\n        //   removals (if new list exhausted). Those are handled in the\n        //   final while loops at the end.\n        //\n        // * Example below: `oldHead` exceeded `oldTail`, so we're done\n        //   with the main loop.  Create the remaining part and insert\n        //   it at the new head position, and the update is complete.\n        //\n        //                   (oldHead > oldTail)\n        //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n        //   newParts: [0, 2, 1, 4, 3, 7 ,6] <- create and insert 7\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]\n        //                     newHead ^ newTail\n        //\n        // * Note that the order of the if/else clauses is not\n        //   important to the algorithm, as long as the null checks\n        //   come first (to ensure we're always working on valid old\n        //   parts) and that the final else clause comes last (since\n        //   that's where the expensive moves occur). The order of\n        //   remaining clauses is is just a simple guess at which cases\n        //   will be most common.\n        //\n        // * TODO(kschaaf) Note, we could calculate the longest\n        //   increasing subsequence (LIS) of old items in new position,\n        //   and only move those not in the LIS set. However that costs\n        //   O(nlogn) time and adds a bit more code, and only helps\n        //   make rare types of mutations require fewer moves. The\n        //   above handles removes, adds, reversal, swaps, and single\n        //   moves of contiguous items in linear time, in the minimum\n        //   number of moves. As the number of multiple moves where LIS\n        //   might help approaches a random shuffle, the LIS\n        //   optimization becomes less helpful, so it seems not worth\n        //   the code at this point. Could reconsider if a compelling\n        //   case arises.\n        while (oldHead <= oldTail && newHead <= newTail) {\n            if (oldParts[oldHead] === null) {\n                // `null` means old part at head has already been used\n                // below; skip\n                oldHead++;\n            }\n            else if (oldParts[oldTail] === null) {\n                // `null` means old part at tail has already been used\n                // below; skip\n                oldTail--;\n            }\n            else if (oldKeys[oldHead] === newKeys[newHead]) {\n                // Old head matches new head; update in place\n                newParts[newHead] =\n                    updatePart(oldParts[oldHead], newValues[newHead]);\n                oldHead++;\n                newHead++;\n            }\n            else if (oldKeys[oldTail] === newKeys[newTail]) {\n                // Old tail matches new tail; update in place\n                newParts[newTail] =\n                    updatePart(oldParts[oldTail], newValues[newTail]);\n                oldTail--;\n                newTail--;\n            }\n            else if (oldKeys[oldHead] === newKeys[newTail]) {\n                // Old head matches new tail; update and move to new tail\n                newParts[newTail] =\n                    updatePart(oldParts[oldHead], newValues[newTail]);\n                insertPartBefore(containerPart, oldParts[oldHead], newParts[newTail + 1]);\n                oldHead++;\n                newTail--;\n            }\n            else if (oldKeys[oldTail] === newKeys[newHead]) {\n                // Old tail matches new head; update and move to new head\n                newParts[newHead] =\n                    updatePart(oldParts[oldTail], newValues[newHead]);\n                insertPartBefore(containerPart, oldParts[oldTail], oldParts[oldHead]);\n                oldTail--;\n                newHead++;\n            }\n            else {\n                if (newKeyToIndexMap === undefined) {\n                    // Lazily generate key-to-index maps, used for removals &\n                    // moves below\n                    newKeyToIndexMap = generateMap(newKeys, newHead, newTail);\n                    oldKeyToIndexMap = generateMap(oldKeys, oldHead, oldTail);\n                }\n                if (!newKeyToIndexMap.has(oldKeys[oldHead])) {\n                    // Old head is no longer in new list; remove\n                    removePart(oldParts[oldHead]);\n                    oldHead++;\n                }\n                else if (!newKeyToIndexMap.has(oldKeys[oldTail])) {\n                    // Old tail is no longer in new list; remove\n                    removePart(oldParts[oldTail]);\n                    oldTail--;\n                }\n                else {\n                    // Any mismatches at this point are due to additions or\n                    // moves; see if we have an old part we can reuse and move\n                    // into place\n                    const oldIndex = oldKeyToIndexMap.get(newKeys[newHead]);\n                    const oldPart = oldIndex !== undefined ? oldParts[oldIndex] : null;\n                    if (oldPart === null) {\n                        // No old part for this value; create a new one and\n                        // insert it\n                        const newPart = createAndInsertPart(containerPart, oldParts[oldHead]);\n                        updatePart(newPart, newValues[newHead]);\n                        newParts[newHead] = newPart;\n                    }\n                    else {\n                        // Reuse old part\n                        newParts[newHead] =\n                            updatePart(oldPart, newValues[newHead]);\n                        insertPartBefore(containerPart, oldPart, oldParts[oldHead]);\n                        // This marks the old part as having been used, so that\n                        // it will be skipped in the first two checks above\n                        oldParts[oldIndex] = null;\n                    }\n                    newHead++;\n                }\n            }\n        }\n        // Add parts for any remaining new values\n        while (newHead <= newTail) {\n            // For all remaining additions, we insert before last new\n            // tail, since old pointers are no longer valid\n            const newPart = createAndInsertPart(containerPart, newParts[newTail + 1]);\n            updatePart(newPart, newValues[newHead]);\n            newParts[newHead++] = newPart;\n        }\n        // Remove any remaining unused old parts\n        while (oldHead <= oldTail) {\n            const oldPart = oldParts[oldHead++];\n            if (oldPart !== null) {\n                removePart(oldPart);\n            }\n        }\n        // Save order of new parts for next round\n        partListCache.set(containerPart, newParts);\n        keyListCache.set(containerPart, newKeys);\n    };\n});\n//# sourceMappingURL=repeat.js.map\n\n//# sourceURL=webpack://Textarena/../node_modules/lit-html/directives/repeat.js?");

/***/ }),

/***/ "../node_modules/lit-html/directives/unsafe-html.js":
/*!**********************************************************!*\
  !*** ../node_modules/lit-html/directives/unsafe-html.js ***!
  \**********************************************************/
/*! exports provided: unsafeHTML */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"unsafeHTML\", function() { return unsafeHTML; });\n/* harmony import */ var _lib_parts_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../lib/parts.js */ \"../node_modules/lit-html/lib/parts.js\");\n/* harmony import */ var _lit_html_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../lit-html.js */ \"../node_modules/lit-html/lit-html.js\");\n/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n\n// For each part, remember the value that was last rendered to the part by the\n// unsafeHTML directive, and the DocumentFragment that was last set as a value.\n// The DocumentFragment is used as a unique key to check if the last value\n// rendered to the part was with unsafeHTML. If not, we'll always re-render the\n// value passed to unsafeHTML.\nconst previousValues = new WeakMap();\n/**\n * Renders the result as HTML, rather than text.\n *\n * Note, this is unsafe to use with any user-provided input that hasn't been\n * sanitized or escaped, as it may lead to cross-site-scripting\n * vulnerabilities.\n */\nconst unsafeHTML = Object(_lit_html_js__WEBPACK_IMPORTED_MODULE_1__[\"directive\"])((value) => (part) => {\n    if (!(part instanceof _lit_html_js__WEBPACK_IMPORTED_MODULE_1__[\"NodePart\"])) {\n        throw new Error('unsafeHTML can only be used in text bindings');\n    }\n    const previousValue = previousValues.get(part);\n    if (previousValue !== undefined && Object(_lib_parts_js__WEBPACK_IMPORTED_MODULE_0__[\"isPrimitive\"])(value) &&\n        value === previousValue.value && part.value === previousValue.fragment) {\n        return;\n    }\n    const template = document.createElement('template');\n    template.innerHTML = value; // innerHTML casts to string internally\n    const fragment = document.importNode(template.content, true);\n    part.setValue(fragment);\n    previousValues.set(part, { value, fragment });\n});\n//# sourceMappingURL=unsafe-html.js.map\n\n//# sourceURL=webpack://Textarena/../node_modules/lit-html/directives/unsafe-html.js?");

/***/ }),

/***/ "../node_modules/lit-html/lib/default-template-processor.js":
/*!******************************************************************!*\
  !*** ../node_modules/lit-html/lib/default-template-processor.js ***!
  \******************************************************************/
/*! exports provided: DefaultTemplateProcessor, defaultTemplateProcessor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DefaultTemplateProcessor\", function() { return DefaultTemplateProcessor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"defaultTemplateProcessor\", function() { return defaultTemplateProcessor; });\n/* harmony import */ var _parts_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./parts.js */ \"../node_modules/lit-html/lib/parts.js\");\n/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * Creates Parts when a template is instantiated.\n */\nclass DefaultTemplateProcessor {\n    /**\n     * Create parts for an attribute-position binding, given the event, attribute\n     * name, and string literals.\n     *\n     * @param element The element containing the binding\n     * @param name  The attribute name\n     * @param strings The string literals. There are always at least two strings,\n     *   event for fully-controlled bindings with a single expression.\n     */\n    handleAttributeExpressions(element, name, strings, options) {\n        const prefix = name[0];\n        if (prefix === '.') {\n            const committer = new _parts_js__WEBPACK_IMPORTED_MODULE_0__[\"PropertyCommitter\"](element, name.slice(1), strings);\n            return committer.parts;\n        }\n        if (prefix === '@') {\n            return [new _parts_js__WEBPACK_IMPORTED_MODULE_0__[\"EventPart\"](element, name.slice(1), options.eventContext)];\n        }\n        if (prefix === '?') {\n            return [new _parts_js__WEBPACK_IMPORTED_MODULE_0__[\"BooleanAttributePart\"](element, name.slice(1), strings)];\n        }\n        const committer = new _parts_js__WEBPACK_IMPORTED_MODULE_0__[\"AttributeCommitter\"](element, name, strings);\n        return committer.parts;\n    }\n    /**\n     * Create parts for a text-position binding.\n     * @param templateFactory\n     */\n    handleTextExpression(options) {\n        return new _parts_js__WEBPACK_IMPORTED_MODULE_0__[\"NodePart\"](options);\n    }\n}\nconst defaultTemplateProcessor = new DefaultTemplateProcessor();\n//# sourceMappingURL=default-template-processor.js.map\n\n//# sourceURL=webpack://Textarena/../node_modules/lit-html/lib/default-template-processor.js?");

/***/ }),

/***/ "../node_modules/lit-html/lib/directive.js":
/*!*************************************************!*\
  !*** ../node_modules/lit-html/lib/directive.js ***!
  \*************************************************/
/*! exports provided: directive, isDirective */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"directive\", function() { return directive; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isDirective\", function() { return isDirective; });\n/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst directives = new WeakMap();\n/**\n * Brands a function as a directive factory function so that lit-html will call\n * the function during template rendering, rather than passing as a value.\n *\n * A _directive_ is a function that takes a Part as an argument. It has the\n * signature: `(part: Part) => void`.\n *\n * A directive _factory_ is a function that takes arguments for data and\n * configuration and returns a directive. Users of directive usually refer to\n * the directive factory as the directive. For example, \"The repeat directive\".\n *\n * Usually a template author will invoke a directive factory in their template\n * with relevant arguments, which will then return a directive function.\n *\n * Here's an example of using the `repeat()` directive factory that takes an\n * array and a function to render an item:\n *\n * ```js\n * html`<ul><${repeat(items, (item) => html`<li>${item}</li>`)}</ul>`\n * ```\n *\n * When `repeat` is invoked, it returns a directive function that closes over\n * `items` and the template function. When the outer template is rendered, the\n * return directive function is called with the Part for the expression.\n * `repeat` then performs it's custom logic to render multiple items.\n *\n * @param f The directive factory function. Must be a function that returns a\n * function of the signature `(part: Part) => void`. The returned function will\n * be called with the part object.\n *\n * @example\n *\n * import {directive, html} from 'lit-html';\n *\n * const immutable = directive((v) => (part) => {\n *   if (part.value !== v) {\n *     part.setValue(v)\n *   }\n * });\n */\nconst directive = (f) => ((...args) => {\n    const d = f(...args);\n    directives.set(d, true);\n    return d;\n});\nconst isDirective = (o) => {\n    return typeof o === 'function' && directives.has(o);\n};\n//# sourceMappingURL=directive.js.map\n\n//# sourceURL=webpack://Textarena/../node_modules/lit-html/lib/directive.js?");

/***/ }),

/***/ "../node_modules/lit-html/lib/dom.js":
/*!*******************************************!*\
  !*** ../node_modules/lit-html/lib/dom.js ***!
  \*******************************************/
/*! exports provided: isCEPolyfill, reparentNodes, removeNodes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isCEPolyfill\", function() { return isCEPolyfill; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"reparentNodes\", function() { return reparentNodes; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"removeNodes\", function() { return removeNodes; });\n/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * True if the custom elements polyfill is in use.\n */\nconst isCEPolyfill = typeof window !== 'undefined' &&\n    window.customElements != null &&\n    window.customElements.polyfillWrapFlushCallback !==\n        undefined;\n/**\n * Reparents nodes, starting from `start` (inclusive) to `end` (exclusive),\n * into another container (could be the same container), before `before`. If\n * `before` is null, it appends the nodes to the container.\n */\nconst reparentNodes = (container, start, end = null, before = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.insertBefore(start, before);\n        start = n;\n    }\n};\n/**\n * Removes nodes, starting from `start` (inclusive) to `end` (exclusive), from\n * `container`.\n */\nconst removeNodes = (container, start, end = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.removeChild(start);\n        start = n;\n    }\n};\n//# sourceMappingURL=dom.js.map\n\n//# sourceURL=webpack://Textarena/../node_modules/lit-html/lib/dom.js?");

/***/ }),

/***/ "../node_modules/lit-html/lib/modify-template.js":
/*!*******************************************************!*\
  !*** ../node_modules/lit-html/lib/modify-template.js ***!
  \*******************************************************/
/*! exports provided: removeNodesFromTemplate, insertNodeIntoTemplate */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"removeNodesFromTemplate\", function() { return removeNodesFromTemplate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"insertNodeIntoTemplate\", function() { return insertNodeIntoTemplate; });\n/* harmony import */ var _template_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./template.js */ \"../node_modules/lit-html/lib/template.js\");\n/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nconst walkerNodeFilter = 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */;\n/**\n * Removes the list of nodes from a Template safely. In addition to removing\n * nodes from the Template, the Template part indices are updated to match\n * the mutated Template DOM.\n *\n * As the template is walked the removal state is tracked and\n * part indices are adjusted as needed.\n *\n * div\n *   div#1 (remove) <-- start removing (removing node is div#1)\n *     div\n *       div#2 (remove)  <-- continue removing (removing node is still div#1)\n *         div\n * div <-- stop removing since previous sibling is the removing node (div#1,\n * removed 4 nodes)\n */\nfunction removeNodesFromTemplate(template, nodesToRemove) {\n    const { element: { content }, parts } = template;\n    const walker = document.createTreeWalker(content, walkerNodeFilter, null, false);\n    let partIndex = nextActiveIndexInTemplateParts(parts);\n    let part = parts[partIndex];\n    let nodeIndex = -1;\n    let removeCount = 0;\n    const nodesToRemoveInTemplate = [];\n    let currentRemovingNode = null;\n    while (walker.nextNode()) {\n        nodeIndex++;\n        const node = walker.currentNode;\n        // End removal if stepped past the removing node\n        if (node.previousSibling === currentRemovingNode) {\n            currentRemovingNode = null;\n        }\n        // A node to remove was found in the template\n        if (nodesToRemove.has(node)) {\n            nodesToRemoveInTemplate.push(node);\n            // Track node we're removing\n            if (currentRemovingNode === null) {\n                currentRemovingNode = node;\n            }\n        }\n        // When removing, increment count by which to adjust subsequent part indices\n        if (currentRemovingNode !== null) {\n            removeCount++;\n        }\n        while (part !== undefined && part.index === nodeIndex) {\n            // If part is in a removed node deactivate it by setting index to -1 or\n            // adjust the index as needed.\n            part.index = currentRemovingNode !== null ? -1 : part.index - removeCount;\n            // go to the next active part.\n            partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n            part = parts[partIndex];\n        }\n    }\n    nodesToRemoveInTemplate.forEach((n) => n.parentNode.removeChild(n));\n}\nconst countNodes = (node) => {\n    let count = (node.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */) ? 0 : 1;\n    const walker = document.createTreeWalker(node, walkerNodeFilter, null, false);\n    while (walker.nextNode()) {\n        count++;\n    }\n    return count;\n};\nconst nextActiveIndexInTemplateParts = (parts, startIndex = -1) => {\n    for (let i = startIndex + 1; i < parts.length; i++) {\n        const part = parts[i];\n        if (Object(_template_js__WEBPACK_IMPORTED_MODULE_0__[\"isTemplatePartActive\"])(part)) {\n            return i;\n        }\n    }\n    return -1;\n};\n/**\n * Inserts the given node into the Template, optionally before the given\n * refNode. In addition to inserting the node into the Template, the Template\n * part indices are updated to match the mutated Template DOM.\n */\nfunction insertNodeIntoTemplate(template, node, refNode = null) {\n    const { element: { content }, parts } = template;\n    // If there's no refNode, then put node at end of template.\n    // No part indices need to be shifted in this case.\n    if (refNode === null || refNode === undefined) {\n        content.appendChild(node);\n        return;\n    }\n    const walker = document.createTreeWalker(content, walkerNodeFilter, null, false);\n    let partIndex = nextActiveIndexInTemplateParts(parts);\n    let insertCount = 0;\n    let walkerIndex = -1;\n    while (walker.nextNode()) {\n        walkerIndex++;\n        const walkerNode = walker.currentNode;\n        if (walkerNode === refNode) {\n            insertCount = countNodes(node);\n            refNode.parentNode.insertBefore(node, refNode);\n        }\n        while (partIndex !== -1 && parts[partIndex].index === walkerIndex) {\n            // If we've inserted the node, simply adjust all subsequent parts\n            if (insertCount > 0) {\n                while (partIndex !== -1) {\n                    parts[partIndex].index += insertCount;\n                    partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n                }\n                return;\n            }\n            partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n        }\n    }\n}\n//# sourceMappingURL=modify-template.js.map\n\n//# sourceURL=webpack://Textarena/../node_modules/lit-html/lib/modify-template.js?");

/***/ }),

/***/ "../node_modules/lit-html/lib/part.js":
/*!********************************************!*\
  !*** ../node_modules/lit-html/lib/part.js ***!
  \********************************************/
/*! exports provided: noChange, nothing */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"noChange\", function() { return noChange; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"nothing\", function() { return nothing; });\n/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nconst noChange = {};\n/**\n * A sentinel value that signals a NodePart to fully clear its content.\n */\nconst nothing = {};\n//# sourceMappingURL=part.js.map\n\n//# sourceURL=webpack://Textarena/../node_modules/lit-html/lib/part.js?");

/***/ }),

/***/ "../node_modules/lit-html/lib/parts.js":
/*!*********************************************!*\
  !*** ../node_modules/lit-html/lib/parts.js ***!
  \*********************************************/
/*! exports provided: isPrimitive, isIterable, AttributeCommitter, AttributePart, NodePart, BooleanAttributePart, PropertyCommitter, PropertyPart, EventPart */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isPrimitive\", function() { return isPrimitive; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isIterable\", function() { return isIterable; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AttributeCommitter\", function() { return AttributeCommitter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AttributePart\", function() { return AttributePart; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NodePart\", function() { return NodePart; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BooleanAttributePart\", function() { return BooleanAttributePart; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PropertyCommitter\", function() { return PropertyCommitter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PropertyPart\", function() { return PropertyPart; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EventPart\", function() { return EventPart; });\n/* harmony import */ var _directive_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./directive.js */ \"../node_modules/lit-html/lib/directive.js\");\n/* harmony import */ var _dom_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dom.js */ \"../node_modules/lit-html/lib/dom.js\");\n/* harmony import */ var _part_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./part.js */ \"../node_modules/lit-html/lib/part.js\");\n/* harmony import */ var _template_instance_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./template-instance.js */ \"../node_modules/lit-html/lib/template-instance.js\");\n/* harmony import */ var _template_result_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./template-result.js */ \"../node_modules/lit-html/lib/template-result.js\");\n/* harmony import */ var _template_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./template.js */ \"../node_modules/lit-html/lib/template.js\");\n/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n\n\n\n\n\nconst isPrimitive = (value) => {\n    return (value === null ||\n        !(typeof value === 'object' || typeof value === 'function'));\n};\nconst isIterable = (value) => {\n    return Array.isArray(value) ||\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        !!(value && value[Symbol.iterator]);\n};\n/**\n * Writes attribute values to the DOM for a group of AttributeParts bound to a\n * single attribute. The value is only set once even if there are multiple parts\n * for an attribute.\n */\nclass AttributeCommitter {\n    constructor(element, name, strings) {\n        this.dirty = true;\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n        this.parts = [];\n        for (let i = 0; i < strings.length - 1; i++) {\n            this.parts[i] = this._createPart();\n        }\n    }\n    /**\n     * Creates a single part. Override this to create a differnt type of part.\n     */\n    _createPart() {\n        return new AttributePart(this);\n    }\n    _getValue() {\n        const strings = this.strings;\n        const l = strings.length - 1;\n        const parts = this.parts;\n        // If we're assigning an attribute via syntax like:\n        //    attr=\"${foo}\"  or  attr=${foo}\n        // but not\n        //    attr=\"${foo} ${bar}\" or attr=\"${foo} baz\"\n        // then we don't want to coerce the attribute value into one long\n        // string. Instead we want to just return the value itself directly,\n        // so that sanitizeDOMValue can get the actual value rather than\n        // String(value)\n        // The exception is if v is an array, in which case we do want to smash\n        // it together into a string without calling String() on the array.\n        //\n        // This also allows trusted values (when using TrustedTypes) being\n        // assigned to DOM sinks without being stringified in the process.\n        if (l === 1 && strings[0] === '' && strings[1] === '') {\n            const v = parts[0].value;\n            if (typeof v === 'symbol') {\n                return String(v);\n            }\n            if (typeof v === 'string' || !isIterable(v)) {\n                return v;\n            }\n        }\n        let text = '';\n        for (let i = 0; i < l; i++) {\n            text += strings[i];\n            const part = parts[i];\n            if (part !== undefined) {\n                const v = part.value;\n                if (isPrimitive(v) || !isIterable(v)) {\n                    text += typeof v === 'string' ? v : String(v);\n                }\n                else {\n                    for (const t of v) {\n                        text += typeof t === 'string' ? t : String(t);\n                    }\n                }\n            }\n        }\n        text += strings[l];\n        return text;\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            this.element.setAttribute(this.name, this._getValue());\n        }\n    }\n}\n/**\n * A Part that controls all or part of an attribute value.\n */\nclass AttributePart {\n    constructor(committer) {\n        this.value = undefined;\n        this.committer = committer;\n    }\n    setValue(value) {\n        if (value !== _part_js__WEBPACK_IMPORTED_MODULE_2__[\"noChange\"] && (!isPrimitive(value) || value !== this.value)) {\n            this.value = value;\n            // If the value is a not a directive, dirty the committer so that it'll\n            // call setAttribute. If the value is a directive, it'll dirty the\n            // committer if it calls setValue().\n            if (!Object(_directive_js__WEBPACK_IMPORTED_MODULE_0__[\"isDirective\"])(value)) {\n                this.committer.dirty = true;\n            }\n        }\n    }\n    commit() {\n        while (Object(_directive_js__WEBPACK_IMPORTED_MODULE_0__[\"isDirective\"])(this.value)) {\n            const directive = this.value;\n            this.value = _part_js__WEBPACK_IMPORTED_MODULE_2__[\"noChange\"];\n            directive(this);\n        }\n        if (this.value === _part_js__WEBPACK_IMPORTED_MODULE_2__[\"noChange\"]) {\n            return;\n        }\n        this.committer.commit();\n    }\n}\n/**\n * A Part that controls a location within a Node tree. Like a Range, NodePart\n * has start and end locations and can set and update the Nodes between those\n * locations.\n *\n * NodeParts support several value types: primitives, Nodes, TemplateResults,\n * as well as arrays and iterables of those types.\n */\nclass NodePart {\n    constructor(options) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.options = options;\n    }\n    /**\n     * Appends this part into a container.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendInto(container) {\n        this.startNode = container.appendChild(Object(_template_js__WEBPACK_IMPORTED_MODULE_5__[\"createMarker\"])());\n        this.endNode = container.appendChild(Object(_template_js__WEBPACK_IMPORTED_MODULE_5__[\"createMarker\"])());\n    }\n    /**\n     * Inserts this part after the `ref` node (between `ref` and `ref`'s next\n     * sibling). Both `ref` and its next sibling must be static, unchanging nodes\n     * such as those that appear in a literal section of a template.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterNode(ref) {\n        this.startNode = ref;\n        this.endNode = ref.nextSibling;\n    }\n    /**\n     * Appends this part into a parent part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendIntoPart(part) {\n        part.__insert(this.startNode = Object(_template_js__WEBPACK_IMPORTED_MODULE_5__[\"createMarker\"])());\n        part.__insert(this.endNode = Object(_template_js__WEBPACK_IMPORTED_MODULE_5__[\"createMarker\"])());\n    }\n    /**\n     * Inserts this part after the `ref` part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterPart(ref) {\n        ref.__insert(this.startNode = Object(_template_js__WEBPACK_IMPORTED_MODULE_5__[\"createMarker\"])());\n        this.endNode = ref.endNode;\n        ref.endNode = this.startNode;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        if (this.startNode.parentNode === null) {\n            return;\n        }\n        while (Object(_directive_js__WEBPACK_IMPORTED_MODULE_0__[\"isDirective\"])(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = _part_js__WEBPACK_IMPORTED_MODULE_2__[\"noChange\"];\n            directive(this);\n        }\n        const value = this.__pendingValue;\n        if (value === _part_js__WEBPACK_IMPORTED_MODULE_2__[\"noChange\"]) {\n            return;\n        }\n        if (isPrimitive(value)) {\n            if (value !== this.value) {\n                this.__commitText(value);\n            }\n        }\n        else if (value instanceof _template_result_js__WEBPACK_IMPORTED_MODULE_4__[\"TemplateResult\"]) {\n            this.__commitTemplateResult(value);\n        }\n        else if (value instanceof Node) {\n            this.__commitNode(value);\n        }\n        else if (isIterable(value)) {\n            this.__commitIterable(value);\n        }\n        else if (value === _part_js__WEBPACK_IMPORTED_MODULE_2__[\"nothing\"]) {\n            this.value = _part_js__WEBPACK_IMPORTED_MODULE_2__[\"nothing\"];\n            this.clear();\n        }\n        else {\n            // Fallback, will render the string representation\n            this.__commitText(value);\n        }\n    }\n    __insert(node) {\n        this.endNode.parentNode.insertBefore(node, this.endNode);\n    }\n    __commitNode(value) {\n        if (this.value === value) {\n            return;\n        }\n        this.clear();\n        this.__insert(value);\n        this.value = value;\n    }\n    __commitText(value) {\n        const node = this.startNode.nextSibling;\n        value = value == null ? '' : value;\n        // If `value` isn't already a string, we explicitly convert it here in case\n        // it can't be implicitly converted - i.e. it's a symbol.\n        const valueAsString = typeof value === 'string' ? value : String(value);\n        if (node === this.endNode.previousSibling &&\n            node.nodeType === 3 /* Node.TEXT_NODE */) {\n            // If we only have a single text node between the markers, we can just\n            // set its value, rather than replacing it.\n            // TODO(justinfagnani): Can we just check if this.value is primitive?\n            node.data = valueAsString;\n        }\n        else {\n            this.__commitNode(document.createTextNode(valueAsString));\n        }\n        this.value = value;\n    }\n    __commitTemplateResult(value) {\n        const template = this.options.templateFactory(value);\n        if (this.value instanceof _template_instance_js__WEBPACK_IMPORTED_MODULE_3__[\"TemplateInstance\"] &&\n            this.value.template === template) {\n            this.value.update(value.values);\n        }\n        else {\n            // Make sure we propagate the template processor from the TemplateResult\n            // so that we use its syntax extension, etc. The template factory comes\n            // from the render function options so that it can control template\n            // caching and preprocessing.\n            const instance = new _template_instance_js__WEBPACK_IMPORTED_MODULE_3__[\"TemplateInstance\"](template, value.processor, this.options);\n            const fragment = instance._clone();\n            instance.update(value.values);\n            this.__commitNode(fragment);\n            this.value = instance;\n        }\n    }\n    __commitIterable(value) {\n        // For an Iterable, we create a new InstancePart per item, then set its\n        // value to the item. This is a little bit of overhead for every item in\n        // an Iterable, but it lets us recurse easily and efficiently update Arrays\n        // of TemplateResults that will be commonly returned from expressions like:\n        // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n        // If _value is an array, then the previous render was of an\n        // iterable and _value will contain the NodeParts from the previous\n        // render. If _value is not an array, clear this part and make a new\n        // array for NodeParts.\n        if (!Array.isArray(this.value)) {\n            this.value = [];\n            this.clear();\n        }\n        // Lets us keep track of how many items we stamped so we can clear leftover\n        // items from a previous render\n        const itemParts = this.value;\n        let partIndex = 0;\n        let itemPart;\n        for (const item of value) {\n            // Try to reuse an existing part\n            itemPart = itemParts[partIndex];\n            // If no existing part, create a new one\n            if (itemPart === undefined) {\n                itemPart = new NodePart(this.options);\n                itemParts.push(itemPart);\n                if (partIndex === 0) {\n                    itemPart.appendIntoPart(this);\n                }\n                else {\n                    itemPart.insertAfterPart(itemParts[partIndex - 1]);\n                }\n            }\n            itemPart.setValue(item);\n            itemPart.commit();\n            partIndex++;\n        }\n        if (partIndex < itemParts.length) {\n            // Truncate the parts array so _value reflects the current state\n            itemParts.length = partIndex;\n            this.clear(itemPart && itemPart.endNode);\n        }\n    }\n    clear(startNode = this.startNode) {\n        Object(_dom_js__WEBPACK_IMPORTED_MODULE_1__[\"removeNodes\"])(this.startNode.parentNode, startNode.nextSibling, this.endNode);\n    }\n}\n/**\n * Implements a boolean attribute, roughly as defined in the HTML\n * specification.\n *\n * If the value is truthy, then the attribute is present with a value of\n * ''. If the value is falsey, the attribute is removed.\n */\nclass BooleanAttributePart {\n    constructor(element, name, strings) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        if (strings.length !== 2 || strings[0] !== '' || strings[1] !== '') {\n            throw new Error('Boolean attributes can only contain a single expression');\n        }\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (Object(_directive_js__WEBPACK_IMPORTED_MODULE_0__[\"isDirective\"])(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = _part_js__WEBPACK_IMPORTED_MODULE_2__[\"noChange\"];\n            directive(this);\n        }\n        if (this.__pendingValue === _part_js__WEBPACK_IMPORTED_MODULE_2__[\"noChange\"]) {\n            return;\n        }\n        const value = !!this.__pendingValue;\n        if (this.value !== value) {\n            if (value) {\n                this.element.setAttribute(this.name, '');\n            }\n            else {\n                this.element.removeAttribute(this.name);\n            }\n            this.value = value;\n        }\n        this.__pendingValue = _part_js__WEBPACK_IMPORTED_MODULE_2__[\"noChange\"];\n    }\n}\n/**\n * Sets attribute values for PropertyParts, so that the value is only set once\n * even if there are multiple parts for a property.\n *\n * If an expression controls the whole property value, then the value is simply\n * assigned to the property under control. If there are string literals or\n * multiple expressions, then the strings are expressions are interpolated into\n * a string first.\n */\nclass PropertyCommitter extends AttributeCommitter {\n    constructor(element, name, strings) {\n        super(element, name, strings);\n        this.single =\n            (strings.length === 2 && strings[0] === '' && strings[1] === '');\n    }\n    _createPart() {\n        return new PropertyPart(this);\n    }\n    _getValue() {\n        if (this.single) {\n            return this.parts[0].value;\n        }\n        return super._getValue();\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.element[this.name] = this._getValue();\n        }\n    }\n}\nclass PropertyPart extends AttributePart {\n}\n// Detect event listener options support. If the `capture` property is read\n// from the options object, then options are supported. If not, then the third\n// argument to add/removeEventListener is interpreted as the boolean capture\n// value so we should only pass the `capture` property.\nlet eventOptionsSupported = false;\n// Wrap into an IIFE because MS Edge <= v41 does not support having try/catch\n// blocks right into the body of a module\n(() => {\n    try {\n        const options = {\n            get capture() {\n                eventOptionsSupported = true;\n                return false;\n            }\n        };\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        window.addEventListener('test', options, options);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        window.removeEventListener('test', options, options);\n    }\n    catch (_e) {\n        // event options not supported\n    }\n})();\nclass EventPart {\n    constructor(element, eventName, eventContext) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.element = element;\n        this.eventName = eventName;\n        this.eventContext = eventContext;\n        this.__boundHandleEvent = (e) => this.handleEvent(e);\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (Object(_directive_js__WEBPACK_IMPORTED_MODULE_0__[\"isDirective\"])(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = _part_js__WEBPACK_IMPORTED_MODULE_2__[\"noChange\"];\n            directive(this);\n        }\n        if (this.__pendingValue === _part_js__WEBPACK_IMPORTED_MODULE_2__[\"noChange\"]) {\n            return;\n        }\n        const newListener = this.__pendingValue;\n        const oldListener = this.value;\n        const shouldRemoveListener = newListener == null ||\n            oldListener != null &&\n                (newListener.capture !== oldListener.capture ||\n                    newListener.once !== oldListener.once ||\n                    newListener.passive !== oldListener.passive);\n        const shouldAddListener = newListener != null && (oldListener == null || shouldRemoveListener);\n        if (shouldRemoveListener) {\n            this.element.removeEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        if (shouldAddListener) {\n            this.__options = getOptions(newListener);\n            this.element.addEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        this.value = newListener;\n        this.__pendingValue = _part_js__WEBPACK_IMPORTED_MODULE_2__[\"noChange\"];\n    }\n    handleEvent(event) {\n        if (typeof this.value === 'function') {\n            this.value.call(this.eventContext || this.element, event);\n        }\n        else {\n            this.value.handleEvent(event);\n        }\n    }\n}\n// We copy options because of the inconsistent behavior of browsers when reading\n// the third argument of add/removeEventListener. IE11 doesn't support options\n// at all. Chrome 41 only reads `capture` if the argument is an object.\nconst getOptions = (o) => o &&\n    (eventOptionsSupported ?\n        { capture: o.capture, passive: o.passive, once: o.once } :\n        o.capture);\n//# sourceMappingURL=parts.js.map\n\n//# sourceURL=webpack://Textarena/../node_modules/lit-html/lib/parts.js?");

/***/ }),

/***/ "../node_modules/lit-html/lib/render.js":
/*!**********************************************!*\
  !*** ../node_modules/lit-html/lib/render.js ***!
  \**********************************************/
/*! exports provided: parts, render */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"parts\", function() { return parts; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return render; });\n/* harmony import */ var _dom_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dom.js */ \"../node_modules/lit-html/lib/dom.js\");\n/* harmony import */ var _parts_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./parts.js */ \"../node_modules/lit-html/lib/parts.js\");\n/* harmony import */ var _template_factory_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./template-factory.js */ \"../node_modules/lit-html/lib/template-factory.js\");\n/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n\n\nconst parts = new WeakMap();\n/**\n * Renders a template result or other value to a container.\n *\n * To update a container with new values, reevaluate the template literal and\n * call `render` with the new result.\n *\n * @param result Any value renderable by NodePart - typically a TemplateResult\n *     created by evaluating a template tag like `html` or `svg`.\n * @param container A DOM parent to render to. The entire contents are either\n *     replaced, or efficiently updated if the same result type was previous\n *     rendered there.\n * @param options RenderOptions for the entire render tree rendered to this\n *     container. Render options must *not* change between renders to the same\n *     container, as those changes will not effect previously rendered DOM.\n */\nconst render = (result, container, options) => {\n    let part = parts.get(container);\n    if (part === undefined) {\n        Object(_dom_js__WEBPACK_IMPORTED_MODULE_0__[\"removeNodes\"])(container, container.firstChild);\n        parts.set(container, part = new _parts_js__WEBPACK_IMPORTED_MODULE_1__[\"NodePart\"](Object.assign({ templateFactory: _template_factory_js__WEBPACK_IMPORTED_MODULE_2__[\"templateFactory\"] }, options)));\n        part.appendInto(container);\n    }\n    part.setValue(result);\n    part.commit();\n};\n//# sourceMappingURL=render.js.map\n\n//# sourceURL=webpack://Textarena/../node_modules/lit-html/lib/render.js?");

/***/ }),

/***/ "../node_modules/lit-html/lib/shady-render.js":
/*!****************************************************!*\
  !*** ../node_modules/lit-html/lib/shady-render.js ***!
  \****************************************************/
/*! exports provided: html, svg, TemplateResult, shadyTemplateFactory, render */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"shadyTemplateFactory\", function() { return shadyTemplateFactory; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return render; });\n/* harmony import */ var _dom_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dom.js */ \"../node_modules/lit-html/lib/dom.js\");\n/* harmony import */ var _modify_template_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modify-template.js */ \"../node_modules/lit-html/lib/modify-template.js\");\n/* harmony import */ var _render_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./render.js */ \"../node_modules/lit-html/lib/render.js\");\n/* harmony import */ var _template_factory_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./template-factory.js */ \"../node_modules/lit-html/lib/template-factory.js\");\n/* harmony import */ var _template_instance_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./template-instance.js */ \"../node_modules/lit-html/lib/template-instance.js\");\n/* harmony import */ var _template_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./template.js */ \"../node_modules/lit-html/lib/template.js\");\n/* harmony import */ var _lit_html_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../lit-html.js */ \"../node_modules/lit-html/lit-html.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"html\", function() { return _lit_html_js__WEBPACK_IMPORTED_MODULE_6__[\"html\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"svg\", function() { return _lit_html_js__WEBPACK_IMPORTED_MODULE_6__[\"svg\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"TemplateResult\", function() { return _lit_html_js__WEBPACK_IMPORTED_MODULE_6__[\"TemplateResult\"]; });\n\n/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * Module to add shady DOM/shady CSS polyfill support to lit-html template\n * rendering. See the [[render]] method for details.\n *\n * @packageDocumentation\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\n\n\n\n\n\n\n\n// Get a key to lookup in `templateCaches`.\nconst getTemplateCacheKey = (type, scopeName) => `${type}--${scopeName}`;\nlet compatibleShadyCSSVersion = true;\nif (typeof window.ShadyCSS === 'undefined') {\n    compatibleShadyCSSVersion = false;\n}\nelse if (typeof window.ShadyCSS.prepareTemplateDom === 'undefined') {\n    console.warn(`Incompatible ShadyCSS version detected. ` +\n        `Please update to at least @webcomponents/webcomponentsjs@2.0.2 and ` +\n        `@webcomponents/shadycss@1.3.1.`);\n    compatibleShadyCSSVersion = false;\n}\n/**\n * Template factory which scopes template DOM using ShadyCSS.\n * @param scopeName {string}\n */\nconst shadyTemplateFactory = (scopeName) => (result) => {\n    const cacheKey = getTemplateCacheKey(result.type, scopeName);\n    let templateCache = _template_factory_js__WEBPACK_IMPORTED_MODULE_3__[\"templateCaches\"].get(cacheKey);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        _template_factory_js__WEBPACK_IMPORTED_MODULE_3__[\"templateCaches\"].set(cacheKey, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    const key = result.strings.join(_template_js__WEBPACK_IMPORTED_MODULE_5__[\"marker\"]);\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        const element = result.getTemplateElement();\n        if (compatibleShadyCSSVersion) {\n            window.ShadyCSS.prepareTemplateDom(element, scopeName);\n        }\n        template = new _template_js__WEBPACK_IMPORTED_MODULE_5__[\"Template\"](result, element);\n        templateCache.keyString.set(key, template);\n    }\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n};\nconst TEMPLATE_TYPES = ['html', 'svg'];\n/**\n * Removes all style elements from Templates for the given scopeName.\n */\nconst removeStylesFromLitTemplates = (scopeName) => {\n    TEMPLATE_TYPES.forEach((type) => {\n        const templates = _template_factory_js__WEBPACK_IMPORTED_MODULE_3__[\"templateCaches\"].get(getTemplateCacheKey(type, scopeName));\n        if (templates !== undefined) {\n            templates.keyString.forEach((template) => {\n                const { element: { content } } = template;\n                // IE 11 doesn't support the iterable param Set constructor\n                const styles = new Set();\n                Array.from(content.querySelectorAll('style')).forEach((s) => {\n                    styles.add(s);\n                });\n                Object(_modify_template_js__WEBPACK_IMPORTED_MODULE_1__[\"removeNodesFromTemplate\"])(template, styles);\n            });\n        }\n    });\n};\nconst shadyRenderSet = new Set();\n/**\n * For the given scope name, ensures that ShadyCSS style scoping is performed.\n * This is done just once per scope name so the fragment and template cannot\n * be modified.\n * (1) extracts styles from the rendered fragment and hands them to ShadyCSS\n * to be scoped and appended to the document\n * (2) removes style elements from all lit-html Templates for this scope name.\n *\n * Note, <style> elements can only be placed into templates for the\n * initial rendering of the scope. If <style> elements are included in templates\n * dynamically rendered to the scope (after the first scope render), they will\n * not be scoped and the <style> will be left in the template and rendered\n * output.\n */\nconst prepareTemplateStyles = (scopeName, renderedDOM, template) => {\n    shadyRenderSet.add(scopeName);\n    // If `renderedDOM` is stamped from a Template, then we need to edit that\n    // Template's underlying template element. Otherwise, we create one here\n    // to give to ShadyCSS, which still requires one while scoping.\n    const templateElement = !!template ? template.element : document.createElement('template');\n    // Move styles out of rendered DOM and store.\n    const styles = renderedDOM.querySelectorAll('style');\n    const { length } = styles;\n    // If there are no styles, skip unnecessary work\n    if (length === 0) {\n        // Ensure prepareTemplateStyles is called to support adding\n        // styles via `prepareAdoptedCssText` since that requires that\n        // `prepareTemplateStyles` is called.\n        //\n        // ShadyCSS will only update styles containing @apply in the template\n        // given to `prepareTemplateStyles`. If no lit Template was given,\n        // ShadyCSS will not be able to update uses of @apply in any relevant\n        // template. However, this is not a problem because we only create the\n        // template for the purpose of supporting `prepareAdoptedCssText`,\n        // which doesn't support @apply at all.\n        window.ShadyCSS.prepareTemplateStyles(templateElement, scopeName);\n        return;\n    }\n    const condensedStyle = document.createElement('style');\n    // Collect styles into a single style. This helps us make sure ShadyCSS\n    // manipulations will not prevent us from being able to fix up template\n    // part indices.\n    // NOTE: collecting styles is inefficient for browsers but ShadyCSS\n    // currently does this anyway. When it does not, this should be changed.\n    for (let i = 0; i < length; i++) {\n        const style = styles[i];\n        style.parentNode.removeChild(style);\n        condensedStyle.textContent += style.textContent;\n    }\n    // Remove styles from nested templates in this scope.\n    removeStylesFromLitTemplates(scopeName);\n    // And then put the condensed style into the \"root\" template passed in as\n    // `template`.\n    const content = templateElement.content;\n    if (!!template) {\n        Object(_modify_template_js__WEBPACK_IMPORTED_MODULE_1__[\"insertNodeIntoTemplate\"])(template, condensedStyle, content.firstChild);\n    }\n    else {\n        content.insertBefore(condensedStyle, content.firstChild);\n    }\n    // Note, it's important that ShadyCSS gets the template that `lit-html`\n    // will actually render so that it can update the style inside when\n    // needed (e.g. @apply native Shadow DOM case).\n    window.ShadyCSS.prepareTemplateStyles(templateElement, scopeName);\n    const style = content.querySelector('style');\n    if (window.ShadyCSS.nativeShadow && style !== null) {\n        // When in native Shadow DOM, ensure the style created by ShadyCSS is\n        // included in initially rendered output (`renderedDOM`).\n        renderedDOM.insertBefore(style.cloneNode(true), renderedDOM.firstChild);\n    }\n    else if (!!template) {\n        // When no style is left in the template, parts will be broken as a\n        // result. To fix this, we put back the style node ShadyCSS removed\n        // and then tell lit to remove that node from the template.\n        // There can be no style in the template in 2 cases (1) when Shady DOM\n        // is in use, ShadyCSS removes all styles, (2) when native Shadow DOM\n        // is in use ShadyCSS removes the style if it contains no content.\n        // NOTE, ShadyCSS creates its own style so we can safely add/remove\n        // `condensedStyle` here.\n        content.insertBefore(condensedStyle, content.firstChild);\n        const removes = new Set();\n        removes.add(condensedStyle);\n        Object(_modify_template_js__WEBPACK_IMPORTED_MODULE_1__[\"removeNodesFromTemplate\"])(template, removes);\n    }\n};\n/**\n * Extension to the standard `render` method which supports rendering\n * to ShadowRoots when the ShadyDOM (https://github.com/webcomponents/shadydom)\n * and ShadyCSS (https://github.com/webcomponents/shadycss) polyfills are used\n * or when the webcomponentsjs\n * (https://github.com/webcomponents/webcomponentsjs) polyfill is used.\n *\n * Adds a `scopeName` option which is used to scope element DOM and stylesheets\n * when native ShadowDOM is unavailable. The `scopeName` will be added to\n * the class attribute of all rendered DOM. In addition, any style elements will\n * be automatically re-written with this `scopeName` selector and moved out\n * of the rendered DOM and into the document `<head>`.\n *\n * It is common to use this render method in conjunction with a custom element\n * which renders a shadowRoot. When this is done, typically the element's\n * `localName` should be used as the `scopeName`.\n *\n * In addition to DOM scoping, ShadyCSS also supports a basic shim for css\n * custom properties (needed only on older browsers like IE11) and a shim for\n * a deprecated feature called `@apply` that supports applying a set of css\n * custom properties to a given location.\n *\n * Usage considerations:\n *\n * * Part values in `<style>` elements are only applied the first time a given\n * `scopeName` renders. Subsequent changes to parts in style elements will have\n * no effect. Because of this, parts in style elements should only be used for\n * values that will never change, for example parts that set scope-wide theme\n * values or parts which render shared style elements.\n *\n * * Note, due to a limitation of the ShadyDOM polyfill, rendering in a\n * custom element's `constructor` is not supported. Instead rendering should\n * either done asynchronously, for example at microtask timing (for example\n * `Promise.resolve()`), or be deferred until the first time the element's\n * `connectedCallback` runs.\n *\n * Usage considerations when using shimmed custom properties or `@apply`:\n *\n * * Whenever any dynamic changes are made which affect\n * css custom properties, `ShadyCSS.styleElement(element)` must be called\n * to update the element. There are two cases when this is needed:\n * (1) the element is connected to a new parent, (2) a class is added to the\n * element that causes it to match different custom properties.\n * To address the first case when rendering a custom element, `styleElement`\n * should be called in the element's `connectedCallback`.\n *\n * * Shimmed custom properties may only be defined either for an entire\n * shadowRoot (for example, in a `:host` rule) or via a rule that directly\n * matches an element with a shadowRoot. In other words, instead of flowing from\n * parent to child as do native css custom properties, shimmed custom properties\n * flow only from shadowRoots to nested shadowRoots.\n *\n * * When using `@apply` mixing css shorthand property names with\n * non-shorthand names (for example `border` and `border-width`) is not\n * supported.\n */\nconst render = (result, container, options) => {\n    if (!options || typeof options !== 'object' || !options.scopeName) {\n        throw new Error('The `scopeName` option is required.');\n    }\n    const scopeName = options.scopeName;\n    const hasRendered = _render_js__WEBPACK_IMPORTED_MODULE_2__[\"parts\"].has(container);\n    const needsScoping = compatibleShadyCSSVersion &&\n        container.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */ &&\n        !!container.host;\n    // Handle first render to a scope specially...\n    const firstScopeRender = needsScoping && !shadyRenderSet.has(scopeName);\n    // On first scope render, render into a fragment; this cannot be a single\n    // fragment that is reused since nested renders can occur synchronously.\n    const renderContainer = firstScopeRender ? document.createDocumentFragment() : container;\n    Object(_render_js__WEBPACK_IMPORTED_MODULE_2__[\"render\"])(result, renderContainer, Object.assign({ templateFactory: shadyTemplateFactory(scopeName) }, options));\n    // When performing first scope render,\n    // (1) We've rendered into a fragment so that there's a chance to\n    // `prepareTemplateStyles` before sub-elements hit the DOM\n    // (which might cause them to render based on a common pattern of\n    // rendering in a custom element's `connectedCallback`);\n    // (2) Scope the template with ShadyCSS one time only for this scope.\n    // (3) Render the fragment into the container and make sure the\n    // container knows its `part` is the one we just rendered. This ensures\n    // DOM will be re-used on subsequent renders.\n    if (firstScopeRender) {\n        const part = _render_js__WEBPACK_IMPORTED_MODULE_2__[\"parts\"].get(renderContainer);\n        _render_js__WEBPACK_IMPORTED_MODULE_2__[\"parts\"].delete(renderContainer);\n        // ShadyCSS might have style sheets (e.g. from `prepareAdoptedCssText`)\n        // that should apply to `renderContainer` even if the rendered value is\n        // not a TemplateInstance. However, it will only insert scoped styles\n        // into the document if `prepareTemplateStyles` has already been called\n        // for the given scope name.\n        const template = part.value instanceof _template_instance_js__WEBPACK_IMPORTED_MODULE_4__[\"TemplateInstance\"] ?\n            part.value.template :\n            undefined;\n        prepareTemplateStyles(scopeName, renderContainer, template);\n        Object(_dom_js__WEBPACK_IMPORTED_MODULE_0__[\"removeNodes\"])(container, container.firstChild);\n        container.appendChild(renderContainer);\n        _render_js__WEBPACK_IMPORTED_MODULE_2__[\"parts\"].set(container, part);\n    }\n    // After elements have hit the DOM, update styling if this is the\n    // initial render to this container.\n    // This is needed whenever dynamic changes are made so it would be\n    // safest to do every render; however, this would regress performance\n    // so we leave it up to the user to call `ShadyCSS.styleElement`\n    // for dynamic changes.\n    if (!hasRendered && needsScoping) {\n        window.ShadyCSS.styleElement(container.host);\n    }\n};\n//# sourceMappingURL=shady-render.js.map\n\n//# sourceURL=webpack://Textarena/../node_modules/lit-html/lib/shady-render.js?");

/***/ }),

/***/ "../node_modules/lit-html/lib/template-factory.js":
/*!********************************************************!*\
  !*** ../node_modules/lit-html/lib/template-factory.js ***!
  \********************************************************/
/*! exports provided: templateFactory, templateCaches */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"templateFactory\", function() { return templateFactory; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"templateCaches\", function() { return templateCaches; });\n/* harmony import */ var _template_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./template.js */ \"../node_modules/lit-html/lib/template.js\");\n/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * The default TemplateFactory which caches Templates keyed on\n * result.type and result.strings.\n */\nfunction templateFactory(result) {\n    let templateCache = templateCaches.get(result.type);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(result.type, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    // If the TemplateStringsArray is new, generate a key from the strings\n    // This key is shared between all templates with identical content\n    const key = result.strings.join(_template_js__WEBPACK_IMPORTED_MODULE_0__[\"marker\"]);\n    // Check if we already have a Template for this key\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        // If we have not seen this key before, create a new Template\n        template = new _template_js__WEBPACK_IMPORTED_MODULE_0__[\"Template\"](result, result.getTemplateElement());\n        // Cache the Template for this key\n        templateCache.keyString.set(key, template);\n    }\n    // Cache all future queries for this TemplateStringsArray\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n}\nconst templateCaches = new Map();\n//# sourceMappingURL=template-factory.js.map\n\n//# sourceURL=webpack://Textarena/../node_modules/lit-html/lib/template-factory.js?");

/***/ }),

/***/ "../node_modules/lit-html/lib/template-instance.js":
/*!*********************************************************!*\
  !*** ../node_modules/lit-html/lib/template-instance.js ***!
  \*********************************************************/
/*! exports provided: TemplateInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TemplateInstance\", function() { return TemplateInstance; });\n/* harmony import */ var _dom_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dom.js */ \"../node_modules/lit-html/lib/dom.js\");\n/* harmony import */ var _template_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./template.js */ \"../node_modules/lit-html/lib/template.js\");\n/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n\n/**\n * An instance of a `Template` that can be attached to the DOM and updated\n * with new values.\n */\nclass TemplateInstance {\n    constructor(template, processor, options) {\n        this.__parts = [];\n        this.template = template;\n        this.processor = processor;\n        this.options = options;\n    }\n    update(values) {\n        let i = 0;\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.setValue(values[i]);\n            }\n            i++;\n        }\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.commit();\n            }\n        }\n    }\n    _clone() {\n        // There are a number of steps in the lifecycle of a template instance's\n        // DOM fragment:\n        //  1. Clone - create the instance fragment\n        //  2. Adopt - adopt into the main document\n        //  3. Process - find part markers and create parts\n        //  4. Upgrade - upgrade custom elements\n        //  5. Update - set node, attribute, property, etc., values\n        //  6. Connect - connect to the document. Optional and outside of this\n        //     method.\n        //\n        // We have a few constraints on the ordering of these steps:\n        //  * We need to upgrade before updating, so that property values will pass\n        //    through any property setters.\n        //  * We would like to process before upgrading so that we're sure that the\n        //    cloned fragment is inert and not disturbed by self-modifying DOM.\n        //  * We want custom elements to upgrade even in disconnected fragments.\n        //\n        // Given these constraints, with full custom elements support we would\n        // prefer the order: Clone, Process, Adopt, Upgrade, Update, Connect\n        //\n        // But Safari does not implement CustomElementRegistry#upgrade, so we\n        // can not implement that order and still have upgrade-before-update and\n        // upgrade disconnected fragments. So we instead sacrifice the\n        // process-before-upgrade constraint, since in Custom Elements v1 elements\n        // must not modify their light DOM in the constructor. We still have issues\n        // when co-existing with CEv0 elements like Polymer 1, and with polyfills\n        // that don't strictly adhere to the no-modification rule because shadow\n        // DOM, which may be created in the constructor, is emulated by being placed\n        // in the light DOM.\n        //\n        // The resulting order is on native is: Clone, Adopt, Upgrade, Process,\n        // Update, Connect. document.importNode() performs Clone, Adopt, and Upgrade\n        // in one step.\n        //\n        // The Custom Elements v1 polyfill supports upgrade(), so the order when\n        // polyfilled is the more ideal: Clone, Process, Adopt, Upgrade, Update,\n        // Connect.\n        const fragment = _dom_js__WEBPACK_IMPORTED_MODULE_0__[\"isCEPolyfill\"] ?\n            this.template.element.content.cloneNode(true) :\n            document.importNode(this.template.element.content, true);\n        const stack = [];\n        const parts = this.template.parts;\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(fragment, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        let partIndex = 0;\n        let nodeIndex = 0;\n        let part;\n        let node = walker.nextNode();\n        // Loop through all the nodes and parts of a template\n        while (partIndex < parts.length) {\n            part = parts[partIndex];\n            if (!Object(_template_js__WEBPACK_IMPORTED_MODULE_1__[\"isTemplatePartActive\"])(part)) {\n                this.__parts.push(undefined);\n                partIndex++;\n                continue;\n            }\n            // Progress the tree walker until we find our next part's node.\n            // Note that multiple parts may share the same node (attribute parts\n            // on a single element), so this loop may not run at all.\n            while (nodeIndex < part.index) {\n                nodeIndex++;\n                if (node.nodeName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n                if ((node = walker.nextNode()) === null) {\n                    // We've exhausted the content inside a nested template element.\n                    // Because we still have parts (the outer for-loop), we know:\n                    // - There is a template in the stack\n                    // - The walker will find a nextNode outside the template\n                    walker.currentNode = stack.pop();\n                    node = walker.nextNode();\n                }\n            }\n            // We've arrived at our part's node.\n            if (part.type === 'node') {\n                const part = this.processor.handleTextExpression(this.options);\n                part.insertAfterNode(node.previousSibling);\n                this.__parts.push(part);\n            }\n            else {\n                this.__parts.push(...this.processor.handleAttributeExpressions(node, part.name, part.strings, this.options));\n            }\n            partIndex++;\n        }\n        if (_dom_js__WEBPACK_IMPORTED_MODULE_0__[\"isCEPolyfill\"]) {\n            document.adoptNode(fragment);\n            customElements.upgrade(fragment);\n        }\n        return fragment;\n    }\n}\n//# sourceMappingURL=template-instance.js.map\n\n//# sourceURL=webpack://Textarena/../node_modules/lit-html/lib/template-instance.js?");

/***/ }),

/***/ "../node_modules/lit-html/lib/template-result.js":
/*!*******************************************************!*\
  !*** ../node_modules/lit-html/lib/template-result.js ***!
  \*******************************************************/
/*! exports provided: TemplateResult, SVGTemplateResult */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TemplateResult\", function() { return TemplateResult; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SVGTemplateResult\", function() { return SVGTemplateResult; });\n/* harmony import */ var _dom_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dom.js */ \"../node_modules/lit-html/lib/dom.js\");\n/* harmony import */ var _template_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./template.js */ \"../node_modules/lit-html/lib/template.js\");\n/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\n\n\n/**\n * Our TrustedTypePolicy for HTML which is declared using the html template\n * tag function.\n *\n * That HTML is a developer-authored constant, and is parsed with innerHTML\n * before any untrusted expressions have been mixed in. Therefor it is\n * considered safe by construction.\n */\nconst policy = window.trustedTypes &&\n    trustedTypes.createPolicy('lit-html', { createHTML: (s) => s });\nconst commentMarker = ` ${_template_js__WEBPACK_IMPORTED_MODULE_1__[\"marker\"]} `;\n/**\n * The return type of `html`, which holds a Template and the values from\n * interpolated expressions.\n */\nclass TemplateResult {\n    constructor(strings, values, type, processor) {\n        this.strings = strings;\n        this.values = values;\n        this.type = type;\n        this.processor = processor;\n    }\n    /**\n     * Returns a string of HTML used to create a `<template>` element.\n     */\n    getHTML() {\n        const l = this.strings.length - 1;\n        let html = '';\n        let isCommentBinding = false;\n        for (let i = 0; i < l; i++) {\n            const s = this.strings[i];\n            // For each binding we want to determine the kind of marker to insert\n            // into the template source before it's parsed by the browser's HTML\n            // parser. The marker type is based on whether the expression is in an\n            // attribute, text, or comment position.\n            //   * For node-position bindings we insert a comment with the marker\n            //     sentinel as its text content, like <!--{{lit-guid}}-->.\n            //   * For attribute bindings we insert just the marker sentinel for the\n            //     first binding, so that we support unquoted attribute bindings.\n            //     Subsequent bindings can use a comment marker because multi-binding\n            //     attributes must be quoted.\n            //   * For comment bindings we insert just the marker sentinel so we don't\n            //     close the comment.\n            //\n            // The following code scans the template source, but is *not* an HTML\n            // parser. We don't need to track the tree structure of the HTML, only\n            // whether a binding is inside a comment, and if not, if it appears to be\n            // the first binding in an attribute.\n            const commentOpen = s.lastIndexOf('<!--');\n            // We're in comment position if we have a comment open with no following\n            // comment close. Because <-- can appear in an attribute value there can\n            // be false positives.\n            isCommentBinding = (commentOpen > -1 || isCommentBinding) &&\n                s.indexOf('-->', commentOpen + 1) === -1;\n            // Check to see if we have an attribute-like sequence preceding the\n            // expression. This can match \"name=value\" like structures in text,\n            // comments, and attribute values, so there can be false-positives.\n            const attributeMatch = _template_js__WEBPACK_IMPORTED_MODULE_1__[\"lastAttributeNameRegex\"].exec(s);\n            if (attributeMatch === null) {\n                // We're only in this branch if we don't have a attribute-like\n                // preceding sequence. For comments, this guards against unusual\n                // attribute values like <div foo=\"<!--${'bar'}\">. Cases like\n                // <!-- foo=${'bar'}--> are handled correctly in the attribute branch\n                // below.\n                html += s + (isCommentBinding ? commentMarker : _template_js__WEBPACK_IMPORTED_MODULE_1__[\"nodeMarker\"]);\n            }\n            else {\n                // For attributes we use just a marker sentinel, and also append a\n                // $lit$ suffix to the name to opt-out of attribute-specific parsing\n                // that IE and Edge do for style and certain SVG attributes.\n                html += s.substr(0, attributeMatch.index) + attributeMatch[1] +\n                    attributeMatch[2] + _template_js__WEBPACK_IMPORTED_MODULE_1__[\"boundAttributeSuffix\"] + attributeMatch[3] +\n                    _template_js__WEBPACK_IMPORTED_MODULE_1__[\"marker\"];\n            }\n        }\n        html += this.strings[l];\n        return html;\n    }\n    getTemplateElement() {\n        const template = document.createElement('template');\n        let value = this.getHTML();\n        if (policy !== undefined) {\n            // this is secure because `this.strings` is a TemplateStringsArray.\n            // TODO: validate this when\n            // https://github.com/tc39/proposal-array-is-template-object is\n            // implemented.\n            value = policy.createHTML(value);\n        }\n        template.innerHTML = value;\n        return template;\n    }\n}\n/**\n * A TemplateResult for SVG fragments.\n *\n * This class wraps HTML in an `<svg>` tag in order to parse its contents in the\n * SVG namespace, then modifies the template to remove the `<svg>` tag so that\n * clones only container the original fragment.\n */\nclass SVGTemplateResult extends TemplateResult {\n    getHTML() {\n        return `<svg>${super.getHTML()}</svg>`;\n    }\n    getTemplateElement() {\n        const template = super.getTemplateElement();\n        const content = template.content;\n        const svgElement = content.firstChild;\n        content.removeChild(svgElement);\n        Object(_dom_js__WEBPACK_IMPORTED_MODULE_0__[\"reparentNodes\"])(content, svgElement.firstChild);\n        return template;\n    }\n}\n//# sourceMappingURL=template-result.js.map\n\n//# sourceURL=webpack://Textarena/../node_modules/lit-html/lib/template-result.js?");

/***/ }),

/***/ "../node_modules/lit-html/lib/template.js":
/*!************************************************!*\
  !*** ../node_modules/lit-html/lib/template.js ***!
  \************************************************/
/*! exports provided: marker, nodeMarker, markerRegex, boundAttributeSuffix, Template, isTemplatePartActive, createMarker, lastAttributeNameRegex */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"marker\", function() { return marker; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"nodeMarker\", function() { return nodeMarker; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"markerRegex\", function() { return markerRegex; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"boundAttributeSuffix\", function() { return boundAttributeSuffix; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Template\", function() { return Template; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isTemplatePartActive\", function() { return isTemplatePartActive; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createMarker\", function() { return createMarker; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"lastAttributeNameRegex\", function() { return lastAttributeNameRegex; });\n/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * An expression marker with embedded unique key to avoid collision with\n * possible text in templates.\n */\nconst marker = `{{lit-${String(Math.random()).slice(2)}}}`;\n/**\n * An expression marker used text-positions, multi-binding attributes, and\n * attributes with markup-like text values.\n */\nconst nodeMarker = `<!--${marker}-->`;\nconst markerRegex = new RegExp(`${marker}|${nodeMarker}`);\n/**\n * Suffix appended to all bound attribute names.\n */\nconst boundAttributeSuffix = '$lit$';\n/**\n * An updatable Template that tracks the location of dynamic parts.\n */\nclass Template {\n    constructor(result, element) {\n        this.parts = [];\n        this.element = element;\n        const nodesToRemove = [];\n        const stack = [];\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(element.content, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        // Keeps track of the last index associated with a part. We try to delete\n        // unnecessary nodes, but we never want to associate two different parts\n        // to the same index. They must have a constant node between.\n        let lastPartIndex = 0;\n        let index = -1;\n        let partIndex = 0;\n        const { strings, values: { length } } = result;\n        while (partIndex < length) {\n            const node = walker.nextNode();\n            if (node === null) {\n                // We've exhausted the content inside a nested template element.\n                // Because we still have parts (the outer for-loop), we know:\n                // - There is a template in the stack\n                // - The walker will find a nextNode outside the template\n                walker.currentNode = stack.pop();\n                continue;\n            }\n            index++;\n            if (node.nodeType === 1 /* Node.ELEMENT_NODE */) {\n                if (node.hasAttributes()) {\n                    const attributes = node.attributes;\n                    const { length } = attributes;\n                    // Per\n                    // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap,\n                    // attributes are not guaranteed to be returned in document order.\n                    // In particular, Edge/IE can return them out of order, so we cannot\n                    // assume a correspondence between part index and attribute index.\n                    let count = 0;\n                    for (let i = 0; i < length; i++) {\n                        if (endsWith(attributes[i].name, boundAttributeSuffix)) {\n                            count++;\n                        }\n                    }\n                    while (count-- > 0) {\n                        // Get the template literal section leading up to the first\n                        // expression in this attribute\n                        const stringForPart = strings[partIndex];\n                        // Find the attribute name\n                        const name = lastAttributeNameRegex.exec(stringForPart)[2];\n                        // Find the corresponding attribute\n                        // All bound attributes have had a suffix added in\n                        // TemplateResult#getHTML to opt out of special attribute\n                        // handling. To look up the attribute value we also need to add\n                        // the suffix.\n                        const attributeLookupName = name.toLowerCase() + boundAttributeSuffix;\n                        const attributeValue = node.getAttribute(attributeLookupName);\n                        node.removeAttribute(attributeLookupName);\n                        const statics = attributeValue.split(markerRegex);\n                        this.parts.push({ type: 'attribute', index, name, strings: statics });\n                        partIndex += statics.length - 1;\n                    }\n                }\n                if (node.tagName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n            }\n            else if (node.nodeType === 3 /* Node.TEXT_NODE */) {\n                const data = node.data;\n                if (data.indexOf(marker) >= 0) {\n                    const parent = node.parentNode;\n                    const strings = data.split(markerRegex);\n                    const lastIndex = strings.length - 1;\n                    // Generate a new text node for each literal section\n                    // These nodes are also used as the markers for node parts\n                    for (let i = 0; i < lastIndex; i++) {\n                        let insert;\n                        let s = strings[i];\n                        if (s === '') {\n                            insert = createMarker();\n                        }\n                        else {\n                            const match = lastAttributeNameRegex.exec(s);\n                            if (match !== null && endsWith(match[2], boundAttributeSuffix)) {\n                                s = s.slice(0, match.index) + match[1] +\n                                    match[2].slice(0, -boundAttributeSuffix.length) + match[3];\n                            }\n                            insert = document.createTextNode(s);\n                        }\n                        parent.insertBefore(insert, node);\n                        this.parts.push({ type: 'node', index: ++index });\n                    }\n                    // If there's no text, we must insert a comment to mark our place.\n                    // Else, we can trust it will stick around after cloning.\n                    if (strings[lastIndex] === '') {\n                        parent.insertBefore(createMarker(), node);\n                        nodesToRemove.push(node);\n                    }\n                    else {\n                        node.data = strings[lastIndex];\n                    }\n                    // We have a part for each match found\n                    partIndex += lastIndex;\n                }\n            }\n            else if (node.nodeType === 8 /* Node.COMMENT_NODE */) {\n                if (node.data === marker) {\n                    const parent = node.parentNode;\n                    // Add a new marker node to be the startNode of the Part if any of\n                    // the following are true:\n                    //  * We don't have a previousSibling\n                    //  * The previousSibling is already the start of a previous part\n                    if (node.previousSibling === null || index === lastPartIndex) {\n                        index++;\n                        parent.insertBefore(createMarker(), node);\n                    }\n                    lastPartIndex = index;\n                    this.parts.push({ type: 'node', index });\n                    // If we don't have a nextSibling, keep this node so we have an end.\n                    // Else, we can remove it to save future costs.\n                    if (node.nextSibling === null) {\n                        node.data = '';\n                    }\n                    else {\n                        nodesToRemove.push(node);\n                        index--;\n                    }\n                    partIndex++;\n                }\n                else {\n                    let i = -1;\n                    while ((i = node.data.indexOf(marker, i + 1)) !== -1) {\n                        // Comment node has a binding marker inside, make an inactive part\n                        // The binding won't work, but subsequent bindings will\n                        // TODO (justinfagnani): consider whether it's even worth it to\n                        // make bindings in comments work\n                        this.parts.push({ type: 'node', index: -1 });\n                        partIndex++;\n                    }\n                }\n            }\n        }\n        // Remove text binding nodes after the walk to not disturb the TreeWalker\n        for (const n of nodesToRemove) {\n            n.parentNode.removeChild(n);\n        }\n    }\n}\nconst endsWith = (str, suffix) => {\n    const index = str.length - suffix.length;\n    return index >= 0 && str.slice(index) === suffix;\n};\nconst isTemplatePartActive = (part) => part.index !== -1;\n// Allows `document.createComment('')` to be renamed for a\n// small manual size-savings.\nconst createMarker = () => document.createComment('');\n/**\n * This regex extracts the attribute name preceding an attribute-position\n * expression. It does this by matching the syntax allowed for attributes\n * against the string literal directly preceding the expression, assuming that\n * the expression is in an attribute-value position.\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\x09\\x0a\\x0c\\x0d\" are HTML space characters:\n * https://www.w3.org/TR/html5/infrastructure.html#space-characters\n *\n * \"\\0-\\x1F\\x7F-\\x9F\" are Unicode control characters, which includes every\n * space character except \" \".\n *\n * So an attribute is:\n *  * The name: any character except a control character, space character, ('),\n *    (\"), \">\", \"=\", or \"/\"\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nconst lastAttributeNameRegex = \n// eslint-disable-next-line no-control-regex\n/([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\n//# sourceMappingURL=template.js.map\n\n//# sourceURL=webpack://Textarena/../node_modules/lit-html/lib/template.js?");

/***/ }),

/***/ "../node_modules/lit-html/lit-html.js":
/*!********************************************!*\
  !*** ../node_modules/lit-html/lit-html.js ***!
  \********************************************/
/*! exports provided: DefaultTemplateProcessor, defaultTemplateProcessor, directive, isDirective, removeNodes, reparentNodes, noChange, nothing, AttributeCommitter, AttributePart, BooleanAttributePart, EventPart, isIterable, isPrimitive, NodePart, PropertyCommitter, PropertyPart, parts, render, templateCaches, templateFactory, TemplateInstance, SVGTemplateResult, TemplateResult, createMarker, isTemplatePartActive, Template, html, svg */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"html\", function() { return html; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"svg\", function() { return svg; });\n/* harmony import */ var _lib_default_template_processor_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/default-template-processor.js */ \"../node_modules/lit-html/lib/default-template-processor.js\");\n/* harmony import */ var _lib_template_result_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/template-result.js */ \"../node_modules/lit-html/lib/template-result.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"DefaultTemplateProcessor\", function() { return _lib_default_template_processor_js__WEBPACK_IMPORTED_MODULE_0__[\"DefaultTemplateProcessor\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"defaultTemplateProcessor\", function() { return _lib_default_template_processor_js__WEBPACK_IMPORTED_MODULE_0__[\"defaultTemplateProcessor\"]; });\n\n/* harmony import */ var _lib_directive_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/directive.js */ \"../node_modules/lit-html/lib/directive.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"directive\", function() { return _lib_directive_js__WEBPACK_IMPORTED_MODULE_2__[\"directive\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isDirective\", function() { return _lib_directive_js__WEBPACK_IMPORTED_MODULE_2__[\"isDirective\"]; });\n\n/* harmony import */ var _lib_dom_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lib/dom.js */ \"../node_modules/lit-html/lib/dom.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"removeNodes\", function() { return _lib_dom_js__WEBPACK_IMPORTED_MODULE_3__[\"removeNodes\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"reparentNodes\", function() { return _lib_dom_js__WEBPACK_IMPORTED_MODULE_3__[\"reparentNodes\"]; });\n\n/* harmony import */ var _lib_part_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./lib/part.js */ \"../node_modules/lit-html/lib/part.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"noChange\", function() { return _lib_part_js__WEBPACK_IMPORTED_MODULE_4__[\"noChange\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"nothing\", function() { return _lib_part_js__WEBPACK_IMPORTED_MODULE_4__[\"nothing\"]; });\n\n/* harmony import */ var _lib_parts_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./lib/parts.js */ \"../node_modules/lit-html/lib/parts.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"AttributeCommitter\", function() { return _lib_parts_js__WEBPACK_IMPORTED_MODULE_5__[\"AttributeCommitter\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"AttributePart\", function() { return _lib_parts_js__WEBPACK_IMPORTED_MODULE_5__[\"AttributePart\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"BooleanAttributePart\", function() { return _lib_parts_js__WEBPACK_IMPORTED_MODULE_5__[\"BooleanAttributePart\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"EventPart\", function() { return _lib_parts_js__WEBPACK_IMPORTED_MODULE_5__[\"EventPart\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isIterable\", function() { return _lib_parts_js__WEBPACK_IMPORTED_MODULE_5__[\"isIterable\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isPrimitive\", function() { return _lib_parts_js__WEBPACK_IMPORTED_MODULE_5__[\"isPrimitive\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"NodePart\", function() { return _lib_parts_js__WEBPACK_IMPORTED_MODULE_5__[\"NodePart\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"PropertyCommitter\", function() { return _lib_parts_js__WEBPACK_IMPORTED_MODULE_5__[\"PropertyCommitter\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"PropertyPart\", function() { return _lib_parts_js__WEBPACK_IMPORTED_MODULE_5__[\"PropertyPart\"]; });\n\n/* harmony import */ var _lib_render_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./lib/render.js */ \"../node_modules/lit-html/lib/render.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"parts\", function() { return _lib_render_js__WEBPACK_IMPORTED_MODULE_6__[\"parts\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return _lib_render_js__WEBPACK_IMPORTED_MODULE_6__[\"render\"]; });\n\n/* harmony import */ var _lib_template_factory_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./lib/template-factory.js */ \"../node_modules/lit-html/lib/template-factory.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"templateCaches\", function() { return _lib_template_factory_js__WEBPACK_IMPORTED_MODULE_7__[\"templateCaches\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"templateFactory\", function() { return _lib_template_factory_js__WEBPACK_IMPORTED_MODULE_7__[\"templateFactory\"]; });\n\n/* harmony import */ var _lib_template_instance_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./lib/template-instance.js */ \"../node_modules/lit-html/lib/template-instance.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"TemplateInstance\", function() { return _lib_template_instance_js__WEBPACK_IMPORTED_MODULE_8__[\"TemplateInstance\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"SVGTemplateResult\", function() { return _lib_template_result_js__WEBPACK_IMPORTED_MODULE_1__[\"SVGTemplateResult\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"TemplateResult\", function() { return _lib_template_result_js__WEBPACK_IMPORTED_MODULE_1__[\"TemplateResult\"]; });\n\n/* harmony import */ var _lib_template_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./lib/template.js */ \"../node_modules/lit-html/lib/template.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"createMarker\", function() { return _lib_template_js__WEBPACK_IMPORTED_MODULE_9__[\"createMarker\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isTemplatePartActive\", function() { return _lib_template_js__WEBPACK_IMPORTED_MODULE_9__[\"isTemplatePartActive\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Template\", function() { return _lib_template_js__WEBPACK_IMPORTED_MODULE_9__[\"Template\"]; });\n\n/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n *\n * Main lit-html module.\n *\n * Main exports:\n *\n * -  [[html]]\n * -  [[svg]]\n * -  [[render]]\n *\n * @packageDocumentation\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\n\n\n\n\n// TODO(justinfagnani): remove line when we get NodePart moving methods\n\n\n\n\n\n\n\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n// TODO(justinfagnani): inject version number at build time\nif (typeof window !== 'undefined') {\n    (window['litHtmlVersions'] || (window['litHtmlVersions'] = [])).push('1.3.0');\n}\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nconst html = (strings, ...values) => new _lib_template_result_js__WEBPACK_IMPORTED_MODULE_1__[\"TemplateResult\"](strings, values, 'html', _lib_default_template_processor_js__WEBPACK_IMPORTED_MODULE_0__[\"defaultTemplateProcessor\"]);\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\nconst svg = (strings, ...values) => new _lib_template_result_js__WEBPACK_IMPORTED_MODULE_1__[\"SVGTemplateResult\"](strings, values, 'svg', _lib_default_template_processor_js__WEBPACK_IMPORTED_MODULE_0__[\"defaultTemplateProcessor\"]);\n//# sourceMappingURL=lit-html.js.map\n\n//# sourceURL=webpack://Textarena/../node_modules/lit-html/lit-html.js?");

/***/ }),

/***/ "./Textarena.ts":
/*!**********************!*\
  !*** ./Textarena.ts ***!
  \**********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var helpers_ArenaSelection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! helpers/ArenaSelection */ \"./helpers/ArenaSelection.ts\");\n/* harmony import */ var helpers_ElementHelper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! helpers/ElementHelper */ \"./helpers/ElementHelper.ts\");\n/* harmony import */ var plugins_calloutPlugin__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! plugins/calloutPlugin */ \"./plugins/calloutPlugin.ts\");\n/* harmony import */ var plugins_commonPlugin__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! plugins/commonPlugin */ \"./plugins/commonPlugin.ts\");\n/* harmony import */ var plugins_formatingsPlugin__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! plugins/formatingsPlugin */ \"./plugins/formatingsPlugin.ts\");\n/* harmony import */ var plugins_headersPlugin__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! plugins/headersPlugin */ \"./plugins/headersPlugin.ts\");\n/* harmony import */ var plugins_hrPlugin__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! plugins/hrPlugin */ \"./plugins/hrPlugin.ts\");\n/* harmony import */ var plugins_imagePlugin__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! plugins/imagePlugin */ \"./plugins/imagePlugin.ts\");\n/* harmony import */ var plugins_linkPlugin__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! plugins/linkPlugin */ \"./plugins/linkPlugin.ts\");\n/* harmony import */ var plugins_listsPlugin__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! plugins/listsPlugin */ \"./plugins/listsPlugin.ts\");\n/* harmony import */ var plugins_paragraphPlugin__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! plugins/paragraphPlugin */ \"./plugins/paragraphPlugin.ts\");\n/* harmony import */ var services_ArenaServiceManager__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! services/ArenaServiceManager */ \"./services/ArenaServiceManager.ts\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar defaultOptions = {\n  editable: true,\n  debug: false,\n  toolbar: {\n    enabled: true,\n    tools: ['strong', 'emphasized', 'underline', 'strikethrough', 'paragraph', 'unordered-list', 'ordered-list', 'header2', 'header3', 'header4', 'link']\n  },\n  creatorBar: {\n    enabled: true,\n    creators: ['hr', 'unordered-list', 'ordered-list', 'header2', 'header3', 'header4', 'callout', 'image' // 'blockquote',\n    ]\n  },\n  plugins: [Object(plugins_commonPlugin__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(), Object(plugins_paragraphPlugin__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(), Object(plugins_formatingsPlugin__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(), Object(plugins_headersPlugin__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(), Object(plugins_hrPlugin__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(), Object(plugins_listsPlugin__WEBPACK_IMPORTED_MODULE_9__[\"default\"])(), Object(plugins_calloutPlugin__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(), Object(plugins_imagePlugin__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(), Object(plugins_linkPlugin__WEBPACK_IMPORTED_MODULE_8__[\"default\"])()]\n};\n\nvar Textarena = /*#__PURE__*/function () {\n  function Textarena(container, options) {\n    _classCallCheck(this, Textarena);\n\n    _defineProperty(this, \"debug\", false);\n\n    _defineProperty(this, \"container\", void 0);\n\n    _defineProperty(this, \"editor\", void 0);\n\n    _defineProperty(this, \"options\", {});\n\n    _defineProperty(this, \"meta\", {});\n\n    _defineProperty(this, \"asm\", void 0);\n\n    _defineProperty(this, \"simpleArenas\", []);\n\n    console.log(options); // DOM Elements\n\n    this.container = new helpers_ElementHelper__WEBPACK_IMPORTED_MODULE_1__[\"default\"](container, 'textarena-container', '');\n    this.editor = new helpers_ElementHelper__WEBPACK_IMPORTED_MODULE_1__[\"default\"]('DIV', 'textarena-editor');\n    this.container.appendChild(this.editor.getElem()); // Services\n\n    this.asm = new services_ArenaServiceManager__WEBPACK_IMPORTED_MODULE_11__[\"default\"](this);\n    this.setOptions(options ? _objectSpread(_objectSpread({}, defaultOptions), options) : defaultOptions);\n    this.start();\n  }\n\n  _createClass(Textarena, [{\n    key: \"getContainerElement\",\n    value: function getContainerElement() {\n      return this.container;\n    }\n  }, {\n    key: \"getEditorElement\",\n    value: function getEditorElement() {\n      return this.editor;\n    }\n  }, {\n    key: \"destructor\",\n    value: function destructor() {\n      this.asm.eventManager.fire('turnOff');\n    }\n  }, {\n    key: \"setOptions\",\n    value: function setOptions(options) {\n      if (options.onChange !== undefined) {\n        this.setOnChange(options.onChange);\n      }\n\n      if (options.onReady !== undefined) {\n        this.setOnReady(options.onReady);\n      }\n\n      if (options.plugins) {\n        this.setPlugins(options.plugins);\n      }\n\n      if (options.toolbar !== undefined) {\n        this.setToolbarOptions(options.toolbar);\n      }\n\n      if (options.creatorBar !== undefined) {\n        this.setCreatorBarOptions(options.creatorBar);\n      }\n\n      if (options.initData !== undefined) {\n        this.setData(options.initData);\n      }\n\n      if (options.editable !== undefined) {\n        this.setEditable(options.editable);\n      }\n\n      if (options.debug !== undefined) {\n        this.debug = options.debug;\n        this.asm.logger.setDebug(options.debug);\n      }\n    }\n  }, {\n    key: \"getData\",\n    value: function getData() {\n      return {\n        html: this.getHtml(),\n        dataHtml: this.editor.getInnerHTML().replace(/<!--(?!-->)*-->/g, '').replace(/^[\\s\\n]+/, '').replace(/[\\s\\n]+$/, '').replace(/(<[\\w-]+)\\s+observe-id=\"[\\d.]+\"/g, '$1').replace(/(<p)/g, '\\n$1')\n      };\n    }\n  }, {\n    key: \"getHtml\",\n    value: function getHtml() {\n      return this.asm.model.getOutputHtml();\n    }\n  }, {\n    key: \"setData\",\n    value: function setData(data) {\n      if (typeof data.dataHtml === 'string') {\n        this.asm.parser.insertHtmlToRoot(data.dataHtml);\n        this.asm.view.render();\n      }\n    }\n  }, {\n    key: \"setEditable\",\n    value: function setEditable(editable) {\n      if (this.options.editable !== editable) {\n        if (editable) {\n          this.asm.eventManager.fire('turnOn');\n        } else {\n          this.asm.eventManager.fire('turnOff');\n        }\n\n        this.options.editable = editable;\n        this.editor.setContentEditable(editable);\n      }\n    }\n  }, {\n    key: \"setOnChange\",\n    value: function setOnChange(onChange) {\n      this.options.onChange = onChange;\n    }\n  }, {\n    key: \"setOnReady\",\n    value: function setOnReady(onReady) {\n      this.options.onReady = onReady;\n    }\n  }, {\n    key: \"setPlugins\",\n    value: function setPlugins(plugins) {\n      var _this = this;\n\n      plugins.forEach(function (plugin) {\n        plugin.register(_this);\n      });\n    }\n  }, {\n    key: \"setToolbarOptions\",\n    value: function setToolbarOptions(toolbarOptions) {\n      this.asm.toolbar.setOptions(toolbarOptions);\n    }\n  }, {\n    key: \"setCreatorBarOptions\",\n    value: function setCreatorBarOptions(creatorBarOptions) {\n      this.asm.creatorBar.setOptions(creatorBarOptions);\n    }\n  }, {\n    key: \"getRootArenaName\",\n    value: function getRootArenaName() {\n      return this.asm.model.rootArenaName;\n    }\n  }, {\n    key: \"getSimpleArenas\",\n    value: function getSimpleArenas() {\n      return this.simpleArenas;\n    }\n  }, {\n    key: \"addSimpleArenas\",\n    value: function addSimpleArenas(arena) {\n      this.simpleArenas.push(arena);\n    }\n  }, {\n    key: \"setDefaultTextArena\",\n    value: function setDefaultTextArena(arena) {\n      this.asm.model.model.arena.setArenaForText(arena);\n    }\n  }, {\n    key: \"getDefaultTextArena\",\n    value: function getDefaultTextArena() {\n      return this.asm.model.model.arena.getArenaForText();\n    }\n  }, {\n    key: \"registerArena\",\n    value: function registerArena(arenaOptions, markers, parentArenas) {\n      return this.asm.model.registerArena(arenaOptions, markers, parentArenas);\n    }\n  }, {\n    key: \"registerFormating\",\n    value: function registerFormating(formating, markers) {\n      return this.asm.model.registerFormating(formating, markers);\n    }\n  }, {\n    key: \"registerCommand\",\n    value: function registerCommand(command, action) {\n      return this.asm.commandManager.registerCommand(command, action);\n    }\n  }, {\n    key: \"registerShortcut\",\n    value: function registerShortcut(shortcut, command) {\n      return this.asm.commandManager.registerShortcut(shortcut, command);\n    }\n  }, {\n    key: \"registerTool\",\n    value: function registerTool(opts) {\n      this.asm.toolbar.registerTool(opts);\n    }\n  }, {\n    key: \"registerCreator\",\n    value: function registerCreator(opts) {\n      this.asm.creatorBar.registerCreator(opts);\n    }\n  }, {\n    key: \"transformModel\",\n    value: function transformModel(selection, arena) {\n      return this.asm.model.transformModel(selection, arena);\n    }\n  }, {\n    key: \"breakSelection\",\n    value: function breakSelection(selection) {\n      return this.asm.model.breakSelection(selection);\n    }\n  }, {\n    key: \"moveChild\",\n    value: function moveChild(selection, direction) {\n      return this.asm.model.moveChild(selection, direction);\n    }\n  }, {\n    key: \"formatingModel\",\n    value: function formatingModel(selection, formating) {\n      return this.asm.model.formatingModel(selection, formating);\n    }\n  }, {\n    key: \"addInlineNode\",\n    value: function addInlineNode(selection, arena) {\n      return this.asm.model.addInlineNode(selection, arena);\n    }\n  }, {\n    key: \"getInlineNode\",\n    value: function getInlineNode(selection, arena) {\n      return this.asm.model.getInlineNode(selection, arena);\n    }\n  }, {\n    key: \"removeInlineNode\",\n    value: function removeInlineNode(selection, node) {\n      return this.asm.model.removeInlineNode(selection, node);\n    }\n  }, {\n    key: \"updateInlineNode\",\n    value: function updateInlineNode(selection, node) {\n      return this.asm.model.updateInlineNode(selection, node);\n    }\n  }, {\n    key: \"start\",\n    value: function start() {\n      var _this2 = this;\n\n      this.asm.eventManager.subscribe('modelChanged', function (e) {\n        if (_typeof(e) === 'object') {\n          _this2.asm.view.render(e.data instanceof helpers_ArenaSelection__WEBPACK_IMPORTED_MODULE_0__[\"default\"] ? e.data : undefined);\n        }\n\n        if (_this2.options.onChange) {\n          _this2.options.onChange(_this2.getData());\n        }\n      });\n\n      if (this.options.onReady) {\n        this.options.onReady(this.getData());\n      }\n\n      if (this.debug) {\n        window.asm = this.asm;\n      }\n    }\n  }]);\n\n  return Textarena;\n}();\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Textarena);\n\n//# sourceURL=webpack://Textarena/./Textarena.ts?");

/***/ }),

/***/ "./arenas/AbstractArena.ts":
/*!*********************************!*\
  !*** ./arenas/AbstractArena.ts ***!
  \*********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return AbstractArena; });\n/* harmony import */ var lit_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit-html */ \"../node_modules/lit-html/lit-html.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\nvar AbstractArena = /*#__PURE__*/function () {\n  function AbstractArena(options) {\n    _classCallCheck(this, AbstractArena);\n\n    _defineProperty(this, \"name\", void 0);\n\n    _defineProperty(this, \"tag\", void 0);\n\n    _defineProperty(this, \"attributes\", void 0);\n\n    _defineProperty(this, \"automerge\", false);\n\n    _defineProperty(this, \"initCallback\", void 0);\n\n    this.name = options.name;\n    this.tag = options.tag;\n    this.attributes = options.attributes;\n\n    if (options.automerge) {\n      this.automerge = true;\n    }\n\n    this.initCallback = options.init;\n  }\n\n  _createClass(AbstractArena, [{\n    key: \"getAttributesString\",\n    value: function getAttributesString(id) {\n      var str = '';\n\n      if (id) {\n        str += \" observe-id=\\\"\".concat(id, \"\\\"\");\n      }\n\n      this.attributes.forEach(function (attr) {\n        str += \" \".concat(attr);\n      });\n      return str;\n    }\n  }, {\n    key: \"getTemplate\",\n    value: function getTemplate(children, id) {\n      if (!this.tag) {\n        return children;\n      }\n\n      var attrs = this.getAttributesString(id);\n      var stringArray = [\"<\".concat(this.tag, \" \").concat(attrs, \">\"), \"</\".concat(this.tag, \">\")]; // FIXME\n\n      return new lit_html__WEBPACK_IMPORTED_MODULE_0__[\"TemplateResult\"](stringArray, [children], 'html', lit_html__WEBPACK_IMPORTED_MODULE_0__[\"defaultTemplateProcessor\"]); // return `<${this.tag} observe-id=\"${id}\">${children}</${this.tag}>`;\n      // return html`\n      //   ${unsafeHTML(`<${this.tag} observe-id=\"${id}\">${html`children`}</${this.tag}>`)}\n      // `;\n    }\n  }, {\n    key: \"getOutputTemplate\",\n    value: function getOutputTemplate(children, deep) {\n      var attrs = this.getAttributesString();\n      var tab = '  '.repeat(deep);\n      var tag = this.tag.toLowerCase();\n      var content = children ? \"\\n\".concat(children, \"\\n\") : '';\n      return \"\".concat(tab, \"<\").concat(tag.toLowerCase()).concat(attrs, \">\").concat(content).concat(tab, \"</\").concat(tag.toLowerCase(), \">\");\n    }\n  }, {\n    key: \"init\",\n    value: function init(node) {\n      if (this.initCallback) {\n        return this.initCallback(node);\n      }\n\n      return node;\n    }\n  }]);\n\n  return AbstractArena;\n}();\n\n\n\n//# sourceURL=webpack://Textarena/./arenas/AbstractArena.ts?");

/***/ }),

/***/ "./arenas/AncestorArena.ts":
/*!*********************************!*\
  !*** ./arenas/AncestorArena.ts ***!
  \*********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return AncestorArena; });\n/* harmony import */ var _AbstractArena__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AbstractArena */ \"./arenas/AbstractArena.ts\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\nvar AncestorArena = /*#__PURE__*/function (_AbstractArena) {\n  _inherits(AncestorArena, _AbstractArena);\n\n  var _super = _createSuper(AncestorArena);\n\n  function AncestorArena(options) {\n    var _this;\n\n    _classCallCheck(this, AncestorArena);\n\n    _this = _super.call(this, options);\n\n    _defineProperty(_assertThisInitialized(_this), \"hasChildren\", true);\n\n    _defineProperty(_assertThisInitialized(_this), \"protected\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"allowedArenas\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"arenaForText\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"protectedChildren\", []);\n\n    _this.arenaForText = options.arenaForText;\n    _this.allowedArenas = options.allowedArenas || [];\n\n    if (options.protectedChildren !== undefined) {\n      _this[\"protected\"] = true;\n      _this.protectedChildren = options.protectedChildren;\n    }\n\n    return _this;\n  }\n\n  _createClass(AncestorArena, [{\n    key: \"addAllowedChild\",\n    value: function addAllowedChild(arena) {\n      this.allowedArenas.push(arena);\n    }\n  }, {\n    key: \"setArenaForText\",\n    value: function setArenaForText(arena) {\n      this.arenaForText = arena;\n    }\n  }, {\n    key: \"getArenaForText\",\n    value: function getArenaForText() {\n      return this.arenaForText;\n    }\n  }]);\n\n  return AncestorArena;\n}(_AbstractArena__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n\n\n\n//# sourceURL=webpack://Textarena/./arenas/AncestorArena.ts?");

/***/ }),

/***/ "./arenas/ArenaFactory.ts":
/*!********************************!*\
  !*** ./arenas/ArenaFactory.ts ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return ArenaFactory; });\n/* harmony import */ var _AncestorArena__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AncestorArena */ \"./arenas/AncestorArena.ts\");\n/* harmony import */ var _RootArena__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./RootArena */ \"./arenas/RootArena.ts\");\n/* harmony import */ var _SingleArena__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./SingleArena */ \"./arenas/SingleArena.ts\");\n/* harmony import */ var _TextArena__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./TextArena */ \"./arenas/TextArena.ts\");\n/* harmony import */ var _InlineArena__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./InlineArena */ \"./arenas/InlineArena.ts\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\n\n\n\nvar ArenaFactory = /*#__PURE__*/function () {\n  function ArenaFactory() {\n    _classCallCheck(this, ArenaFactory);\n  }\n\n  _createClass(ArenaFactory, null, [{\n    key: \"create\",\n    value: function create(arenaOptions) {\n      if ('root' in arenaOptions && arenaOptions.root === true) {\n        return new _RootArena__WEBPACK_IMPORTED_MODULE_1__[\"default\"](arenaOptions);\n      }\n\n      if ('single' in arenaOptions && arenaOptions.single === true) {\n        return new _SingleArena__WEBPACK_IMPORTED_MODULE_2__[\"default\"](arenaOptions);\n      }\n\n      if ('inline' in arenaOptions && arenaOptions.inline === true) {\n        return new _InlineArena__WEBPACK_IMPORTED_MODULE_4__[\"default\"](arenaOptions);\n      }\n\n      if ('hasChildren' in arenaOptions && arenaOptions.hasChildren === true) {\n        return new _AncestorArena__WEBPACK_IMPORTED_MODULE_0__[\"default\"](arenaOptions);\n      }\n\n      if ('allowText' in arenaOptions && arenaOptions.allowText === true) {\n        return new _TextArena__WEBPACK_IMPORTED_MODULE_3__[\"default\"](arenaOptions);\n      }\n\n      throw new Error('Cant create Arena');\n    }\n  }]);\n\n  return ArenaFactory;\n}();\n\n\n\n//# sourceURL=webpack://Textarena/./arenas/ArenaFactory.ts?");

/***/ }),

/***/ "./arenas/InlineArena.ts":
/*!*******************************!*\
  !*** ./arenas/InlineArena.ts ***!
  \*******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return InlineArena; });\n/* harmony import */ var _AbstractArena__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AbstractArena */ \"./arenas/AbstractArena.ts\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\nvar InlineArena = /*#__PURE__*/function (_AbstractArena) {\n  _inherits(InlineArena, _AbstractArena);\n\n  var _super = _createSuper(InlineArena);\n\n  function InlineArena() {\n    var _this;\n\n    _classCallCheck(this, InlineArena);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"inline\", true);\n\n    return _this;\n  }\n\n  return InlineArena;\n}(_AbstractArena__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n\n\n\n//# sourceURL=webpack://Textarena/./arenas/InlineArena.ts?");

/***/ }),

/***/ "./arenas/RootArena.ts":
/*!*****************************!*\
  !*** ./arenas/RootArena.ts ***!
  \*****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return RootArena; });\n/* harmony import */ var _AncestorArena__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AncestorArena */ \"./arenas/AncestorArena.ts\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\nvar RootArena = /*#__PURE__*/function (_AncestorArena) {\n  _inherits(RootArena, _AncestorArena);\n\n  var _super = _createSuper(RootArena);\n\n  function RootArena() {\n    var _this;\n\n    _classCallCheck(this, RootArena);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"root\", true);\n\n    return _this;\n  }\n\n  return RootArena;\n}(_AncestorArena__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n\n\n\n//# sourceURL=webpack://Textarena/./arenas/RootArena.ts?");

/***/ }),

/***/ "./arenas/SingleArena.ts":
/*!*******************************!*\
  !*** ./arenas/SingleArena.ts ***!
  \*******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return SingleArena; });\n/* harmony import */ var _AbstractArena__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AbstractArena */ \"./arenas/AbstractArena.ts\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\nvar SingleArena = /*#__PURE__*/function (_AbstractArena) {\n  _inherits(SingleArena, _AbstractArena);\n\n  var _super = _createSuper(SingleArena);\n\n  function SingleArena() {\n    var _this;\n\n    _classCallCheck(this, SingleArena);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"single\", true);\n\n    return _this;\n  }\n\n  return SingleArena;\n}(_AbstractArena__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n\n\n\n//# sourceURL=webpack://Textarena/./arenas/SingleArena.ts?");

/***/ }),

/***/ "./arenas/TextArena.ts":
/*!*****************************!*\
  !*** ./arenas/TextArena.ts ***!
  \*****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return TextArena; });\n/* harmony import */ var _AbstractArena__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AbstractArena */ \"./arenas/AbstractArena.ts\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\nvar TextArena = /*#__PURE__*/function (_AbstractArena) {\n  _inherits(TextArena, _AbstractArena);\n\n  var _super = _createSuper(TextArena);\n\n  function TextArena(options) {\n    var _this;\n\n    _classCallCheck(this, TextArena);\n\n    _this = _super.call(this, options);\n\n    _defineProperty(_assertThisInitialized(_this), \"allowText\", true);\n\n    _defineProperty(_assertThisInitialized(_this), \"nextArena\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"allowFormating\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"middlewares\", []);\n\n    _this.allowFormating = options.allowFormating;\n    _this.nextArena = options.nextArena;\n    return _this;\n  }\n\n  _createClass(TextArena, [{\n    key: \"registerMiddleware\",\n    value: function registerMiddleware(middleware) {\n      this.middlewares.push(middleware);\n    }\n  }]);\n\n  return TextArena;\n}(_AbstractArena__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n\n\n\n//# sourceURL=webpack://Textarena/./arenas/TextArena.ts?");

/***/ }),

/***/ "./events/BrowserCommandEvent.ts":
/*!***************************************!*\
  !*** ./events/BrowserCommandEvent.ts ***!
  \***************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return BrowserCommandEvent; });\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar BrowserCommandEvent = function BrowserCommandEvent(event) {\n  _classCallCheck(this, BrowserCommandEvent);\n\n  this.event = event;\n};\n\n_defineProperty(BrowserCommandEvent, \"type\", 'browserommand');\n\n\n\n//# sourceURL=webpack://Textarena/./events/BrowserCommandEvent.ts?");

/***/ }),

/***/ "./events/CommandEvent.ts":
/*!********************************!*\
  !*** ./events/CommandEvent.ts ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return CommandEvent; });\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar CommandEvent = function CommandEvent(event, command, modifiersSum) {\n  _classCallCheck(this, CommandEvent);\n\n  this.event = event;\n  this.command = command;\n  this.modifiersSum = modifiersSum;\n};\n\n_defineProperty(CommandEvent, \"type\", 'shortcut');\n\n\n\n//# sourceURL=webpack://Textarena/./events/CommandEvent.ts?");

/***/ }),

/***/ "./events/CopyEvent.ts":
/*!*****************************!*\
  !*** ./events/CopyEvent.ts ***!
  \*****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return CopyEvent; });\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar CopyEvent = function CopyEvent(event) {\n  _classCallCheck(this, CopyEvent);\n\n  this.event = event;\n};\n\n_defineProperty(CopyEvent, \"type\", 'copy');\n\n\n\n//# sourceURL=webpack://Textarena/./events/CopyEvent.ts?");

/***/ }),

/***/ "./events/CutEvent.ts":
/*!****************************!*\
  !*** ./events/CutEvent.ts ***!
  \****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return CutEvent; });\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar CutEvent = function CutEvent(event) {\n  _classCallCheck(this, CutEvent);\n\n  this.event = event;\n};\n\n_defineProperty(CutEvent, \"type\", 'cut');\n\n\n\n//# sourceURL=webpack://Textarena/./events/CutEvent.ts?");

/***/ }),

/***/ "./events/InputEvent.ts":
/*!******************************!*\
  !*** ./events/InputEvent.ts ***!
  \******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return InputEvent; });\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar InputEvent = function InputEvent(event, character) {\n  _classCallCheck(this, InputEvent);\n\n  this.event = event;\n  this.character = character;\n};\n\n_defineProperty(InputEvent, \"type\", 'input');\n\n\n\n//# sourceURL=webpack://Textarena/./events/InputEvent.ts?");

/***/ }),

/***/ "./events/ModifiersEvent.ts":
/*!**********************************!*\
  !*** ./events/ModifiersEvent.ts ***!
  \**********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return ModifiersEvent; });\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar ModifiersEvent = function ModifiersEvent(event, sum) {\n  _classCallCheck(this, ModifiersEvent);\n\n  this.event = event;\n  this.sum = sum;\n};\n\n_defineProperty(ModifiersEvent, \"type\", 'modifiers');\n\n\n\n//# sourceURL=webpack://Textarena/./events/ModifiersEvent.ts?");

/***/ }),

/***/ "./events/PasteEvent.ts":
/*!******************************!*\
  !*** ./events/PasteEvent.ts ***!
  \******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return PasteEvent; });\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar PasteEvent = function PasteEvent(event) {\n  _classCallCheck(this, PasteEvent);\n\n  this.event = event;\n};\n\n_defineProperty(PasteEvent, \"type\", 'paste');\n\n\n\n//# sourceURL=webpack://Textarena/./events/PasteEvent.ts?");

/***/ }),

/***/ "./events/RemoveEvent.ts":
/*!*******************************!*\
  !*** ./events/RemoveEvent.ts ***!
  \*******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return RemoveEvent; });\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar RemoveEvent = function RemoveEvent(event, direction) {\n  _classCallCheck(this, RemoveEvent);\n\n  this.event = event;\n  this.direction = direction;\n};\n\n_defineProperty(RemoveEvent, \"type\", 'remove');\n\n\n\n//# sourceURL=webpack://Textarena/./events/RemoveEvent.ts?");

/***/ }),

/***/ "./events/SelectionEvent.ts":
/*!**********************************!*\
  !*** ./events/SelectionEvent.ts ***!
  \**********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return SelectionEvent; });\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar SelectionEvent = function SelectionEvent(event) {\n  _classCallCheck(this, SelectionEvent);\n\n  this.event = event;\n};\n\n_defineProperty(SelectionEvent, \"type\", 'selection');\n\n\n\n//# sourceURL=webpack://Textarena/./events/SelectionEvent.ts?");

/***/ }),

/***/ "./helpers/ArenaSelection.ts":
/*!***********************************!*\
  !*** ./helpers/ArenaSelection.ts ***!
  \***********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return ArenaSelection; });\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar ArenaSelection = /*#__PURE__*/function () {\n  function ArenaSelection(startNode, startOffset, endNode, endOffset, direction) {\n    _classCallCheck(this, ArenaSelection);\n\n    this.startNode = startNode;\n    this.startOffset = startOffset;\n    this.endNode = endNode;\n    this.endOffset = endOffset;\n    this.direction = direction;\n  }\n\n  _createClass(ArenaSelection, [{\n    key: \"setStartNode\",\n    value: function setStartNode(startNode, startOffset) {\n      this.startNode = startNode;\n      this.startOffset = startOffset;\n      return this;\n    }\n  }, {\n    key: \"setEndNode\",\n    value: function setEndNode(endNode, endOffset) {\n      this.endNode = endNode;\n      this.endOffset = endOffset;\n      return this;\n    }\n  }, {\n    key: \"setBoth\",\n    value: function setBoth(node, offset) {\n      return this.setStartNode(node, offset).setEndNode(node, offset);\n    }\n  }, {\n    key: \"getCursor\",\n    value: function getCursor() {\n      return {\n        node: this.direction === 'forward' ? this.endNode : this.startNode,\n        offset: this.direction === 'forward' ? this.endOffset : this.startOffset\n      };\n    }\n  }, {\n    key: \"setCursor\",\n    value: function setCursor(cursor) {\n      return this.setBoth(cursor.node, cursor.offset);\n    }\n  }, {\n    key: \"isCollapsed\",\n    value: function isCollapsed() {\n      return this.startNode === this.endNode && this.startOffset === this.endOffset;\n    }\n  }, {\n    key: \"isSameNode\",\n    value: function isSameNode() {\n      return this.startNode === this.endNode;\n    }\n  }, {\n    key: \"isSelectionOnBegin\",\n    value: function isSelectionOnBegin() {\n      return this.startOffset === 0;\n    }\n  }, {\n    key: \"isSelectionOnEnd\",\n    value: function isSelectionOnEnd() {\n      return this.endNode.getTextLength() === this.endOffset;\n    }\n  }, {\n    key: \"collapse\",\n    value: function collapse() {\n      if (this.startNode === this.endNode) {\n        this.endOffset = this.startOffset;\n        return this;\n      }\n\n      if (this.direction === 'forward') {\n        this.startNode = this.endNode;\n        this.endOffset = 0;\n        this.startOffset = 0;\n      } else {\n        this.endNode = this.startNode;\n        this.endOffset = this.startOffset;\n      }\n\n      return this;\n    }\n  }, {\n    key: \"collapseBackward\",\n    value: function collapseBackward() {\n      this.endNode = this.startNode;\n      this.endOffset = this.startOffset;\n      return this;\n    }\n  }]);\n\n  return ArenaSelection;\n}();\n\n\n\n//# sourceURL=webpack://Textarena/./helpers/ArenaSelection.ts?");

/***/ }),

/***/ "./helpers/ElementHelper.ts":
/*!**********************************!*\
  !*** ./helpers/ElementHelper.ts ***!
  \**********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar ElementHelper = /*#__PURE__*/function () {\n  function ElementHelper(tagName) {\n    var className = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    var innerHtml = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n\n    _classCallCheck(this, ElementHelper);\n\n    _defineProperty(this, \"elem\", void 0);\n\n    _defineProperty(this, \"classes\", []);\n\n    _defineProperty(this, \"observer\", void 0);\n\n    if (typeof tagName === 'string') {\n      this.elem = document.createElement(tagName);\n    } else {\n      this.elem = tagName;\n    }\n\n    if (className) {\n      this.setClass(className);\n    }\n\n    if (innerHtml) {\n      this.setInnerHTML(innerHtml);\n    }\n  }\n\n  _createClass(ElementHelper, [{\n    key: \"setClass\",\n    value: function setClass(className) {\n      this.elem.className = className;\n      this.classes = [className];\n      return this;\n    }\n  }, {\n    key: \"addClass\",\n    value: function addClass(className) {\n      if (!this.classes.includes(className)) {\n        this.classes.push(className);\n        this.elem.className = this.classes.join(' ');\n      }\n\n      return this;\n    }\n  }, {\n    key: \"removeClass\",\n    value: function removeClass(className) {\n      var pos = this.classes.indexOf(className);\n\n      if (pos !== -1) {\n        this.classes.splice(pos, 1);\n        this.elem.className = this.classes.join(' ');\n      }\n\n      return this;\n    }\n  }, {\n    key: \"appendChild\",\n    value: function appendChild(node) {\n      this.elem.appendChild(node instanceof ElementHelper ? node.getElem() : node);\n      return this;\n    }\n  }, {\n    key: \"append\",\n    value: function append(node) {\n      this.elem.append(node instanceof ElementHelper ? node.getElem() : node);\n      return this;\n    }\n  }, {\n    key: \"css\",\n    value: function css(styles) {\n      var _this = this;\n\n      var k = 'color';\n      this.elem.style[k] = 's';\n      Object.entries(styles).forEach(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            key = _ref2[0],\n            value = _ref2[1];\n\n        _this.elem.style[key] = value || '';\n      });\n      return this;\n    }\n  }, {\n    key: \"getElem\",\n    value: function getElem() {\n      return this.elem;\n    }\n  }, {\n    key: \"getInnerHTML\",\n    value: function getInnerHTML() {\n      return this.elem.innerHTML;\n    }\n  }, {\n    key: \"setInnerHTML\",\n    value: function setInnerHTML(html) {\n      this.elem.innerHTML = html;\n      return this;\n    }\n  }, {\n    key: \"setContentEditable\",\n    value: function setContentEditable(enable) {\n      this.elem.contentEditable = enable ? 'true' : 'false';\n      return this;\n    }\n  }, {\n    key: \"onClick\",\n    value: function onClick(handler) {\n      this.elem.onclick = handler;\n      return this;\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(type, listener, options) {\n      this.elem.addEventListener(type, listener, options);\n      return this;\n    }\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(type, listener, options) {\n      this.elem.removeEventListener(type, listener, options);\n      return this;\n    }\n  }, {\n    key: \"getBoundingClientRect\",\n    value: function getBoundingClientRect() {\n      return this.elem.getBoundingClientRect();\n    }\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      this.elem.focus();\n      return this;\n    }\n  }, {\n    key: \"startObserve\",\n    value: function startObserve(callback, options) {\n      this.stopObserve();\n      this.observer = new MutationObserver(callback);\n      this.observer.observe(this.elem, options);\n    }\n  }, {\n    key: \"stopObserve\",\n    value: function stopObserve() {\n      if (this.observer) {\n        this.observer.disconnect();\n        this.observer = undefined;\n      }\n    }\n  }]);\n\n  return ElementHelper;\n}();\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (ElementHelper);\n\n//# sourceURL=webpack://Textarena/./helpers/ElementHelper.ts?");

/***/ }),

/***/ "./helpers/InlineIntervaler.ts":
/*!*************************************!*\
  !*** ./helpers/InlineIntervaler.ts ***!
  \*************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return InlineIntervaler; });\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar InlineIntervaler = /*#__PURE__*/function () {\n  function InlineIntervaler() {\n    _classCallCheck(this, InlineIntervaler);\n\n    _defineProperty(this, \"intervals\", []);\n  }\n\n  _createClass(InlineIntervaler, [{\n    key: \"getIntervals\",\n    value: function getIntervals() {\n      return this.intervals;\n    }\n  }, {\n    key: \"shift\",\n    value: function shift(offset, step) {\n      var keep = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      this.intervals = this.intervals.map(function (interval) {\n        if (keep ? interval.end < offset : interval.end <= offset) {\n          return interval;\n        }\n\n        return {\n          node: interval.node,\n          start: (keep ? interval.start <= offset : interval.start < offset) ? interval.start : interval.start + step,\n          end: interval.end + step\n        };\n      });\n    }\n  }, {\n    key: \"cut\",\n    value: function cut(start, end) {\n      var intervaler = new InlineIntervaler();\n\n      if (end && end <= start) {\n        return intervaler;\n      }\n\n      var intervals = [];\n      this.intervals.forEach(function (interval) {\n        /**\n         * 0123456789\n         * ---[  ]-- start: 3, end 6\n         *    H 3-3 → ×, cut: ×\n         * [ ] 0-2 → 0-2, cut: ×\n         * [  ] 0-3 → 0-3, cut: ×\n         */\n        if (interval.end <= start) {\n          if (interval.start < start) {\n            intervals.push(interval);\n          }\n\n          return;\n        }\n        /**\n         * 0123456789\n         * ---[  ]-- start: 3, end 6\n         * [   ] 0-4 → 0-3, cut: 0-1\n         *   [   ] 2-6 → 2-3, cut: 0-3\n         * [      ] 0-7 → 0-4, cut: 0-3\n         * [        ] 0-9 → 0-6, cut: 0-3\n         *   [      ] 2-9 → 2-6, cut: 0-3\n         * 012789\n         */\n\n\n        if (interval.start < start) {\n          intervals.push({\n            node: interval.node,\n            start: interval.start,\n            end: end ? start + Math.max(0, interval.end - end) : start\n          });\n\n          if (start < interval.end) {\n            intervaler.addInterval(0, end ? Math.min(end - start, interval.end - start) : interval.end - start, interval.node.clone());\n          }\n\n          return;\n        }\n        /**\n         * 0123456789\n         * ---[  ]-- start: 3, end 6\n         *    [ ] 3-5 → ×, cut: 0-2\n         *    [  ] 3-6 → ×, cut: 0-3\n         *     [] 4-5 → ×, cut: 1-2\n         *    [   ] 3-7 → 3-4, cut: 0-3\n         *     [    ] 4-9 → 3-6, cut: 1-3\n         *       [  ] 6-9 → 3-6, cut: ×\n         *         [] 8-9 → 5-6, cut: ×\n         * 012789\n         */\n\n\n        if (end && interval.end > end) {\n          intervals.push({\n            node: interval.node,\n            start: Math.max(start, interval.start - (end - start)),\n            end: interval.end - (end - start)\n          });\n        }\n\n        if (!end) {\n          intervaler.addInterval(interval.start - start, interval.end - start, interval.node.clone());\n        } else if (interval.start < end && interval.end > start) {\n          intervaler.addInterval(interval.start - start, Math.min(end - start, interval.end - start), interval.node.clone());\n        }\n      });\n      this.intervals = this.checkIntersection(intervals);\n      return intervaler;\n    }\n  }, {\n    key: \"checkIntersection\",\n    value: function checkIntersection(intervals) {\n      var result = [];\n      var lastInterval;\n      intervals.forEach(function (interval) {\n        lastInterval = result.length ? result[result.length - 1] : undefined;\n\n        if (lastInterval && lastInterval.end >= interval.start) {\n          result[result.length - 1] = {\n            node: lastInterval.node,\n            start: lastInterval.start,\n            end: interval.end\n          };\n        } else {\n          result.push(interval);\n        }\n      });\n      return result;\n    }\n  }, {\n    key: \"merge\",\n    value: function merge(intervaler, offset) {\n      var _this = this;\n\n      intervaler.intervals.forEach(function (interval) {\n        _this.addInterval(interval.start + offset, interval.end + offset, interval.node);\n      });\n    }\n  }, {\n    key: \"addInterval\",\n    value: function addInterval(start, end, node) {\n      var newInterval = {\n        start: start,\n        end: end,\n        node: node\n      };\n      var newIntervals = [];\n      var skipOther = false;\n      this.intervals.forEach(function (interval) {\n        if (skipOther) {\n          newIntervals.push(interval);\n          return;\n        }\n        /**\n         * -----[   ]-----\n         * [  ]\n         */\n\n\n        if (newInterval.end <= interval.start) {\n          skipOther = true;\n          newIntervals.push(newInterval);\n          newIntervals.push(interval);\n          return;\n        }\n        /**\n         * -----[   ]-----\n         *            [  ]\n         */\n\n\n        if (newInterval.start >= interval.end) {\n          newIntervals.push(interval);\n          return;\n        }\n\n        skipOther = true;\n        newIntervals.push(interval);\n      });\n\n      if (!skipOther) {\n        newIntervals.push(newInterval);\n      }\n\n      this.intervals = newIntervals;\n    }\n  }, {\n    key: \"getNode\",\n    value: function getNode(start, end) {\n      for (var i = 0; i < this.intervals.length; i += 1) {\n        var interval = this.intervals[i];\n\n        if (interval.end >= start && interval.start <= end) {\n          return interval.node;\n        }\n\n        if (interval.start > start) {\n          return undefined;\n        }\n      }\n\n      return undefined;\n    }\n  }, {\n    key: \"removeNode\",\n    value: function removeNode(node) {\n      for (var i = 0; i < this.intervals.length; i += 1) {\n        if (this.intervals[i].node === node) {\n          this.intervals.splice(i, 1);\n          return;\n        }\n      }\n    }\n  }, {\n    key: \"updateNode\",\n    value: function updateNode(node, start, end) {\n      var newIntervals = [];\n      var skipOther = false;\n      this.intervals.forEach(function (interval) {\n        if (skipOther) {\n          newIntervals.push(interval);\n          return;\n        }\n\n        if (interval.node === node) {\n          newIntervals.push({\n            node: interval.node,\n            start: start,\n            end: end\n          });\n          return;\n        }\n\n        if (interval.end <= start) {\n          newIntervals.push(interval);\n          return;\n        }\n\n        if (interval.start >= end) {\n          skipOther = true;\n          newIntervals.push(interval);\n          return;\n        }\n\n        if (interval.start < start) {\n          newIntervals.push({\n            node: interval.node,\n            start: interval.start,\n            end: Math.min(interval.end, start)\n          });\n          return;\n        }\n\n        if (interval.end > end) {\n          newIntervals.push({\n            node: interval.node,\n            start: Math.max(interval.start, end),\n            end: interval.end\n          });\n        }\n      });\n      this.intervals = newIntervals;\n    }\n  }, {\n    key: \"hasInterval\",\n    value: function hasInterval(start, end) {\n      for (var i = 0; i < this.intervals.length; i += 1) {\n        var interval = this.intervals[i];\n\n        if (interval.start <= start && interval.end >= end) {\n          return true;\n        }\n\n        if (interval.start > start) {\n          return false;\n        }\n      }\n\n      return false;\n    }\n  }]);\n\n  return InlineIntervaler;\n}();\n\n\n\n//# sourceURL=webpack://Textarena/./helpers/InlineIntervaler.ts?");

/***/ }),

/***/ "./helpers/Intervaler.ts":
/*!*******************************!*\
  !*** ./helpers/Intervaler.ts ***!
  \*******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Intervaler; });\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar Intervaler = /*#__PURE__*/function () {\n  function Intervaler() {\n    _classCallCheck(this, Intervaler);\n\n    _defineProperty(this, \"intervals\", []);\n  }\n\n  _createClass(Intervaler, [{\n    key: \"getIntervals\",\n    value: function getIntervals() {\n      return this.intervals;\n    }\n  }, {\n    key: \"shift\",\n    value: function shift(offset, step) {\n      var keep = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      this.intervals = this.intervals.map(function (interval) {\n        if (keep ? interval.end < offset : interval.end <= offset) {\n          return interval;\n        }\n\n        return {\n          start: (keep ? interval.start <= offset : interval.start < offset) ? interval.start : interval.start + step,\n          end: interval.end + step\n        };\n      });\n    }\n  }, {\n    key: \"cut\",\n    value: function cut(start, end) {\n      var intervaler = new Intervaler();\n\n      if (end && end <= start) {\n        return intervaler;\n      }\n\n      var intervals = [];\n      this.intervals.forEach(function (interval) {\n        /**\n         * 0123456789\n         * ---[  ]-- start: 3, end 6\n         *    H 3-3 → ×, cut: ×\n         * [ ] 0-2 → 0-2, cut: ×\n         * [  ] 0-3 → 0-3, cut: ×\n         */\n        if (interval.end <= start) {\n          if (interval.start < start) {\n            intervals.push(interval);\n          }\n\n          return;\n        }\n        /**\n         * 0123456789\n         * ---[  ]-- start: 3, end 6\n         * [   ] 0-4 → 0-3, cut: 0-1\n         *   [   ] 2-6 → 2-3, cut: 0-3\n         * [      ] 0-7 → 0-4, cut: 0-3\n         * [        ] 0-9 → 0-6, cut: 0-3\n         *   [      ] 2-9 → 2-6, cut: 0-3\n         * 012789\n         */\n\n\n        if (interval.start < start) {\n          intervals.push({\n            start: interval.start,\n            end: end ? start + Math.max(0, interval.end - end) : start\n          });\n\n          if (start < interval.end) {\n            intervaler.addInterval(0, end ? Math.min(end - start, interval.end - start) : interval.end - start);\n          }\n\n          return;\n        }\n        /**\n         * 0123456789\n         * ---[  ]-- start: 3, end 6\n         *    [ ] 3-5 → ×, cut: 0-2\n         *    [  ] 3-6 → ×, cut: 0-3\n         *     [] 4-5 → ×, cut: 1-2\n         *    [   ] 3-7 → 3-4, cut: 0-3\n         *     [    ] 4-9 → 3-6, cut: 1-3\n         *       [  ] 6-9 → 3-6, cut: ×\n         *         [] 8-9 → 5-6, cut: ×\n         * 012789\n         */\n\n\n        if (end && interval.end > end) {\n          intervals.push({\n            start: Math.max(start, interval.start - (end - start)),\n            end: interval.end - (end - start)\n          });\n        }\n\n        if (!end) {\n          intervaler.addInterval(interval.start - start, interval.end - start);\n        } else if (interval.start < end && interval.end > start) {\n          intervaler.addInterval(interval.start - start, Math.min(end - start, interval.end - start));\n        }\n      });\n      this.intervals = this.checkIntersection(intervals);\n      return intervaler;\n    }\n  }, {\n    key: \"checkIntersection\",\n    value: function checkIntersection(intervals) {\n      var result = [];\n      var lastInterval;\n      intervals.forEach(function (interval) {\n        lastInterval = result.length ? result[result.length - 1] : undefined;\n\n        if (lastInterval && lastInterval.end >= interval.start) {\n          result[result.length - 1] = {\n            start: lastInterval.start,\n            end: interval.end\n          };\n        } else {\n          result.push(interval);\n        }\n      });\n      return result;\n    }\n  }, {\n    key: \"merge\",\n    value: function merge(intervaler, offset) {\n      var _this = this;\n\n      intervaler.intervals.forEach(function (interval) {\n        _this.addInterval(interval.start + offset, interval.end + offset);\n      });\n    }\n  }, {\n    key: \"addInterval\",\n    value: function addInterval(start, end) {\n      var newInterval = {\n        start: start,\n        end: end\n      };\n      var newIntervals = [];\n      var skipOther = false;\n      this.intervals.forEach(function (interval) {\n        if (skipOther) {\n          newIntervals.push(interval);\n          return;\n        }\n        /**\n         * -----[   ]-----\n         * [  ]\n         */\n\n\n        if (newInterval.end < interval.start) {\n          skipOther = true;\n          newIntervals.push(newInterval);\n          newIntervals.push(interval);\n          return;\n        }\n        /**\n         * -----[   ]-----\n         *            [  ]\n         */\n\n\n        if (newInterval.start > interval.end) {\n          newIntervals.push(interval);\n          return;\n        }\n        /**\n         * -----[   ]-----\n         *   [  ]\n         *   [    ]\n         *   [      ]\n         *       [ ]\n         *       [  ]\n         */\n\n\n        if (newInterval.end <= interval.end) {\n          skipOther = true;\n          newIntervals.push({\n            start: Math.min(newInterval.start, interval.start),\n            end: interval.end\n          });\n          return;\n        }\n        /**\n         * -----[   ]-----\n         *        [   ]\n         *          [  ]\n         */\n\n\n        if (newInterval.end > interval.end) {\n          newInterval = {\n            start: Math.min(newInterval.start, interval.start),\n            end: newInterval.end\n          };\n        }\n      });\n\n      if (!skipOther) {\n        newIntervals.push(newInterval);\n      }\n\n      this.intervals = newIntervals;\n    }\n  }, {\n    key: \"removeInterval\",\n    value: function removeInterval(start, end) {\n      var intervals = [];\n      this.intervals.forEach(function (interval) {\n        // I - current interval\n        // C - current cut\n        // C includes I && C > I\n        if (interval.start > start && interval.end < end) {\n          return;\n        } // I doesn't includes C\n\n\n        if (interval.start > end) {\n          intervals.push({\n            start: interval.start,\n            end: interval.end\n          });\n          return;\n        } // I doesn't includes C\n\n\n        if (interval.end < start) {\n          intervals.push({\n            start: interval.start,\n            end: interval.end\n          });\n          return;\n        } // I includes C && I === C\n\n\n        if (interval.start === start && interval.end === end) {\n          return;\n        } // I includes C\n\n\n        if (interval.start < start && interval.end > end) {\n          intervals.push({\n            start: interval.start,\n            end: start\n          });\n          intervals.push({\n            start: end,\n            end: interval.end\n          });\n          return;\n        } // I includes C (left)\n\n\n        if (interval.start >= start && interval.start <= end) {\n          intervals.push({\n            start: end,\n            end: interval.end\n          });\n          return;\n        } // I includes C (right)\n\n\n        if (interval.end >= start && interval.end <= end) {\n          intervals.push({\n            start: interval.start,\n            end: start\n          });\n        }\n      });\n      this.intervals = intervals;\n    }\n  }, {\n    key: \"hasInterval\",\n    value: function hasInterval(start, end) {\n      for (var i = 0; i < this.intervals.length; i += 1) {\n        var interval = this.intervals[i];\n\n        if (interval.start <= start && interval.end >= end) {\n          return true;\n        }\n\n        if (interval.start > start) {\n          return false;\n        }\n      }\n\n      return false;\n    }\n  }]);\n\n  return Intervaler;\n}();\n\n\n\n//# sourceURL=webpack://Textarena/./helpers/Intervaler.ts?");

/***/ }),

/***/ "./helpers/RichTextManager.ts":
/*!************************************!*\
  !*** ./helpers/RichTextManager.ts ***!
  \************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return RichTextManager; });\n/* harmony import */ var helpers_Intervaler__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! helpers/Intervaler */ \"./helpers/Intervaler.ts\");\n/* harmony import */ var models_InlineNode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! models/InlineNode */ \"./models/InlineNode.ts\");\n/* harmony import */ var _InlineIntervaler__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./InlineIntervaler */ \"./helpers/InlineIntervaler.ts\");\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* eslint-disable no-lonely-if */\n\n\n\n\nvar insertInNodes = function insertInNodes(nodes, tags, interval) {\n  for (var i = 0; i < nodes.length; i += 1) {\n    var node = nodes[i];\n\n    if (node.start >= interval.end) {\n      break;\n    }\n\n    if (interval.start < node.end && interval.end > node.start) {\n      if (node.name === '') {\n        var newNodes = [];\n\n        if (node.start < interval.start) {\n          newNodes.push({\n            name: '',\n            start: node.start,\n            end: interval.start,\n            children: []\n          });\n        }\n\n        newNodes.push(_objectSpread(_objectSpread({}, tags), {}, {\n          start: Math.max(node.start, interval.start),\n          end: Math.min(node.end, interval.end),\n          children: [{\n            name: '',\n            start: Math.max(node.start, interval.start),\n            end: Math.min(node.end, interval.end),\n            children: []\n          }]\n        }));\n\n        if (node.end > interval.end) {\n          newNodes.push({\n            name: '',\n            start: interval.end,\n            end: node.end,\n            children: []\n          });\n        }\n\n        nodes.splice.apply(nodes, [i, 1].concat(newNodes));\n        i += newNodes.length - 1;\n      } else {\n        insertInNodes(node.children, tags, interval);\n      }\n    }\n  }\n};\n\nvar RichTextManager = /*#__PURE__*/function () {\n  function RichTextManager(text, formatings, inlines) {\n    _classCallCheck(this, RichTextManager);\n\n    _defineProperty(this, \"inlines\", void 0);\n\n    _defineProperty(this, \"formatings\", void 0);\n\n    _defineProperty(this, \"text\", void 0);\n\n    this.text = text || '';\n    this.formatings = formatings || {};\n    this.inlines = inlines || new _InlineIntervaler__WEBPACK_IMPORTED_MODULE_2__[\"default\"]();\n  }\n\n  _createClass(RichTextManager, [{\n    key: \"getText\",\n    value: function getText() {\n      return this.text;\n    }\n  }, {\n    key: \"getTextLength\",\n    value: function getTextLength() {\n      return this.text.length;\n    }\n  }, {\n    key: \"getFormatings\",\n    value: function getFormatings() {\n      return this.formatings;\n    }\n  }, {\n    key: \"getHtml\",\n    value: function getHtml(frms) {\n      var text = this.text;\n\n      if (text === '') {\n        return '<br/>';\n      }\n\n      var tree = this.getHtmlTree(frms);\n\n      var _this$getHtmlFromTree = this.getHtmlFromTree(tree),\n          _this$getHtmlFromTree2 = _slicedToArray(_this$getHtmlFromTree, 1),\n          html = _this$getHtmlFromTree2[0];\n\n      return html;\n    }\n  }, {\n    key: \"insertText\",\n    value: function insertText(rtm) {\n      var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var keepFormatings = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var text = typeof rtm === 'string' ? rtm : rtm.getText();\n      this.text = this.text.slice(0, offset) + text + this.text.slice(offset);\n      this.shiftFormatings(offset, text.length, keepFormatings);\n\n      if (rtm instanceof RichTextManager) {\n        this.merge(rtm, offset);\n      }\n\n      return offset + text.length;\n    }\n  }, {\n    key: \"removeText\",\n    value: function removeText(start, end) {\n      this.cutText(start, end);\n    }\n  }, {\n    key: \"cutText\",\n    value: function cutText(start, end) {\n      var text;\n\n      if (end === undefined) {\n        text = this.text.slice(start);\n        this.text = this.text.slice(0, start);\n      } else {\n        text = this.text.slice(start, end);\n        this.text = this.text.slice(0, start) + this.text.slice(end);\n      }\n\n      var formatings = this.cutFormatings(start, end);\n      return new RichTextManager(text, formatings);\n    }\n  }, {\n    key: \"insertFormating\",\n    value: function insertFormating(name, start, end) {\n      if (!this.formatings[name]) {\n        this.formatings[name] = new helpers_Intervaler__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\n      }\n\n      this.formatings[name].addInterval(start, end);\n    }\n  }, {\n    key: \"toggleFormating\",\n    value: function toggleFormating(name, start, end) {\n      if (!this.formatings[name]) {\n        this.formatings[name] = new helpers_Intervaler__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\n        this.formatings[name].addInterval(start, end);\n      } else {\n        if (this.formatings[name].hasInterval(start, end)) {\n          this.formatings[name].removeInterval(start, end);\n        } else {\n          this.formatings[name].addInterval(start, end);\n        }\n      }\n    }\n  }, {\n    key: \"hasFormating\",\n    value: function hasFormating(name, start, end) {\n      if (!this.formatings[name]) {\n        return false;\n      }\n\n      return this.formatings[name].hasInterval(start || 0, end || this.text.length);\n    }\n  }, {\n    key: \"ltrim\",\n    value: function ltrim() {\n      var match = this.text.match(/^( +)/g);\n\n      if (!match) {\n        return;\n      }\n\n      var len = match[0].length;\n      this.cutText(0, len);\n    }\n  }, {\n    key: \"rtrim\",\n    value: function rtrim() {\n      var match = this.text.match(/( +)$/g);\n\n      if (!match) {\n        return;\n      }\n\n      var len = match[0].length;\n      var start = this.text.length - len;\n      this.cutText(start, start + len);\n    }\n  }, {\n    key: \"clearSpaces\",\n    value: function clearSpaces() {\n      var match; // eslint-disable-next-line no-cond-assign\n\n      while (match = / {2,}/.exec(this.text)) {\n        var start = match.index;\n        var end = start + match[0].length - 1;\n        this.cutText(start, end);\n      }\n    }\n  }, {\n    key: \"addInlineNode\",\n    value: function addInlineNode(arena, start, end) {\n      var node = new models_InlineNode__WEBPACK_IMPORTED_MODULE_1__[\"default\"](arena);\n\n      if (node instanceof models_InlineNode__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        this.inlines.addInterval(start, end, node);\n        return node;\n      }\n\n      return undefined;\n    }\n  }, {\n    key: \"getInlineNode\",\n    value: function getInlineNode(arena, start, end) {\n      var node = this.inlines.getNode(start, end);\n\n      if (node instanceof models_InlineNode__WEBPACK_IMPORTED_MODULE_1__[\"default\"] && node.arena === arena) {\n        return node;\n      }\n\n      return undefined;\n    }\n  }, {\n    key: \"removeInlineNode\",\n    value: function removeInlineNode(node) {\n      this.inlines.removeNode(node);\n    }\n  }, {\n    key: \"updateInlineNode\",\n    value: function updateInlineNode(node, start, end) {\n      this.inlines.updateNode(node, start, end);\n    }\n  }, {\n    key: \"cutFormatings\",\n    value: function cutFormatings(start, end) {\n      var formatings = {};\n      this.inlines.cut(start, end);\n      Object.entries(this.formatings).forEach(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            name = _ref2[0],\n            intervaler = _ref2[1];\n\n        formatings[name] = intervaler.cut(start, end);\n      });\n      return formatings;\n    }\n  }, {\n    key: \"prepareText\",\n    value: function prepareText(text, first, last) {\n      var result = text.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;').replace(/'/g, '&#039;').replace(/\\s\\s/g, ' &nbsp;');\n\n      if (first) {\n        result = result.replace(/^\\s/, '&nbsp;');\n      }\n\n      if (last) {\n        result = result.replace(/\\s$/, '&nbsp;');\n      }\n\n      return result;\n    }\n  }, {\n    key: \"getInsertions\",\n    value: function getInsertions(frms) {\n      var insertions = [];\n      Object.entries(this.formatings).forEach(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 2),\n            name = _ref4[0],\n            intervaler = _ref4[1];\n\n        if (frms[name]) {\n          var _frms$name = frms[name],\n              tag = _frms$name.tag,\n              attributes = _frms$name.attributes;\n          var attributesStr = '';\n          attributes.forEach(function (attr) {\n            attributesStr += \" \".concat(attr);\n          });\n          intervaler.getIntervals().forEach(function (interval) {\n            insertions.push({\n              offset: interval.start,\n              tag: \"<\".concat(tag.toLowerCase()).concat(attributesStr, \">\")\n            });\n            insertions.push({\n              offset: interval.end,\n              tag: \"</\".concat(tag.toLowerCase(), \">\")\n            });\n          });\n        }\n      });\n      return insertions.sort(function (a, b) {\n        return a.offset - b.offset;\n      });\n    }\n  }, {\n    key: \"shiftFormatings\",\n    value: function shiftFormatings(offset, step) {\n      var keepFormatings = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      this.inlines.shift(offset, step, keepFormatings);\n      Object.values(this.formatings).forEach(function (intervaler) {\n        return intervaler.shift(offset, step, keepFormatings);\n      });\n    }\n  }, {\n    key: \"merge\",\n    value: function merge(formatings, offset) {\n      var _this = this;\n\n      this.inlines.merge(formatings.inlines, offset);\n      Object.entries(formatings.formatings).forEach(function (_ref5) {\n        var _ref6 = _slicedToArray(_ref5, 2),\n            name = _ref6[0],\n            intervaler = _ref6[1];\n\n        if (!_this.formatings[name]) {\n          _this.formatings[name] = new helpers_Intervaler__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\n        }\n\n        _this.formatings[name].merge(intervaler, offset);\n      });\n    }\n  }, {\n    key: \"getHtmlTree\",\n    value: function getHtmlTree(frms) {\n      var rootNodes = [{\n        name: '',\n        start: 0,\n        end: this.text.length,\n        children: []\n      }];\n      this.inlines.getIntervals().forEach(function (obj) {\n        var node = obj.node,\n            start = obj.start,\n            end = obj.end;\n\n        var _node$getTags = node.getTags(),\n            _node$getTags2 = _slicedToArray(_node$getTags, 2),\n            openTag = _node$getTags2[0],\n            closeTag = _node$getTags2[1];\n\n        insertInNodes(rootNodes, {\n          name: node.arena.name,\n          openTag: openTag,\n          closeTag: closeTag\n        }, {\n          start: start,\n          end: end\n        });\n      });\n      Object.entries(this.formatings).forEach(function (_ref7) {\n        var _ref8 = _slicedToArray(_ref7, 2),\n            name = _ref8[0],\n            intervaler = _ref8[1];\n\n        if (frms[name]) {\n          var _frms$name2 = frms[name],\n              tag = _frms$name2.tag,\n              attributes = _frms$name2.attributes;\n          var attributesStr = '';\n          attributes.forEach(function (attr) {\n            attributesStr += \" \".concat(attr);\n          });\n          intervaler.getIntervals().forEach(function (interval) {\n            insertInNodes(rootNodes, {\n              name: name,\n              openTag: \"<\".concat(tag.toLowerCase()).concat(attributesStr, \">\"),\n              closeTag: \"</\".concat(tag.toLowerCase(), \">\")\n            }, interval);\n          });\n        }\n      });\n      return rootNodes;\n    }\n  }, {\n    key: \"getHtmlFromTree\",\n    value: function getHtmlFromTree(nodes) {\n      var prepareSpace = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var text = '';\n      var lastSpace = prepareSpace;\n\n      for (var i = 0; i < nodes.length; i += 1) {\n        var node = nodes[i];\n\n        if (node.name === '') {\n          var prepared = this.prepareText(this.text.slice(node.start, node.end), node.start === 0, node.end === this.text.length);\n\n          if (lastSpace) {\n            prepared = prepared.replace(/^\\s/, '&nbsp;');\n          }\n\n          lastSpace = prepared.slice(-1) === ' ';\n          text += prepared;\n        } else {\n          var _this$getHtmlFromTree3 = this.getHtmlFromTree(node.children, lastSpace),\n              _this$getHtmlFromTree4 = _slicedToArray(_this$getHtmlFromTree3, 2),\n              childText = _this$getHtmlFromTree4[0],\n              childPrepareSpace = _this$getHtmlFromTree4[1];\n\n          lastSpace = childPrepareSpace;\n          text += node.openTag + childText + node.closeTag;\n        }\n      }\n\n      return [text, lastSpace];\n    }\n  }]);\n\n  return RichTextManager;\n}();\n\n\n\n//# sourceURL=webpack://Textarena/./helpers/RichTextManager.ts?");

/***/ }),

/***/ "./models/InlineNode.ts":
/*!******************************!*\
  !*** ./models/InlineNode.ts ***!
  \******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return InlineNode; });\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar InlineNode = /*#__PURE__*/function () {\n  function InlineNode(arena) {\n    _classCallCheck(this, InlineNode);\n\n    this.arena = arena;\n\n    _defineProperty(this, \"hasParent\", true);\n\n    _defineProperty(this, \"inline\", true);\n\n    _defineProperty(this, \"attributes\", {});\n  }\n\n  _createClass(InlineNode, [{\n    key: \"getHtml\",\n    value: function getHtml() {\n      return this.arena.getTemplate(undefined, '');\n    }\n  }, {\n    key: \"getAttributesString\",\n    value: function getAttributesString() {\n      var str = '';\n      this.arena.attributes.forEach(function (attr) {\n        str += \" \".concat(attr);\n      });\n      Object.entries(this.attributes).forEach(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            name = _ref2[0],\n            value = _ref2[1];\n\n        var escapedValue = value.replace(/&/g, '&amp;').replace(/'/g, '&apos;').replace(/\"/g, '&quot;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n        str += \" \".concat(name, \"=\\\"\").concat(escapedValue, \"\\\"\");\n      });\n      return str;\n    }\n  }, {\n    key: \"getTags\",\n    value: function getTags() {\n      var attrs = this.getAttributesString();\n      var tag = this.arena.tag.toLowerCase();\n      return [\"<\".concat(tag.toLowerCase()).concat(attrs, \">\"), \"</\".concat(tag.toLowerCase(), \">\")];\n    }\n  }, {\n    key: \"getOutputHtml\",\n    value: function getOutputHtml(_frms) {\n      var deep = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this.arena.getOutputTemplate('', deep);\n    }\n  }, {\n    key: \"setAttribute\",\n    value: function setAttribute(name, value) {\n      this.attributes[name] = value;\n    }\n  }, {\n    key: \"getAttribute\",\n    value: function getAttribute(name) {\n      return this.attributes[name] || '';\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      var newNode = new InlineNode(this.arena);\n      Object.entries(this.attributes).forEach(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 2),\n            name = _ref4[0],\n            value = _ref4[1];\n\n        newNode.setAttribute(name, value);\n      });\n      return newNode;\n    }\n  }]);\n\n  return InlineNode;\n}();\n\n\n\n//# sourceURL=webpack://Textarena/./models/InlineNode.ts?");

/***/ }),

/***/ "./models/MediatorNode.ts":
/*!********************************!*\
  !*** ./models/MediatorNode.ts ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return MediatorNode; });\n/* harmony import */ var lit_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit-html */ \"../node_modules/lit-html/lit-html.js\");\n/* harmony import */ var lit_html_directives_repeat__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lit-html/directives/repeat */ \"../node_modules/lit-html/directives/repeat.js\");\n/* harmony import */ var _NodeFactory__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./NodeFactory */ \"./models/NodeFactory.ts\");\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n      \", \"\\n    \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n // TODO сделать вариант когда у нас фиксированное количество дочерних нод,\n// например callout (title, paragraph)\n// или quote (title, section).\n\nvar MediatorNode = /*#__PURE__*/function () {\n  function MediatorNode(arena, parent) {\n    var _this = this;\n\n    _classCallCheck(this, MediatorNode);\n\n    this.arena = arena;\n    this.parent = parent;\n\n    _defineProperty(this, \"hasParent\", true);\n\n    _defineProperty(this, \"hasChildren\", true);\n\n    _defineProperty(this, \"children\", []);\n\n    if (arena[\"protected\"]) {\n      this.children = arena.protectedChildren.map(function (childArena) {\n        return _NodeFactory__WEBPACK_IMPORTED_MODULE_2__[\"default\"].createNode(childArena, _this);\n      });\n    }\n  }\n\n  _createClass(MediatorNode, [{\n    key: \"getIndex\",\n    value: function getIndex() {\n      return this.parent.children.indexOf(this);\n    }\n  }, {\n    key: \"isLastChild\",\n    value: function isLastChild() {\n      return this.parent.children.indexOf(this) === this.parent.children.length - 1;\n    }\n  }, {\n    key: \"getGlobalIndex\",\n    value: function getGlobalIndex() {\n      return \"\".concat(this.parent.getGlobalIndex(), \".\").concat(this.getIndex().toString());\n    }\n  }, {\n    key: \"getParent\",\n    value: function getParent() {\n      return {\n        node: this.parent,\n        offset: this.getIndex()\n      };\n    }\n  }, {\n    key: \"setParent\",\n    value: function setParent(parent) {\n      this.parent = parent;\n    }\n  }, {\n    key: \"getUnprotectedParent\",\n    value: function getUnprotectedParent() {\n      if (this.parent.arena[\"protected\"]) {\n        return this.parent.getUnprotectedParent();\n      }\n\n      return {\n        node: this.parent,\n        offset: this.getIndex()\n      };\n    }\n  }, {\n    key: \"getHtml\",\n    value: function getHtml(frms) {\n      if (this.children.length === 0) {\n        return '';\n      }\n\n      return this.arena.getTemplate(Object(lit_html__WEBPACK_IMPORTED_MODULE_0__[\"html\"])(_templateObject(), Object(lit_html_directives_repeat__WEBPACK_IMPORTED_MODULE_1__[\"repeat\"])(this.children, function (c, index) {\n        return index;\n      }, function (child) {\n        return child.getHtml(frms);\n      })), this.getGlobalIndex());\n    }\n  }, {\n    key: \"getOutputHtml\",\n    value: function getOutputHtml(frms) {\n      var deep = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this.arena.getOutputTemplate(this.children.map(function (child) {\n        return child.getOutputHtml(frms, deep + 1);\n      }).join('\\n'), deep);\n    }\n  }, {\n    key: \"insertText\",\n    value: function insertText(text, offset) {\n      if (this.arena.arenaForText) {\n        var newNode = this.createAndInsertNode(this.arena.arenaForText, offset);\n\n        if (newNode) {\n          return newNode.insertText(text, 0);\n        }\n      }\n\n      return this.parent.insertText(text, this.getIndex() + 1);\n    }\n  }, {\n    key: \"getTextCursor\",\n    value: function getTextCursor(index) {\n      if (!this.arena.arenaForText) {\n        return this.parent.getTextCursor(this.getIndex());\n      }\n\n      if (index === -1) {\n        for (var i = this.children.length - 1; i >= 0; i -= 1) {\n          var _arena = this.children[i].arena;\n\n          if ('allowText' in _arena || 'arenaForText' in _arena && _arena.arenaForText) {\n            return this.children[i].getTextCursor(index === -1 ? -1 : 0);\n          }\n        }\n      } else {\n        for (var _i = 0; _i < this.children.length; _i += 1) {\n          var _arena2 = this.children[_i].arena;\n\n          if ('allowText' in _arena2 || 'arenaForText' in _arena2 && _arena2.arenaForText) {\n            return this.children[_i].getTextCursor(index === -1 ? -1 : 0);\n          }\n        }\n      }\n\n      var newNode = this.createAndInsertNode(this.arena.arenaForText, index === -1 ? this.children.length : index);\n\n      if (newNode) {\n        return newNode.getTextCursor(0);\n      }\n\n      throw new Error('Arena for text was not created');\n    }\n  }, {\n    key: \"createAndInsertNode\",\n    value: function createAndInsertNode(arena, offset) {\n      if (this.arena[\"protected\"]) {\n        var protectedChildren = this.arena.protectedChildren;\n\n        for (var i = 0; i < protectedChildren.length; i += 1) {\n          if (protectedChildren[i] === arena) {\n            return this.children[i];\n          }\n        }\n      } else if (this.arena.allowedArenas.includes(arena)) {\n        var node = _NodeFactory__WEBPACK_IMPORTED_MODULE_2__[\"default\"].createNode(arena, this);\n        this.children.splice(offset, 0, node);\n        return node;\n      }\n\n      return this.parent.createAndInsertNode(arena, this.getIndex() + 1);\n    }\n  }, {\n    key: \"insertChildren\",\n    value: function insertChildren(nodes, offset) {\n      var _this2 = this;\n\n      var index = offset || 0;\n      nodes.forEach(function (node) {\n        if (_this2.arena.allowedArenas.includes(node.arena)) {\n          node.setParent(_this2);\n\n          _this2.children.splice(index, 0, node);\n\n          index += 1;\n        }\n      });\n    }\n  }, {\n    key: \"removeChild\",\n    value: function removeChild(index) {\n      if (!this.arena[\"protected\"]) {\n        this.children.splice(index, 1);\n        return this.checkChildren(index);\n      }\n\n      return {\n        node: this,\n        offset: index\n      };\n    }\n  }, {\n    key: \"cutChildren\",\n    value: function cutChildren(start, length) {\n      var result = [];\n\n      if (!this.arena[\"protected\"]) {\n        if (length === undefined) {\n          result = this.children.splice(start);\n        } else {\n          result = this.children.splice(start, length);\n        }\n\n        this.checkChildren(start);\n      }\n\n      return result;\n    }\n  }, {\n    key: \"removeChildren\",\n    value: function removeChildren(start, length) {\n      this.cutChildren(start, length);\n    }\n  }, {\n    key: \"getChild\",\n    value: function getChild(index) {\n      return this.children[index] || undefined;\n    }\n  }, {\n    key: \"remove\",\n    value: function remove() {\n      return this.parent.removeChild(this.getIndex());\n    }\n  }, {\n    key: \"checkChildren\",\n    value: function checkChildren(index) {\n      if (this.children.length === 0) {\n        return this.remove();\n      }\n\n      var newIndex = index;\n\n      for (var i = 1; i < this.children.length; i += 1) {\n        var child = this.children[i];\n        var prev = this.children[i - 1];\n\n        if (child.arena.automerge && child.arena === prev.arena) {\n          prev.insertChildren(child.children);\n          this.children.splice(i, 1);\n\n          if (i >= newIndex) {\n            newIndex -= 1;\n          }\n\n          i -= 1;\n        }\n      }\n\n      return {\n        node: this,\n        offset: newIndex\n      };\n    }\n  }]);\n\n  return MediatorNode;\n}();\n\n\n\n//# sourceURL=webpack://Textarena/./models/MediatorNode.ts?");

/***/ }),

/***/ "./models/NodeFactory.ts":
/*!*******************************!*\
  !*** ./models/NodeFactory.ts ***!
  \*******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return NodeFactory; });\n/* harmony import */ var _MediatorNode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./MediatorNode */ \"./models/MediatorNode.ts\");\n/* harmony import */ var _RichNode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./RichNode */ \"./models/RichNode.ts\");\n/* harmony import */ var _SingleNode__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./SingleNode */ \"./models/SingleNode.ts\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\n\nvar NodeFactory = /*#__PURE__*/function () {\n  function NodeFactory() {\n    _classCallCheck(this, NodeFactory);\n  }\n\n  _createClass(NodeFactory, null, [{\n    key: \"createNode\",\n    value: function createNode(arena, parent) {\n      if ('allowText' in arena) {\n        return new _RichNode__WEBPACK_IMPORTED_MODULE_1__[\"default\"](arena, parent);\n      }\n\n      if ('single' in arena) {\n        return new _SingleNode__WEBPACK_IMPORTED_MODULE_2__[\"default\"](arena, parent);\n      }\n\n      if ('hasChildren' in arena) {\n        return new _MediatorNode__WEBPACK_IMPORTED_MODULE_0__[\"default\"](arena, parent);\n      }\n\n      throw new Error('Cant create Node');\n    }\n  }]);\n\n  return NodeFactory;\n}();\n\n\n\n//# sourceURL=webpack://Textarena/./models/NodeFactory.ts?");

/***/ }),

/***/ "./models/RichNode.ts":
/*!****************************!*\
  !*** ./models/RichNode.ts ***!
  \****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return RichNode; });\n/* harmony import */ var lit_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit-html */ \"../node_modules/lit-html/lit-html.js\");\n/* harmony import */ var lit_html_directives_unsafe_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lit-html/directives/unsafe-html */ \"../node_modules/lit-html/directives/unsafe-html.js\");\n/* harmony import */ var helpers_RichTextManager__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! helpers/RichTextManager */ \"./helpers/RichTextManager.ts\");\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\", \"\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\nvar RichNode = /*#__PURE__*/function () {\n  function RichNode(arena, parent) {\n    _classCallCheck(this, RichNode);\n\n    this.arena = arena;\n    this.parent = parent;\n\n    _defineProperty(this, \"hasParent\", true);\n\n    _defineProperty(this, \"hasText\", true);\n\n    _defineProperty(this, \"richTextManager\", new helpers_RichTextManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"]());\n  }\n\n  _createClass(RichNode, [{\n    key: \"getIndex\",\n    value: function getIndex() {\n      return this.parent.children.indexOf(this);\n    }\n  }, {\n    key: \"isLastChild\",\n    value: function isLastChild() {\n      return this.parent.children.indexOf(this) === this.parent.children.length - 1;\n    }\n  }, {\n    key: \"getGlobalIndex\",\n    value: function getGlobalIndex() {\n      return \"\".concat(this.parent.getGlobalIndex(), \".\").concat(this.getIndex().toString());\n    }\n  }, {\n    key: \"getParent\",\n    value: function getParent() {\n      return {\n        node: this.parent,\n        offset: this.getIndex()\n      };\n    }\n  }, {\n    key: \"setParent\",\n    value: function setParent(parent) {\n      this.parent = parent;\n    }\n  }, {\n    key: \"getUnprotectedParent\",\n    value: function getUnprotectedParent() {\n      if (this.parent.arena[\"protected\"]) {\n        return this.parent.getUnprotectedParent();\n      }\n\n      return {\n        node: this.parent,\n        offset: this.getIndex()\n      };\n    }\n  }, {\n    key: \"remove\",\n    value: function remove() {\n      return this.parent.removeChild(this.getIndex());\n    }\n  }, {\n    key: \"getTextCursor\",\n    value: function getTextCursor(index) {\n      return {\n        node: this,\n        offset: index === -1 ? this.getTextLength() : index\n      };\n    }\n  }, {\n    key: \"createAndInsertNode\",\n    value: function createAndInsertNode(arena) {\n      return this.parent.createAndInsertNode(arena, this.getIndex() + 1);\n    }\n  }, {\n    key: \"insertText\",\n    value: function insertText(text, offset) {\n      var keepFormatings = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      return {\n        node: this,\n        offset: this.richTextManager.insertText(text, offset, keepFormatings)\n      };\n    }\n  }, {\n    key: \"insertFormating\",\n    value: function insertFormating(name, start, end) {\n      this.richTextManager.insertFormating(name, start, end);\n    }\n  }, {\n    key: \"ltrim\",\n    value: function ltrim() {\n      this.richTextManager.ltrim();\n    }\n  }, {\n    key: \"rtrim\",\n    value: function rtrim() {\n      this.richTextManager.rtrim();\n    }\n  }, {\n    key: \"clearSpaces\",\n    value: function clearSpaces() {\n      this.richTextManager.clearSpaces();\n    }\n  }, {\n    key: \"toggleFormating\",\n    value: function toggleFormating(name, start, end) {\n      this.richTextManager.toggleFormating(name, start, end);\n    }\n  }, {\n    key: \"getHtml\",\n    value: function getHtml(frms) {\n      var content = this.richTextManager.getHtml(frms);\n      return this.arena.getTemplate(Object(lit_html__WEBPACK_IMPORTED_MODULE_0__[\"html\"])(_templateObject(), Object(lit_html_directives_unsafe_html__WEBPACK_IMPORTED_MODULE_1__[\"unsafeHTML\"])(content)), this.getGlobalIndex());\n    }\n  }, {\n    key: \"getOutputHtml\",\n    value: function getOutputHtml(frms, deep) {\n      var text = this.richTextManager.getHtml(frms);\n      return this.arena.getOutputTemplate(text, deep);\n    }\n  }, {\n    key: \"getText\",\n    value: function getText() {\n      return this.richTextManager;\n    }\n  }, {\n    key: \"getRawText\",\n    value: function getRawText() {\n      return this.richTextManager.getText();\n    }\n  }, {\n    key: \"cutText\",\n    value: function cutText(start, end) {\n      return this.richTextManager.cutText(start, end);\n    }\n  }, {\n    key: \"removeText\",\n    value: function removeText(start, end) {\n      this.richTextManager.removeText(start, end);\n    }\n  }, {\n    key: \"getTextLength\",\n    value: function getTextLength() {\n      return this.richTextManager.getTextLength();\n    }\n  }, {\n    key: \"addInlineNode\",\n    value: function addInlineNode(arena, start, end) {\n      return this.richTextManager.addInlineNode(arena, start, end);\n    }\n  }, {\n    key: \"getInlineNode\",\n    value: function getInlineNode(arena, start, end) {\n      return this.richTextManager.getInlineNode(arena, start, end);\n    }\n  }, {\n    key: \"removeInlineNode\",\n    value: function removeInlineNode(node) {\n      this.richTextManager.removeInlineNode(node);\n    }\n  }, {\n    key: \"updateInlineNode\",\n    value: function updateInlineNode(node, start, end) {\n      this.richTextManager.updateInlineNode(node, start, end);\n    }\n  }]);\n\n  return RichNode;\n}();\n\n\n\n//# sourceURL=webpack://Textarena/./models/RichNode.ts?");

/***/ }),

/***/ "./models/RootNode.ts":
/*!****************************!*\
  !*** ./models/RootNode.ts ***!
  \****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return RootNode; });\n/* harmony import */ var lit_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit-html */ \"../node_modules/lit-html/lit-html.js\");\n/* harmony import */ var lit_html_directives_repeat__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lit-html/directives/repeat */ \"../node_modules/lit-html/directives/repeat.js\");\n/* harmony import */ var _NodeFactory__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./NodeFactory */ \"./models/NodeFactory.ts\");\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n      \", \"\\n    \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n // У корневого может быть разрешены либо параграфы (заголовки), либо секции (и большие картинки)\n\nvar RootNode = /*#__PURE__*/function () {\n  function RootNode(arena) {\n    _classCallCheck(this, RootNode);\n\n    this.arena = arena;\n\n    _defineProperty(this, \"hasChildren\", true);\n\n    _defineProperty(this, \"children\", []);\n  }\n\n  _createClass(RootNode, [{\n    key: \"getGlobalIndex\",\n    value: function getGlobalIndex() {\n      return '0';\n    }\n  }, {\n    key: \"getParent\",\n    value: function getParent() {\n      return {\n        node: this,\n        offset: 0\n      };\n    }\n  }, {\n    key: \"getUnprotectedParent\",\n    value: function getUnprotectedParent() {\n      return undefined;\n    }\n  }, {\n    key: \"getHtml\",\n    value: function getHtml(frms) {\n      return this.arena.getTemplate(Object(lit_html__WEBPACK_IMPORTED_MODULE_0__[\"html\"])(_templateObject(), Object(lit_html_directives_repeat__WEBPACK_IMPORTED_MODULE_1__[\"repeat\"])(this.children, function (c, index) {\n        return index;\n      }, function (child) {\n        return child.getHtml(frms);\n      })), this.getGlobalIndex());\n    }\n  }, {\n    key: \"getOutputHtml\",\n    value: function getOutputHtml(frms) {\n      return this.children.map(function (child) {\n        return child.getOutputHtml(frms, 0);\n      }).join('\\n\\n');\n    }\n  }, {\n    key: \"insertText\",\n    value: function insertText(text, offset) {\n      if (!this.arena.arenaForText) {\n        throw new Error('Arena for text not found');\n      }\n\n      var newNode = this.createAndInsertNode(this.arena.arenaForText, offset);\n\n      if (!newNode) {\n        throw new Error(\"Arena \\\"\".concat(this.arena.arenaForText.name, \"\\\" was not created\"));\n      }\n\n      return newNode.insertText(text, 0);\n    }\n  }, {\n    key: \"getTextCursor\",\n    value: function getTextCursor(index) {\n      if (!this.arena.arenaForText) {\n        throw new Error('Root node has not arena for text');\n      }\n\n      var start = index === -1 ? this.children.length - 1 : 0;\n      var end = index === -1 ? 0 : this.children.length - 1;\n\n      for (var i = start; i <= end; i += index === -1 ? -1 : 1) {\n        var _arena = this.children[i].arena;\n\n        if ('allowText' in _arena || 'arenaForText' in _arena && _arena.arenaForText) {\n          return this.children[i].getTextCursor(index === -1 ? -1 : 0);\n        }\n      }\n\n      var newNode = this.createAndInsertNode(this.arena.arenaForText, index === -1 ? this.children.length : index);\n\n      if (newNode) {\n        return newNode.getTextCursor(0);\n      }\n\n      throw new Error('Arena for text was not created');\n    }\n  }, {\n    key: \"createAndInsertNode\",\n    value: function createAndInsertNode(arena, offset) {\n      if (this.arena.allowedArenas.includes(arena)) {\n        var node = _NodeFactory__WEBPACK_IMPORTED_MODULE_2__[\"default\"].createNode(arena, this);\n        this.children.splice(offset, 0, node);\n        return node;\n      }\n\n      return undefined;\n    }\n  }, {\n    key: \"removeChild\",\n    value: function removeChild(index) {\n      this.children.splice(index, 1);\n      return this.checkChildren(index);\n    }\n  }, {\n    key: \"cutChildren\",\n    value: function cutChildren(start, length) {\n      var result = [];\n\n      if (!this.arena[\"protected\"]) {\n        if (length === undefined) {\n          result = this.children.splice(start);\n        } else {\n          result = this.children.splice(start, length);\n        }\n\n        this.checkChildren(start);\n      }\n\n      return result;\n    }\n  }, {\n    key: \"insertChildren\",\n    value: function insertChildren(nodes, offset) {\n      var _this = this;\n\n      var index = offset || 0;\n      nodes.forEach(function (node) {\n        if (_this.arena.allowedArenas.includes(node.arena)) {\n          node.setParent(_this);\n\n          _this.children.splice(index, 0, node);\n\n          index += 1;\n        }\n      });\n    }\n  }, {\n    key: \"removeChildren\",\n    value: function removeChildren(start, length) {\n      this.cutChildren(start, length);\n    }\n  }, {\n    key: \"getChild\",\n    value: function getChild(index) {\n      return this.children[index] || undefined;\n    }\n  }, {\n    key: \"checkChildren\",\n    value: function checkChildren(index) {\n      var newIndex = index;\n\n      for (var i = 1; i < this.children.length; i += 1) {\n        var child = this.children[i];\n        var prev = this.children[i - 1];\n\n        if (child.arena.automerge && child.arena === prev.arena) {\n          prev.insertChildren(child.children);\n          this.children.splice(i, 1);\n\n          if (i >= newIndex) {\n            newIndex -= 1;\n          }\n\n          i -= 1;\n        }\n      }\n\n      return {\n        node: this,\n        offset: newIndex\n      };\n    }\n  }]);\n\n  return RootNode;\n}();\n\n\n\n//# sourceURL=webpack://Textarena/./models/RootNode.ts?");

/***/ }),

/***/ "./models/SingleNode.ts":
/*!******************************!*\
  !*** ./models/SingleNode.ts ***!
  \******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return SingleNode; });\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar SingleNode = /*#__PURE__*/function () {\n  function SingleNode(arena, parent) {\n    _classCallCheck(this, SingleNode);\n\n    this.arena = arena;\n    this.parent = parent;\n\n    _defineProperty(this, \"hasParent\", true);\n  }\n\n  _createClass(SingleNode, [{\n    key: \"getIndex\",\n    value: function getIndex() {\n      return this.parent.children.indexOf(this);\n    }\n  }, {\n    key: \"isLastChild\",\n    value: function isLastChild() {\n      return this.parent.children.indexOf(this) === this.parent.children.length - 1;\n    }\n  }, {\n    key: \"getParent\",\n    value: function getParent() {\n      return {\n        node: this.parent,\n        offset: this.getIndex()\n      };\n    }\n  }, {\n    key: \"setParent\",\n    value: function setParent(parent) {\n      this.parent = parent;\n    }\n  }, {\n    key: \"getUnprotectedParent\",\n    value: function getUnprotectedParent() {\n      if (this.parent.arena[\"protected\"]) {\n        return this.parent.getUnprotectedParent();\n      }\n\n      return {\n        node: this.parent,\n        offset: this.getIndex()\n      };\n    }\n  }, {\n    key: \"getGlobalIndex\",\n    value: function getGlobalIndex() {\n      return \"\".concat(this.parent.getGlobalIndex(), \".\").concat(this.getIndex().toString());\n    }\n  }, {\n    key: \"insertText\",\n    value: function insertText(text) {\n      return this.parent.insertText(text, this.getIndex() + 1);\n    }\n  }, {\n    key: \"getTextCursor\",\n    value: function getTextCursor() {\n      return this.parent.getTextCursor(this.getIndex());\n    }\n  }, {\n    key: \"createAndInsertNode\",\n    value: function createAndInsertNode(arena) {\n      return this.parent.createAndInsertNode(arena, this.getIndex() + 1);\n    }\n  }, {\n    key: \"remove\",\n    value: function remove() {\n      return this.parent.removeChild(this.getIndex());\n    }\n  }, {\n    key: \"getHtml\",\n    value: function getHtml() {\n      return this.arena.getTemplate(undefined, this.getGlobalIndex());\n    }\n  }, {\n    key: \"getOutputHtml\",\n    value: function getOutputHtml(_frms) {\n      var deep = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this.arena.getOutputTemplate('', deep);\n    }\n  }]);\n\n  return SingleNode;\n}();\n\n\n\n//# sourceURL=webpack://Textarena/./models/SingleNode.ts?");

/***/ }),

/***/ "./plugins/calloutPlugin.ts":
/*!**********************************!*\
  !*** ./plugins/calloutPlugin.ts ***!
  \**********************************/
/*! exports provided: Callout, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Callout\", function() { return Callout; });\n/* harmony import */ var lit_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit-element */ \"../node_modules/lit-element/lit-element.js\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar _dec, _dec2, _class, _class2, _descriptor, _class3, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    :host {\\n      background: lightgray;\\n      border: 1px solid red;\\n      display: block;\\n      padding: 1em;\\n    }\\n    [name=\\\"title\\\"] {\\n      font-weight: 900;\\n\\n    }\\n    [name=\\\"title\\\"] * {\\n      margin: 0;\\n    }\\n    .hr {\\n      white-space: nowrap;\\n      overflow: hidden;\\n      font-size: .4em;\\n      user-select: none;\\n    }\\n    .nb {\\n      color: red;\\n      user-select: none;\\n    }\\n    span {\\n      color: green;\\n    }\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"<div>\\n      <div class=\\\"nb\\\">N. B.</div>\\n      <slot name=\\\"title\\\"></slot>\\n      <div class=\\\"hr\\\">n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.n.b.</div>\\n      <slot name=\\\"body\\\"></slot>\\n    </div>\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nfunction _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }\n\nfunction _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }\n\n\nvar Callout = (_dec = Object(lit_element__WEBPACK_IMPORTED_MODULE_0__[\"customElement\"])('arena-callout'), _dec2 = Object(lit_element__WEBPACK_IMPORTED_MODULE_0__[\"property\"])(), _dec(_class = (_class2 = (_temp = _class3 = /*#__PURE__*/function (_LitElement) {\n  _inherits(Callout, _LitElement);\n\n  var _super = _createSuper(Callout);\n\n  function Callout() {\n    var _this;\n\n    _classCallCheck(this, Callout);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _initializerDefineProperty(_assertThisInitialized(_this), \"mood\", _descriptor, _assertThisInitialized(_this));\n\n    return _this;\n  }\n\n  _createClass(Callout, [{\n    key: \"render\",\n    // Render element DOM by returning a `lit-html` template.\n    value: function render() {\n      return Object(lit_element__WEBPACK_IMPORTED_MODULE_0__[\"html\"])(_templateObject());\n    }\n  }]);\n\n  return Callout;\n}(lit_element__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"]), _defineProperty(_class3, \"styles\", Object(lit_element__WEBPACK_IMPORTED_MODULE_0__[\"css\"])(_templateObject2())), _temp), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, \"mood\", [_dec2], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return 'great';\n  }\n})), _class2)) || _class);\nvar defaultOptions = {\n  name: 'callout',\n  icon: '<b>NB</b>',\n  title: 'Callout',\n  tag: 'ARENA-CALLOUT',\n  attributes: [],\n  shortcut: 'Alt + KeyC',\n  hint: 'c',\n  command: 'add-callout'\n};\n\nvar calloutPlugin = function calloutPlugin(opts) {\n  return {\n    register: function register(textarena) {\n      var _defaultOptions = _objectSpread(_objectSpread({}, defaultOptions), opts || {}),\n          name = _defaultOptions.name,\n          icon = _defaultOptions.icon,\n          title = _defaultOptions.title,\n          tag = _defaultOptions.tag,\n          attributes = _defaultOptions.attributes,\n          shortcut = _defaultOptions.shortcut,\n          hint = _defaultOptions.hint,\n          command = _defaultOptions.command;\n\n      var paragraph = textarena.getDefaultTextArena();\n\n      if (!paragraph) {\n        throw new Error('Default Arena for text not found');\n      }\n\n      var allowedArenas = textarena.getSimpleArenas();\n      var calloutBodyContainer = textarena.registerArena({\n        name: 'callout-body-container',\n        tag: 'ARENA-CALLOUT-BODY',\n        attributes: ['slot=body'],\n        hasChildren: true,\n        allowedArenas: allowedArenas,\n        arenaForText: paragraph\n      }, [{\n        tag: 'ARENA-CALLOUT-BODY',\n        attributes: ['slot=body']\n      }], []);\n      var calloutTitleParagraph = textarena.registerArena({\n        name: 'callout-title-paragraph',\n        tag: 'P',\n        attributes: ['slot=title'],\n        allowText: true,\n        allowFormating: true,\n        nextArena: calloutBodyContainer\n      }, [{\n        tag: 'P',\n        attributes: ['slot=title']\n      }], []);\n      var arena = textarena.registerArena({\n        name: name,\n        tag: tag,\n        attributes: attributes,\n        hasChildren: true,\n        protectedChildren: [calloutTitleParagraph, calloutBodyContainer],\n        arenaForText: calloutBodyContainer,\n        allowedArenas: [calloutTitleParagraph, calloutBodyContainer]\n      }, [{\n        tag: tag,\n        attributes: []\n      }], [textarena.getRootArenaName()]);\n      textarena.registerCommand(command, function (ta, selection) {\n        var sel = ta.transformModel(selection, arena);\n        return sel;\n      });\n      textarena.registerShortcut(shortcut, command);\n      textarena.registerCreator({\n        name: name,\n        icon: icon,\n        title: title,\n        shortcut: shortcut,\n        hint: hint,\n        command: command\n      });\n    }\n  };\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (calloutPlugin);\n\n//# sourceURL=webpack://Textarena/./plugins/calloutPlugin.ts?");

/***/ }),

/***/ "./plugins/commonPlugin.ts":
/*!*********************************!*\
  !*** ./plugins/commonPlugin.ts ***!
  \*********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nvar commonPlugin = function commonPlugin() {\n  return {\n    register: function register(textarena) {\n      textarena.registerCommand('breakSelection', function (ta, selection) {\n        return ta.breakSelection(selection);\n      });\n      textarena.registerShortcut('Enter', 'breakSelection');\n      textarena.registerShortcut('Ctrl + Enter', 'breakSelection');\n      textarena.registerCommand('moveChildUp', function (ta, selection) {\n        return ta.moveChild(selection, 'up');\n      });\n      textarena.registerShortcut('Alt + ArrowUp', 'moveChildUp');\n      textarena.registerCommand('moveChildDown', function (ta, selection) {\n        return ta.moveChild(selection, 'down');\n      });\n      textarena.registerShortcut('Alt + ArrowDown', 'moveChildDown');\n    }\n  };\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (commonPlugin);\n\n//# sourceURL=webpack://Textarena/./plugins/commonPlugin.ts?");

/***/ }),

/***/ "./plugins/formatingsPlugin.ts":
/*!*************************************!*\
  !*** ./plugins/formatingsPlugin.ts ***!
  \*************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar defaultOptions = {\n  formatings: [{\n    name: 'strong',\n    tag: 'STRONG',\n    attributes: [],\n    shortcut: 'Ctrl + KeyB',\n    hint: 'b',\n    command: 'format-strong',\n    marks: [{\n      tag: 'B',\n      attributes: []\n    }, {\n      tag: 'STRONG',\n      attributes: []\n    }, {\n      tag: 'SPAN',\n      attributes: ['style=fontWeight:bold', 'style=fontWeight:900', 'style=fontWeight:800', 'style=fontWeight:700', 'style=fontWeight:600']\n    }],\n    tool: {\n      title: 'Strong (bold)',\n      icon: '<b>B</b>'\n    }\n  }, {\n    name: 'emphasized',\n    tag: 'EM',\n    attributes: [],\n    command: 'format-emphasized',\n    shortcut: 'Ctrl + KeyI',\n    hint: 'i',\n    marks: [{\n      tag: 'I',\n      attributes: []\n    }, {\n      tag: 'EM',\n      attributes: []\n    }, {\n      tag: 'SPAN',\n      attributes: ['style=fontStyle:italic']\n    }],\n    tool: {\n      title: 'Italic (emphasized)',\n      icon: '<i>I</i>'\n    }\n  }, {\n    name: 'underline',\n    tag: 'U',\n    attributes: [],\n    shortcut: 'Ctrl + KeyU',\n    hint: 'u',\n    command: 'format-underline',\n    marks: [{\n      tag: 'U',\n      attributes: []\n    }, {\n      tag: 'SPAN',\n      attributes: ['style=textDecoration:underline;']\n    }],\n    tool: {\n      title: 'Underline',\n      icon: '<u>U</u>'\n    }\n  }, {\n    name: 'strikethrough',\n    tag: 'S',\n    attributes: [],\n    shortcut: 'Alt + KeyS',\n    hint: 's',\n    command: 'format-strikethrough',\n    marks: [{\n      tag: 'S',\n      attributes: []\n    }, {\n      tag: 'SPAN',\n      attributes: ['style=textDecoration:line-through;']\n    }],\n    tool: {\n      title: 'Strikethrough',\n      icon: '<s>S</s>'\n    }\n  }]\n};\n\nvar formatingsPlugin = function formatingsPlugin(opts) {\n  return {\n    register: function register(textarena) {\n      var options = _objectSpread(_objectSpread({}, defaultOptions), opts || {});\n\n      options.formatings.forEach(function (_ref) {\n        var name = _ref.name,\n            tag = _ref.tag,\n            attributes = _ref.attributes,\n            shortcut = _ref.shortcut,\n            hint = _ref.hint,\n            command = _ref.command,\n            marks = _ref.marks,\n            tool = _ref.tool;\n        var formating = textarena.registerFormating({\n          name: name,\n          tag: tag,\n          attributes: attributes\n        }, marks);\n        textarena.registerCommand(command, function (ta, selection) {\n          return ta.formatingModel(selection, formating);\n        });\n        textarena.registerShortcut(shortcut, command);\n\n        if (tool) {\n          textarena.registerTool(_objectSpread(_objectSpread({}, tool), {}, {\n            name: name,\n            command: command,\n            hint: hint,\n            shortcut: shortcut,\n            checkStatus: function checkStatus(node, start, end) {\n              if ('hasText' in node) {\n                return node.getText().hasFormating(name, start, end);\n              }\n\n              return true;\n            }\n          }));\n        }\n      });\n    }\n  };\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (formatingsPlugin);\n\n//# sourceURL=webpack://Textarena/./plugins/formatingsPlugin.ts?");

/***/ }),

/***/ "./plugins/headersPlugin.ts":
/*!**********************************!*\
  !*** ./plugins/headersPlugin.ts ***!
  \**********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar posibleTags = ['h1', 'h2', 'h3', 'h4'];\nvar defaultOptions = {\n  tags: ['h2', 'h3', 'h4']\n};\n\nvar headersPlugin = function headersPlugin(opts) {\n  return {\n    register: function register(textarena) {\n      var options = _objectSpread(_objectSpread({}, defaultOptions), opts || {});\n\n      options.tags.forEach(function (type) {\n        if (posibleTags.includes(type)) {\n          var number = parseInt(type[1], 10);\n          var paragraph = textarena.getDefaultTextArena();\n\n          if (!paragraph) {\n            throw new Error('Default Arena for text not found');\n          }\n\n          var arena = textarena.registerArena({\n            name: \"header\".concat(number),\n            tag: \"H\".concat(number),\n            attributes: [],\n            allowText: true,\n            allowFormating: false,\n            nextArena: paragraph\n          }, [{\n            tag: \"H\".concat(number),\n            attributes: []\n          }], [textarena.getRootArenaName()]);\n          textarena.registerCommand(\"convert-to-header\".concat(number), function (ta, selection) {\n            return ta.transformModel(selection, arena);\n          });\n          textarena.registerShortcut(\"Alt + Digit\".concat(number), \"convert-to-header\".concat(number));\n          textarena.registerTool({\n            name: \"header\".concat(number),\n            title: \"Header \".concat(number),\n            icon: \"<b>H\".concat(number, \"</b>\"),\n            shortcut: \"Alt + Digit\".concat(number),\n            hint: number.toString(),\n            command: \"convert-to-header\".concat(number),\n            checkStatus: function checkStatus(node) {\n              return node.arena === arena;\n            }\n          });\n          textarena.registerCreator({\n            name: \"header\".concat(number),\n            title: \"Header \".concat(number),\n            icon: \"<b>H\".concat(number, \"</b>\"),\n            shortcut: \"Alt + Digit\".concat(number),\n            hint: number.toString(),\n            command: \"convert-to-header\".concat(number)\n          });\n        }\n      });\n    }\n  };\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (headersPlugin);\n\n//# sourceURL=webpack://Textarena/./plugins/headersPlugin.ts?");

/***/ }),

/***/ "./plugins/hrPlugin.ts":
/*!*****************************!*\
  !*** ./plugins/hrPlugin.ts ***!
  \*****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar defaultOptions = {\n  name: 'hr',\n  icon: '<b>–</b>',\n  title: 'Horizontal rule',\n  tag: 'HR',\n  attributes: [],\n  shortcut: 'Alt + KeyH',\n  hint: 'h',\n  command: 'add-hr'\n};\n\nvar hrPlugin = function hrPlugin(opts) {\n  return {\n    register: function register(textarena) {\n      var _defaultOptions = _objectSpread(_objectSpread({}, defaultOptions), opts || {}),\n          name = _defaultOptions.name,\n          icon = _defaultOptions.icon,\n          title = _defaultOptions.title,\n          tag = _defaultOptions.tag,\n          attributes = _defaultOptions.attributes,\n          shortcut = _defaultOptions.shortcut,\n          hint = _defaultOptions.hint,\n          command = _defaultOptions.command;\n\n      var arena = textarena.registerArena({\n        name: name,\n        tag: tag,\n        attributes: attributes,\n        single: true\n      }, [{\n        tag: 'HR',\n        attributes: []\n      }], [textarena.getRootArenaName()]);\n      textarena.registerCommand(command, function (ta, selection) {\n        return ta.transformModel(selection, arena);\n      });\n      textarena.registerShortcut(shortcut, command);\n      textarena.registerCreator({\n        name: name,\n        icon: icon,\n        title: title,\n        shortcut: shortcut,\n        hint: hint,\n        command: command\n      });\n      textarena.addSimpleArenas(arena);\n    }\n  };\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (hrPlugin);\n\n//# sourceURL=webpack://Textarena/./plugins/hrPlugin.ts?");

/***/ }),

/***/ "./plugins/imagePlugin.ts":
/*!********************************!*\
  !*** ./plugins/imagePlugin.ts ***!
  \********************************/
/*! exports provided: Callout, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Callout\", function() { return Callout; });\n/* harmony import */ var lit_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit-element */ \"../node_modules/lit-element/lit-element.js\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar _dec, _dec2, _dec3, _dec4, _class, _class2, _descriptor, _descriptor2, _descriptor3, _class3, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n    :host {\\n      display: block;\\n      margin: 1rem 0;\\n    }\\n    .preview-btn {\\n      display: block;\\n      background: #e6e6e6;\\n      padding-top: 56.25%;\\n      border: 3px solid #d0d0d0;\\n    }\\n    input {\\n      display: none;\\n    }\\n    \"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"<div>\\n      \", \"\\n      <input id=input type=\\\"file\\\" />\\n      <slot name=\\\"image-title\\\"></slot>\\n      <slot name=\\\"alt\\\"></slot>\\n    </div>\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"<label for=\\\"input\\\" class=\\\"preview-btn\\\"></label>\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"<img src=\\\"\", \"\\\"></img>\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nfunction _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }\n\nfunction _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }\n\n\nvar Callout = (_dec = Object(lit_element__WEBPACK_IMPORTED_MODULE_0__[\"customElement\"])('arena-image'), _dec2 = Object(lit_element__WEBPACK_IMPORTED_MODULE_0__[\"property\"])({\n  reflect: true\n}), _dec3 = Object(lit_element__WEBPACK_IMPORTED_MODULE_0__[\"property\"])({\n  reflect: true\n}), _dec4 = Object(lit_element__WEBPACK_IMPORTED_MODULE_0__[\"query\"])('#input'), _dec(_class = (_class2 = (_temp = _class3 = /*#__PURE__*/function (_LitElement) {\n  _inherits(Callout, _LitElement);\n\n  var _super = _createSuper(Callout);\n\n  function Callout() {\n    var _this;\n\n    _classCallCheck(this, Callout);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _initializerDefineProperty(_assertThisInitialized(_this), \"type\", _descriptor, _assertThisInitialized(_this));\n\n    _initializerDefineProperty(_assertThisInitialized(_this), \"src\", _descriptor2, _assertThisInitialized(_this));\n\n    _initializerDefineProperty(_assertThisInitialized(_this), \"input\", _descriptor3, _assertThisInitialized(_this));\n\n    return _this;\n  }\n\n  _createClass(Callout, [{\n    key: \"render\",\n    // upload() {\n    //   if (this.input) {\n    //     this.input.click();\n    //   }\n    // }\n    // Render element DOM by returning a `lit-html` template.\n    value: function render() {\n      var preview;\n\n      if (this.src) {\n        preview = Object(lit_element__WEBPACK_IMPORTED_MODULE_0__[\"html\"])(_templateObject(), this.src);\n      } else {\n        preview = Object(lit_element__WEBPACK_IMPORTED_MODULE_0__[\"html\"])(_templateObject2());\n      }\n\n      return Object(lit_element__WEBPACK_IMPORTED_MODULE_0__[\"html\"])(_templateObject3(), preview);\n    }\n  }]);\n\n  return Callout;\n}(lit_element__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"]), _defineProperty(_class3, \"styles\", Object(lit_element__WEBPACK_IMPORTED_MODULE_0__[\"css\"])(_templateObject4())), _temp), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, \"type\", [_dec2], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return 'great';\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, \"src\", [_dec3], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, \"input\", [_dec4], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class2)) || _class);\nvar defaultOptions = {\n  name: 'image',\n  icon: '🖼',\n  title: 'Image',\n  tag: 'ARENA-IMAGE',\n  attributes: [],\n  shortcut: 'Alt + KeyI',\n  hint: 'i',\n  command: 'add-image'\n};\n\nvar imagePlugin = function imagePlugin(opts) {\n  return {\n    register: function register(textarena) {\n      var _defaultOptions = _objectSpread(_objectSpread({}, defaultOptions), opts || {}),\n          name = _defaultOptions.name,\n          icon = _defaultOptions.icon,\n          title = _defaultOptions.title,\n          tag = _defaultOptions.tag,\n          attributes = _defaultOptions.attributes,\n          shortcut = _defaultOptions.shortcut,\n          hint = _defaultOptions.hint,\n          command = _defaultOptions.command;\n\n      var paragraph = textarena.getDefaultTextArena();\n\n      if (!paragraph) {\n        throw new Error('Default Arena for text not found');\n      }\n\n      var calloutTitleParagraph = textarena.registerArena({\n        name: 'image-title-paragraph',\n        tag: 'P',\n        attributes: ['slot=image-title'],\n        allowText: true,\n        allowFormating: true\n      }, [{\n        tag: 'P',\n        attributes: ['slot=image-title']\n      }], []);\n      var arena = textarena.registerArena({\n        name: name,\n        tag: tag,\n        attributes: attributes,\n        hasChildren: true,\n        protectedChildren: [calloutTitleParagraph],\n        arenaForText: calloutTitleParagraph,\n        allowedArenas: [calloutTitleParagraph]\n      }, [{\n        tag: tag,\n        attributes: []\n      }], [textarena.getRootArenaName()]);\n      textarena.registerCommand(command, function (ta, selection) {\n        var sel = ta.transformModel(selection, arena);\n        return sel;\n      });\n      textarena.registerShortcut(shortcut, command);\n      textarena.registerCreator({\n        name: name,\n        icon: icon,\n        title: title,\n        shortcut: shortcut,\n        hint: hint,\n        command: command\n      });\n    }\n  };\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (imagePlugin);\n\n//# sourceURL=webpack://Textarena/./plugins/imagePlugin.ts?");

/***/ }),

/***/ "./plugins/linkPlugin.ts":
/*!*******************************!*\
  !*** ./plugins/linkPlugin.ts ***!
  \*******************************/
/*! exports provided: Link, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Link\", function() { return Link; });\n/* harmony import */ var lit_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit-element */ \"../node_modules/lit-element/lit-element.js\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar _dec, _dec2, _class, _class2, _descriptor, _class3, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    :host {\\n      text-decoration: underline;\\n      position: relative;\\n    }\\n    .preview {\\n      display: none;\\n      bottom: 1rem;\\n      position: absolute;\\n      color: #ccc;\\n      box-shadow: 0 8px 23px -6px rgba(21, 40, 54, 0.31), 22px -14px 34px -18px rgba(33, 48, 73, 0.26);\\n      border-radius: 4px;\\n      background-color: #333;\\n      padding: 0 .5rem;\\n      border-radius: .3rem;\\n    }\\n    :host(:hover) .preview {\\n      display: block;\\n    }\\n  \"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    <div class=\\\"preview\\\">\", \"</div>\\n    <span><slot></slot></span>\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nfunction _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }\n\nfunction _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }\n\n\nvar Link = (_dec = Object(lit_element__WEBPACK_IMPORTED_MODULE_0__[\"customElement\"])('arena-link'), _dec2 = Object(lit_element__WEBPACK_IMPORTED_MODULE_0__[\"property\"])({\n  type: String\n}), _dec(_class = (_class2 = (_temp = _class3 = /*#__PURE__*/function (_LitElement) {\n  _inherits(Link, _LitElement);\n\n  var _super = _createSuper(Link);\n\n  function Link() {\n    var _this;\n\n    _classCallCheck(this, Link);\n\n    _this = _super.call(this);\n\n    _initializerDefineProperty(_assertThisInitialized(_this), \"href\", _descriptor, _assertThisInitialized(_this));\n\n    _this.addEventListener('click', _this.onClick);\n\n    return _this;\n  }\n\n  _createClass(Link, [{\n    key: \"onClick\",\n    value: function onClick(event) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }, {\n    key: \"disconnectedCallback\",\n    value: function disconnectedCallback() {\n      this.removeEventListener('click', this.onClick);\n    } // Render element DOM by returning a `lit-html` template.\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return Object(lit_element__WEBPACK_IMPORTED_MODULE_0__[\"html\"])(_templateObject(), this.href);\n    }\n  }]);\n\n  return Link;\n}(lit_element__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"]), _defineProperty(_class3, \"styles\", Object(lit_element__WEBPACK_IMPORTED_MODULE_0__[\"css\"])(_templateObject2())), _temp), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, \"href\", [_dec2], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return '';\n  }\n})), _class2)) || _class);\nvar defaultOptions = {\n  name: 'link',\n  icon: '🔗',\n  title: 'Link',\n  // tag: 'ARENA-LINK',\n  tag: 'A',\n  attributes: [],\n  shortcut: 'Alt + KeyK',\n  hint: 'k',\n  command: 'add-link',\n  marks: [{\n    tag: 'A',\n    attributes: []\n  } // {\n  //   tag: 'ARENA-LINK',\n  //   attributes: [],\n  // },\n  ]\n};\n\nvar linkPlugin = function linkPlugin(opts) {\n  return {\n    register: function register(textarena) {\n      var _defaultOptions = _objectSpread(_objectSpread({}, defaultOptions), opts || {}),\n          name = _defaultOptions.name,\n          icon = _defaultOptions.icon,\n          title = _defaultOptions.title,\n          tag = _defaultOptions.tag,\n          attributes = _defaultOptions.attributes,\n          shortcut = _defaultOptions.shortcut,\n          hint = _defaultOptions.hint,\n          command = _defaultOptions.command,\n          marks = _defaultOptions.marks;\n\n      var arena = textarena.registerArena({\n        name: name,\n        tag: tag,\n        attributes: attributes,\n        inline: true\n      }, marks);\n      textarena.registerCommand(command, function (ta, selection) {\n        // eslint-disable-next-line no-alert\n        var oldNode = ta.getInlineNode(selection, arena);\n        var link = '';\n\n        if (oldNode) {\n          link = oldNode.getAttribute('href');\n        } // eslint-disable-next-line no-alert\n\n\n        var input = prompt('You link', link);\n\n        if (input === null) {\n          return selection;\n        }\n\n        link = input;\n\n        if (link) {\n          if (oldNode) {\n            ta.updateInlineNode(selection, oldNode);\n            oldNode.setAttribute('href', link);\n          } else {\n            var node = ta.addInlineNode(selection, arena);\n\n            if (node) {\n              node.setAttribute('href', link);\n            }\n          }\n        } else if (oldNode) {\n          ta.removeInlineNode(selection, oldNode);\n        }\n\n        return selection;\n      });\n      textarena.registerShortcut(shortcut, command);\n      textarena.registerTool({\n        name: name,\n        icon: icon,\n        title: title,\n        command: command,\n        hint: hint,\n        shortcut: shortcut\n      });\n    }\n  };\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (linkPlugin);\n\n//# sourceURL=webpack://Textarena/./plugins/linkPlugin.ts?");

/***/ }),

/***/ "./plugins/listsPlugin.ts":
/*!********************************!*\
  !*** ./plugins/listsPlugin.ts ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar defaultOptions = {\n  item: {\n    name: 'li',\n    tag: 'LI',\n    attributes: []\n  },\n  lists: [{\n    name: 'unordered-list',\n    tag: 'UL',\n    attributes: [],\n    title: 'List',\n    icon: '≣',\n    shortcut: 'Alt + KeyL',\n    command: 'convert-to-unordered-list',\n    hint: 'l',\n    pattern: /^-\\s+(.*)$/\n  }, {\n    name: 'ordered-list',\n    tag: 'OL',\n    attributes: [],\n    title: 'Ordered list',\n    icon: '<b>1.</b>',\n    shortcut: 'Alt + KeyO',\n    command: 'convert-to-ordered-list',\n    hint: 'o',\n    pattern: /^\\d+\\.\\s+(.*)$/\n  }]\n};\n\nvar listsPlugin = function listsPlugin(opts) {\n  return {\n    register: function register(textarena) {\n      var paragraph = textarena.getDefaultTextArena();\n\n      if (!paragraph) {\n        throw new Error('Default Arena for text not found');\n      }\n\n      var _defaultOptions = _objectSpread(_objectSpread({}, defaultOptions), opts || {}),\n          item = _defaultOptions.item,\n          lists = _defaultOptions.lists;\n\n      var li = textarena.registerArena(_objectSpread(_objectSpread({}, item), {}, {\n        allowText: true,\n        allowFormating: true,\n        nextArena: undefined\n      }), [{\n        tag: item.tag,\n        attributes: item.attributes\n      }]);\n      lists.forEach(function (_ref) {\n        var name = _ref.name,\n            tag = _ref.tag,\n            attributes = _ref.attributes,\n            title = _ref.title,\n            icon = _ref.icon,\n            shortcut = _ref.shortcut,\n            command = _ref.command,\n            hint = _ref.hint,\n            pattern = _ref.pattern;\n        var listArena = textarena.registerArena({\n          name: name,\n          tag: tag,\n          attributes: attributes,\n          allowedArenas: [li],\n          arenaForText: li,\n          hasChildren: true,\n          automerge: true\n        }, [{\n          tag: tag,\n          attributes: attributes\n        }], [textarena.getRootArenaName()]);\n        textarena.registerCommand(command, function (ta, selection) {\n          return ta.transformModel(selection, listArena);\n        });\n        textarena.registerShortcut(shortcut, command);\n        textarena.registerTool({\n          name: name,\n          title: title,\n          icon: icon,\n          shortcut: shortcut,\n          command: command,\n          hint: hint,\n          checkStatus: function checkStatus(node) {\n            return 'parent' in node && node.parent.arena === listArena;\n          }\n        });\n        textarena.registerCreator({\n          name: name,\n          title: title,\n          icon: icon,\n          shortcut: shortcut,\n          command: command,\n          hint: hint\n        });\n        paragraph.registerMiddleware(function (cursor) {\n          var text = cursor.node.getRawText();\n          var match = text.match(pattern);\n\n          if (match) {\n            var newNode = cursor.node.createAndInsertNode(listArena, 0);\n\n            if (newNode) {\n              var newCursor = newNode.insertText(match[1], 0);\n              cursor.node.remove();\n              return newCursor;\n            }\n          }\n\n          return cursor;\n        });\n        textarena.addSimpleArenas(listArena);\n      });\n    }\n  };\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (listsPlugin);\n\n//# sourceURL=webpack://Textarena/./plugins/listsPlugin.ts?");

/***/ }),

/***/ "./plugins/paragraphPlugin.ts":
/*!************************************!*\
  !*** ./plugins/paragraphPlugin.ts ***!
  \************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar defaultOptions = {\n  name: 'paragraph',\n  tag: 'P',\n  attributes: [],\n  marks: [{\n    tag: 'P',\n    attributes: []\n  }, {\n    tag: 'DIV',\n    attributes: []\n  }]\n};\n\nvar paragraphPlugin = function paragraphPlugin(opts) {\n  return {\n    register: function register(textarena) {\n      var _defaultOptions = _objectSpread(_objectSpread({}, defaultOptions), opts || {}),\n          name = _defaultOptions.name,\n          tag = _defaultOptions.tag,\n          attributes = _defaultOptions.attributes,\n          marks = _defaultOptions.marks;\n\n      var arena = textarena.registerArena({\n        name: name,\n        tag: tag,\n        attributes: attributes,\n        allowText: true,\n        allowFormating: true\n      }, marks, [textarena.getRootArenaName()]);\n      textarena.setDefaultTextArena(arena);\n      textarena.registerCommand('convert-to-paragraph', function (ta, selection) {\n        return ta.transformModel(selection, arena);\n      });\n      textarena.registerShortcut('Alt + Digit0', 'convert-to-paragraph');\n      textarena.registerTool({\n        name: 'paragraph',\n        title: 'Paragraph',\n        icon: '<b>¶</b>',\n        shortcut: 'Alt + Digit0',\n        hint: '0',\n        command: 'convert-to-paragraph',\n        checkStatus: function checkStatus(node) {\n          return node.arena === arena;\n        }\n      });\n    }\n  };\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (paragraphPlugin);\n\n//# sourceURL=webpack://Textarena/./plugins/paragraphPlugin.ts?");

/***/ }),

/***/ "./services/ArenaBrowser.ts":
/*!**********************************!*\
  !*** ./services/ArenaBrowser.ts ***!
  \**********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return ArenaBrowser; });\n/* harmony import */ var events_BrowserCommandEvent__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events/BrowserCommandEvent */ \"./events/BrowserCommandEvent.ts\");\n/* harmony import */ var events_CommandEvent__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! events/CommandEvent */ \"./events/CommandEvent.ts\");\n/* harmony import */ var events_CopyEvent__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! events/CopyEvent */ \"./events/CopyEvent.ts\");\n/* harmony import */ var events_CutEvent__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! events/CutEvent */ \"./events/CutEvent.ts\");\n/* harmony import */ var events_InputEvent__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! events/InputEvent */ \"./events/InputEvent.ts\");\n/* harmony import */ var events_ModifiersEvent__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! events/ModifiersEvent */ \"./events/ModifiersEvent.ts\");\n/* harmony import */ var events_PasteEvent__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! events/PasteEvent */ \"./events/PasteEvent.ts\");\n/* harmony import */ var events_RemoveEvent__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! events/RemoveEvent */ \"./events/RemoveEvent.ts\");\n/* harmony import */ var events_SelectionEvent__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! events/SelectionEvent */ \"./events/SelectionEvent.ts\");\n/* harmony import */ var helpers_ElementHelper__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! helpers/ElementHelper */ \"./helpers/ElementHelper.ts\");\n/* harmony import */ var _ArenaCommandManager__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./ArenaCommandManager */ \"./services/ArenaCommandManager.ts\");\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/* eslint-disable no-bitwise */\n\n\n\n\n\n\n\n\n\n\n\nvar modifiersKeys = {\n  Shift: 16,\n  Ctrl: 17,\n  Alt: 18,\n  Meta: 91\n};\nvar selectionKeys = {\n  pageup: 33,\n  pagedown: 34,\n  end: 35,\n  home: 36,\n  left: 37,\n  up: 38,\n  right: 39,\n  down: 40\n};\nvar removeKeys = {\n  backspace: 8,\n  \"delete\": 46\n};\nvar specialKeys = {\n  escape: 27,\n  tab: 9,\n  enter: 13\n};\nvar reservedKeys = {\n  scrolllock: 145,\n  capslock: 20,\n  numlock: 144,\n  pause: 19,\n  \"break\": 19,\n  insert: 45,\n  f1: 112,\n  f2: 113,\n  f3: 114,\n  f4: 115,\n  f5: 116,\n  f6: 117,\n  f7: 118,\n  f8: 119,\n  f9: 120,\n  f10: 121,\n  f11: 122,\n  f12: 123\n};\n\nfunction invertObject(obj) {\n  var result = Object.entries(obj).reduce(function (prev, _ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        key = _ref2[0],\n        value = _ref2[1];\n\n    return _objectSpread(_objectSpread({}, prev), {}, _defineProperty({}, value, key));\n  }, {});\n  return result;\n}\n\nvar modifiersCodes = invertObject(modifiersKeys);\nvar selectionCodes = invertObject(selectionKeys);\nvar removeCodes = invertObject(removeKeys);\nvar specialCodes = invertObject(specialKeys);\nvar reservedCodes = invertObject(reservedKeys);\n\nfunction isDescendant(parent, child) {\n  var parentNode = parent instanceof helpers_ElementHelper__WEBPACK_IMPORTED_MODULE_9__[\"default\"] ? parent.getElem() : parent;\n  var node = child.parentNode;\n\n  while (node !== null) {\n    if (node === parentNode) {\n      return true;\n    }\n\n    node = node.parentNode;\n  }\n\n  return false;\n}\n\nvar ArenaBrowser = /*#__PURE__*/function () {\n  // protected beforeinputListenerInstance: ((e: Event) => void);\n  function ArenaBrowser(asm) {\n    var _this = this;\n\n    _classCallCheck(this, ArenaBrowser);\n\n    this.asm = asm;\n\n    _defineProperty(this, \"inputListenerInstance\", void 0);\n\n    _defineProperty(this, \"mouseUpListenerInstance\", void 0);\n\n    _defineProperty(this, \"keyUpListenerInstance\", void 0);\n\n    _defineProperty(this, \"keyPressListenerInstance\", void 0);\n\n    _defineProperty(this, \"keyDownListenerInstance\", void 0);\n\n    _defineProperty(this, \"selectListenerInstance\", void 0);\n\n    _defineProperty(this, \"pasteListenerInstance\", void 0);\n\n    _defineProperty(this, \"lastSelectionStatus\", false);\n\n    _defineProperty(this, \"lastSelectionRange\", void 0);\n\n    _defineProperty(this, \"editor\", void 0);\n\n    this.editor = this.asm.textarena.getEditorElement();\n    this.inputListenerInstance = this.inputListener.bind(this);\n    this.mouseUpListenerInstance = this.mouseUpListener.bind(this);\n    this.keyUpListenerInstance = this.keyUpListener.bind(this);\n    this.keyPressListenerInstance = this.keyPressListener.bind(this);\n    this.keyDownListenerInstance = this.keyDownListener.bind(this);\n    this.selectListenerInstance = this.selectListener.bind(this);\n    this.pasteListenerInstance = this.pasteListener.bind(this);\n    this.asm.eventManager.subscribe('turnOn', function () {\n      _this.editor.addEventListener('input', _this.inputListenerInstance, false);\n\n      _this.editor.addEventListener('mouseup', _this.mouseUpListenerInstance, false);\n\n      _this.editor.addEventListener('keyup', _this.keyUpListenerInstance, false);\n\n      _this.editor.addEventListener('keypress', _this.keyPressListenerInstance, false);\n\n      _this.editor.addEventListener('keydown', _this.keyDownListenerInstance, false);\n\n      _this.editor.addEventListener('paste', _this.pasteListenerInstance, false);\n\n      document.addEventListener('selectionchange', _this.selectListenerInstance, false);\n    });\n    this.asm.eventManager.subscribe('turnOff', function () {\n      _this.editor.removeEventListener('input', _this.inputListenerInstance);\n\n      _this.editor.removeEventListener('mouseup', _this.mouseUpListenerInstance);\n\n      _this.editor.removeEventListener('keyup', _this.keyUpListenerInstance);\n\n      _this.editor.removeEventListener('keypress', _this.keyPressListenerInstance);\n\n      _this.editor.removeEventListener('keydown', _this.keyDownListenerInstance);\n\n      _this.editor.removeEventListener('paste', _this.pasteListenerInstance);\n\n      document.removeEventListener('selectionchange', _this.selectListenerInstance);\n    });\n  }\n\n  _createClass(ArenaBrowser, [{\n    key: \"getModifiersSum\",\n    value: function getModifiersSum(e) {\n      var shiftKey = e.shiftKey,\n          ctrlKey = e.ctrlKey,\n          altKey = e.altKey,\n          metaKey = e.metaKey;\n      var modifiers = {\n        Shift: shiftKey,\n        Ctrl: ctrlKey,\n        Alt: altKey,\n        Meta: metaKey\n      };\n      return this.asm.commandManager.getModifiersSum(modifiers);\n    }\n  }, {\n    key: \"checkSelection\",\n    value: function checkSelection() {\n      this.asm.view.resetCurrentSelection();\n      var s = window.getSelection();\n\n      if (!s) {\n        return;\n      }\n\n      if (!s.anchorNode || !isDescendant(this.editor, s.anchorNode)) {\n        return;\n      }\n\n      this.asm.eventManager.fire('moveCursor');\n\n      if (this.lastSelectionStatus && s.isCollapsed) {\n        this.lastSelectionStatus = false;\n        this.asm.eventManager.fire('textUnselected');\n        this.lastSelectionRange = undefined;\n        return;\n      }\n\n      if (!s.isCollapsed) {\n        if (!this.lastSelectionStatus) {\n          this.lastSelectionStatus = true;\n          this.asm.eventManager.fire('textSelected');\n          this.lastSelectionRange = s.getRangeAt(0);\n        } else if (this.lastSelectionRange) {\n          var newRange = s.getRangeAt(0);\n\n          if (newRange.startContainer !== this.lastSelectionRange.startContainer || newRange.startOffset !== this.lastSelectionRange.startOffset || newRange.endContainer !== this.lastSelectionRange.endContainer || newRange.endOffset !== this.lastSelectionRange.endOffset) {\n            this.asm.eventManager.fire('selectionChanged');\n            this.lastSelectionRange = newRange;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"checkKeyboardEvent\",\n    value: function checkKeyboardEvent(prefix, e) {\n      var keyCode = e.keyCode,\n          code = e.code;\n      var modifiersSum = this.getModifiersSum(e);\n      var character = e.key;\n\n      if (modifiersCodes[keyCode]) {\n        return new events_ModifiersEvent__WEBPACK_IMPORTED_MODULE_5__[\"default\"](e, modifiersSum);\n      }\n\n      if (reservedCodes[keyCode]) {\n        return new events_BrowserCommandEvent__WEBPACK_IMPORTED_MODULE_0__[\"default\"](e);\n      }\n\n      if (code === 'KeyD' && modifiersSum === _ArenaCommandManager__WEBPACK_IMPORTED_MODULE_10__[\"Modifiers\"].Ctrl) {\n        return new events_BrowserCommandEvent__WEBPACK_IMPORTED_MODULE_0__[\"default\"](e);\n      }\n\n      if (code === 'KeyF' && modifiersSum === _ArenaCommandManager__WEBPACK_IMPORTED_MODULE_10__[\"Modifiers\"].Ctrl) {\n        return new events_BrowserCommandEvent__WEBPACK_IMPORTED_MODULE_0__[\"default\"](e);\n      }\n\n      if (code === 'KeyG' && (modifiersSum ^ (_ArenaCommandManager__WEBPACK_IMPORTED_MODULE_10__[\"Modifiers\"].Ctrl | _ArenaCommandManager__WEBPACK_IMPORTED_MODULE_10__[\"Modifiers\"].Shift) & modifiersSum) === 0) {\n        return new events_BrowserCommandEvent__WEBPACK_IMPORTED_MODULE_0__[\"default\"](e);\n      }\n\n      if (code === 'KeyH' && modifiersSum === _ArenaCommandManager__WEBPACK_IMPORTED_MODULE_10__[\"Modifiers\"].Ctrl) {\n        return new events_BrowserCommandEvent__WEBPACK_IMPORTED_MODULE_0__[\"default\"](e);\n      }\n\n      if (code === 'KeyJ' && modifiersSum === _ArenaCommandManager__WEBPACK_IMPORTED_MODULE_10__[\"Modifiers\"].Ctrl) {\n        return new events_BrowserCommandEvent__WEBPACK_IMPORTED_MODULE_0__[\"default\"](e);\n      }\n\n      if (code === 'KeyO' && modifiersSum === _ArenaCommandManager__WEBPACK_IMPORTED_MODULE_10__[\"Modifiers\"].Ctrl) {\n        return new events_BrowserCommandEvent__WEBPACK_IMPORTED_MODULE_0__[\"default\"](e);\n      } // if (code === 'KeyP' && modifiersSum === Modifiers.Ctrl) {\n      //   return new BrowserCommandEvent(e);\n      // }\n      // if (code === 'KeyS' && modifiersSum === Modifiers.Ctrl) {\n      //   return new BrowserCommandEvent(e);\n      // }\n\n\n      if (code === 'KeyE' && modifiersSum === _ArenaCommandManager__WEBPACK_IMPORTED_MODULE_10__[\"Modifiers\"].Ctrl) {\n        return new events_BrowserCommandEvent__WEBPACK_IMPORTED_MODULE_0__[\"default\"](e);\n      }\n\n      if (code === 'KeyK' && modifiersSum === _ArenaCommandManager__WEBPACK_IMPORTED_MODULE_10__[\"Modifiers\"].Ctrl) {\n        return new events_BrowserCommandEvent__WEBPACK_IMPORTED_MODULE_0__[\"default\"](e);\n      }\n\n      if (code === 'Delete' && modifiersSum === (_ArenaCommandManager__WEBPACK_IMPORTED_MODULE_10__[\"Modifiers\"].Ctrl | _ArenaCommandManager__WEBPACK_IMPORTED_MODULE_10__[\"Modifiers\"].Shift)) {\n        return new events_BrowserCommandEvent__WEBPACK_IMPORTED_MODULE_0__[\"default\"](e);\n      }\n\n      if (code === 'KeyF' && modifiersSum === _ArenaCommandManager__WEBPACK_IMPORTED_MODULE_10__[\"Modifiers\"].Alt) {\n        return new events_BrowserCommandEvent__WEBPACK_IMPORTED_MODULE_0__[\"default\"](e);\n      }\n\n      if (/^Digit\\d$/.test(code) && modifiersSum === _ArenaCommandManager__WEBPACK_IMPORTED_MODULE_10__[\"Modifiers\"].Ctrl) {\n        return new events_BrowserCommandEvent__WEBPACK_IMPORTED_MODULE_0__[\"default\"](e);\n      }\n\n      if (selectionCodes[keyCode] && !(modifiersSum & _ArenaCommandManager__WEBPACK_IMPORTED_MODULE_10__[\"Modifiers\"].Alt)) {\n        return new events_SelectionEvent__WEBPACK_IMPORTED_MODULE_8__[\"default\"](e);\n      }\n\n      if (code === 'KeyA' && modifiersSum === _ArenaCommandManager__WEBPACK_IMPORTED_MODULE_10__[\"Modifiers\"].Ctrl) {\n        return new events_SelectionEvent__WEBPACK_IMPORTED_MODULE_8__[\"default\"](e);\n      }\n\n      if (code === 'KeyC' && modifiersSum === _ArenaCommandManager__WEBPACK_IMPORTED_MODULE_10__[\"Modifiers\"].Ctrl) {\n        return new events_CopyEvent__WEBPACK_IMPORTED_MODULE_2__[\"default\"](e);\n      }\n\n      if (code === 'KeyV' && modifiersSum === _ArenaCommandManager__WEBPACK_IMPORTED_MODULE_10__[\"Modifiers\"].Ctrl) {\n        return new events_PasteEvent__WEBPACK_IMPORTED_MODULE_6__[\"default\"](e);\n      }\n\n      if (code === 'KeyX' && modifiersSum === _ArenaCommandManager__WEBPACK_IMPORTED_MODULE_10__[\"Modifiers\"].Ctrl) {\n        return new events_CutEvent__WEBPACK_IMPORTED_MODULE_3__[\"default\"](e);\n      }\n\n      if (removeCodes[keyCode]) {\n        return new events_RemoveEvent__WEBPACK_IMPORTED_MODULE_7__[\"default\"](e, removeCodes[keyCode] === 'delete' ? 'forward' : 'backward');\n      }\n\n      if (specialCodes[keyCode] || modifiersSum > _ArenaCommandManager__WEBPACK_IMPORTED_MODULE_10__[\"Modifiers\"].Shift) {\n        this.asm.logger.info(\"\".concat(prefix, \" command \").concat(modifiersSum, \" + \").concat(code), e);\n\n        if (code && _ArenaCommandManager__WEBPACK_IMPORTED_MODULE_10__[\"keyboardKeys\"].includes(code)) {\n          return new events_CommandEvent__WEBPACK_IMPORTED_MODULE_1__[\"default\"](e, code, modifiersSum);\n        }\n\n        return undefined;\n      }\n\n      if (character) {\n        return new events_InputEvent__WEBPACK_IMPORTED_MODULE_4__[\"default\"](e, character);\n      }\n\n      return undefined;\n    }\n  }, {\n    key: \"inputListener\",\n    value: function inputListener(e) {\n      this.asm.logger.log('Input event', e);\n    }\n  }, {\n    key: \"mouseUpListener\",\n    value: function mouseUpListener(e) {\n      this.asm.logger.log('MouseUp event', e); // this.checkSelection();\n    }\n  }, {\n    key: \"keyUpListener\",\n    value: function keyUpListener(e) {\n      this.asm.logger.log('KeyUp event', e);\n      var modifiersSum = this.getModifiersSum(e);\n      this.asm.eventManager.fire('moveCursor');\n      this.asm.eventManager.fire({\n        name: 'keyUp',\n        data: modifiersSum\n      });\n    }\n  }, {\n    key: \"keyPressListener\",\n    value: function keyPressListener(e) {\n      this.asm.logger.log('KeyPress event', e);\n    }\n  }, {\n    key: \"keyDownListener\",\n    value: function keyDownListener(e) {\n      var event = this.checkKeyboardEvent('keyDown', e);\n      this.asm.logger.log('KeyDown event', event, e);\n\n      if (event instanceof events_BrowserCommandEvent__WEBPACK_IMPORTED_MODULE_0__[\"default\"] || event instanceof events_CopyEvent__WEBPACK_IMPORTED_MODULE_2__[\"default\"] || event instanceof events_PasteEvent__WEBPACK_IMPORTED_MODULE_6__[\"default\"]) {\n        // allow\n        return;\n      }\n\n      if (event instanceof events_SelectionEvent__WEBPACK_IMPORTED_MODULE_8__[\"default\"]) {\n        this.asm.view.resetCurrentSelection();\n        return;\n      }\n\n      e.cancelBubble = true;\n      e.returnValue = false;\n      e.stopPropagation();\n      e.preventDefault();\n\n      if (!event) {\n        return;\n      }\n\n      if (event instanceof events_ModifiersEvent__WEBPACK_IMPORTED_MODULE_5__[\"default\"]) {\n        this.asm.eventManager.fire({\n          name: 'keyDown',\n          data: event.sum\n        });\n      }\n\n      if (event instanceof events_CutEvent__WEBPACK_IMPORTED_MODULE_3__[\"default\"]) {\n        document.execCommand('copy');\n        var selection = this.asm.view.getCurrentSelection();\n\n        if (selection) {\n          var newSelection = this.asm.model.removeSelection(selection, selection.direction);\n          this.asm.eventManager.fire({\n            name: 'modelChanged',\n            data: newSelection\n          });\n        }\n      }\n\n      if (event instanceof events_CommandEvent__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        var command = event.command,\n            modifiersSum = event.modifiersSum;\n\n        var _selection = this.asm.view.getCurrentSelection();\n\n        if (_selection) {\n          this.asm.commandManager.execShortcut(_selection, modifiersSum, command);\n        }\n      }\n\n      if (event instanceof events_InputEvent__WEBPACK_IMPORTED_MODULE_4__[\"default\"]) {\n        var _selection2 = this.asm.view.getCurrentSelection();\n\n        if (_selection2) {\n          this.asm.model.insertTextToModel(_selection2, event.character, true);\n          this.asm.eventManager.fire({\n            name: 'modelChanged'\n          });\n        }\n      }\n\n      if (event instanceof events_RemoveEvent__WEBPACK_IMPORTED_MODULE_7__[\"default\"]) {\n        var _selection3 = this.asm.view.getCurrentSelection();\n\n        if (_selection3) {\n          var _newSelection = this.asm.model.removeSelection(_selection3, event.direction);\n\n          this.asm.eventManager.fire({\n            name: 'modelChanged',\n            data: _newSelection\n          });\n        }\n      }\n    }\n  }, {\n    key: \"pasteListener\",\n    value: function pasteListener(e) {\n      this.asm.logger.log('Paste event', e);\n      e.preventDefault();\n      var clipboardData = e.clipboardData;\n\n      if (!clipboardData) {\n        return;\n      }\n\n      var types = _toConsumableArray(clipboardData.types || []);\n\n      if (types.includes('text/html')) {\n        var html = clipboardData.getData('text/html');\n\n        if (!html) {\n          return;\n        }\n\n        var selection = this.asm.view.getCurrentSelection();\n\n        if (!selection) {\n          return;\n        }\n\n        var matchStart = /<!--StartFragment-->/.exec(html);\n\n        if (matchStart) {\n          html = html.slice(matchStart.index + matchStart[0].length);\n        }\n\n        var matchEnd = /<!--EndFragment-->/.exec(html);\n\n        if (matchEnd) {\n          html = html.slice(0, matchEnd.index);\n        }\n\n        this.asm.logger.log(\"Insert html: \\xAB\".concat(html, \"\\xBB\"));\n        var newSelection = this.asm.model.insertHtml(selection, html);\n        this.asm.eventManager.fire({\n          name: 'modelChanged',\n          data: newSelection\n        });\n      } else if (types.includes('text/plain')) {\n        var text = clipboardData.getData('text/plain');\n\n        if (!text) {\n          return;\n        }\n\n        var _selection4 = this.asm.view.getCurrentSelection();\n\n        if (!_selection4) {\n          return;\n        }\n\n        this.asm.logger.log(\"Insert text: \\xAB\".concat(text, \"\\xBB\"));\n\n        var _newSelection2 = this.asm.model.insertTextToModel(_selection4, text);\n\n        this.asm.eventManager.fire({\n          name: 'modelChanged',\n          data: _newSelection2\n        });\n      }\n    }\n  }, {\n    key: \"selectListener\",\n    value: function selectListener(e) {\n      this.asm.logger.log('Select event', e);\n      this.checkSelection();\n    }\n  }]);\n\n  return ArenaBrowser;\n}();\n\n\n\n//# sourceURL=webpack://Textarena/./services/ArenaBrowser.ts?");

/***/ }),

/***/ "./services/ArenaCommandManager.ts":
/*!*****************************************!*\
  !*** ./services/ArenaCommandManager.ts ***!
  \*****************************************/
/*! exports provided: keyboardKeys, Modifiers, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"keyboardKeys\", function() { return keyboardKeys; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Modifiers\", function() { return Modifiers; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return ArenaCommandManager; });\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* eslint-disable no-bitwise */\nvar keyboardKeys = ['Escape', 'F1', 'F2', 'F3', 'F4', 'F5', 'F6', 'F7', 'F8', 'F9', 'F10', 'F11', 'F12', 'Insert', 'Delete', 'Backquote', 'Digit1', 'Digit2', 'Digit3', 'Digit4', 'Digit5', 'Digit6', 'Digit7', 'Digit8', 'Digit9', 'Digit0', 'Minus', 'Equal', 'Backspace', 'Tab', 'KeyQ', 'KeyW', 'KeyE', 'KeyR', 'KeyT', 'KeyY', 'KeyU', 'KeyI', 'KeyO', 'KeyP', 'BracketLeft', 'BracketRight', 'Backslash', 'KeyA', 'KeyS', 'KeyD', 'KeyF', 'KeyG', 'KeyH', 'KeyJ', 'KeyK', 'KeyL', 'Semicolon', 'Quote', 'Enter', 'KeyZ', 'KeyX', 'KeyC', 'KeyV', 'KeyB', 'KeyN', 'KeyM', 'Comma', 'Period', 'Slash', 'Space', 'NumpadDivide', 'NumpadMultiply', 'NumpadSubtract', 'Numpad7', 'Numpad8', 'Numpad9', 'NumpadAdd', 'Numpad4', 'Numpad5', 'Numpad6', 'Numpad1', 'Numpad2', 'Numpad3', 'Numpad0', 'NumpadDecimal', 'NumpadEnter', 'ArrowUp', 'ArrowLeft', 'ArrowDown', 'ArrowRight'];\nvar Modifiers = {\n  Shift: 1,\n  Ctrl: 2,\n  Alt: 4,\n  Meta: 8\n};\n\nvar ArenaCommandManager = /*#__PURE__*/function () {\n  function ArenaCommandManager(asm) {\n    _classCallCheck(this, ArenaCommandManager);\n\n    this.asm = asm;\n\n    _defineProperty(this, \"commands\", {});\n\n    _defineProperty(this, \"shortcuts\", {});\n  }\n\n  _createClass(ArenaCommandManager, [{\n    key: \"registerCommand\",\n    value: function registerCommand(command, action) {\n      this.commands[command] = action;\n      return this;\n    }\n  }, {\n    key: \"registerShortcut\",\n    value: function registerShortcut(shortcut, command) {\n      var _this$parseShortcut = this.parseShortcut(shortcut),\n          _this$parseShortcut2 = _slicedToArray(_this$parseShortcut, 2),\n          modifiersSum = _this$parseShortcut2[0],\n          key = _this$parseShortcut2[1];\n\n      var s = \"\".concat(modifiersSum, \"+\").concat(key);\n      this.shortcuts[s] = command;\n      return this;\n    }\n  }, {\n    key: \"execCommand\",\n    value: function execCommand(command, selection) {\n      this.asm.logger.log('exec command', command, selection);\n\n      if (this.commands[command]) {\n        if (selection) {\n          var newSelection = this.commands[command](this.asm.textarena, selection);\n          this.asm.eventManager.fire({\n            name: 'modelChanged',\n            data: newSelection\n          });\n        }\n      }\n    }\n  }, {\n    key: \"execShortcut\",\n    value: function execShortcut(selection, modifiersSum, key) {\n      var shortcut = \"\".concat(modifiersSum, \"+\").concat(key);\n\n      if (this.shortcuts[shortcut]) {\n        this.execCommand(this.shortcuts[shortcut], selection);\n      }\n    }\n  }, {\n    key: \"getModifiersSum\",\n    value: function getModifiersSum(modifiers) {\n      return (modifiers.Shift ? Modifiers.Shift : 0) | (modifiers.Ctrl ? Modifiers.Ctrl : 0) | (modifiers.Alt ? Modifiers.Alt : 0) | (modifiers.Meta ? Modifiers.Meta : 0);\n    }\n  }, {\n    key: \"parseShortcut\",\n    value: function parseShortcut(shortcut) {\n      var keys = shortcut.split('+');\n      var sum = 0;\n      var lastKey;\n      keys.forEach(function (key) {\n        if (key.trim().toLowerCase() === 'shift') {\n          sum += Modifiers.Shift;\n        } else if (['ctrl', 'control'].includes(key.trim().toLowerCase())) {\n          sum += Modifiers.Ctrl;\n        } else if (key.trim().toLowerCase() === 'alt') {\n          sum += Modifiers.Alt;\n        } else if (['meta', 'win', 'windows'].includes(key.trim().toLowerCase())) {\n          sum += Modifiers.Meta;\n        } else {\n          lastKey = key.trim();\n        }\n      });\n\n      if (lastKey && keyboardKeys.includes(lastKey)) {\n        return [sum, lastKey];\n      }\n\n      throw new Error(\"Can not parse shortcut \".concat(shortcut));\n    }\n  }]);\n\n  return ArenaCommandManager;\n}();\n\n\n\n//# sourceURL=webpack://Textarena/./services/ArenaCommandManager.ts?");

/***/ }),

/***/ "./services/ArenaLogger.ts":
/*!*********************************!*\
  !*** ./services/ArenaLogger.ts ***!
  \*********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return ArenaLogger; });\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nvar ArenaLogger = /*#__PURE__*/function () {\n  function ArenaLogger() {\n    _classCallCheck(this, ArenaLogger);\n\n    _defineProperty(this, \"debug\", false);\n  }\n\n  _createClass(ArenaLogger, [{\n    key: \"setDebug\",\n    value: function setDebug(debug) {\n      this.debug = debug;\n      return this;\n    }\n  }, {\n    key: \"log\",\n    value: function log(message) {\n      if (this.debug) {\n        var _console;\n\n        for (var _len = arguments.length, optionalParams = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          optionalParams[_key - 1] = arguments[_key];\n        }\n\n        // eslint-disable-next-line no-console\n        (_console = console).log.apply(_console, [message].concat(optionalParams));\n      }\n    }\n  }, {\n    key: \"info\",\n    value: function info(message) {\n      if (this.debug) {\n        var _console2;\n\n        for (var _len2 = arguments.length, optionalParams = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n          optionalParams[_key2 - 1] = arguments[_key2];\n        }\n\n        // eslint-disable-next-line no-console\n        (_console2 = console).info.apply(_console2, [message].concat(optionalParams));\n      }\n    }\n  }, {\n    key: \"error\",\n    value: function error(message) {\n      if (this.debug) {\n        var _console3;\n\n        for (var _len3 = arguments.length, optionalParams = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n          optionalParams[_key3 - 1] = arguments[_key3];\n        }\n\n        // eslint-disable-next-line no-console\n        (_console3 = console).error.apply(_console3, [message].concat(optionalParams));\n      }\n    }\n  }, {\n    key: \"warn\",\n    value: function warn(message) {\n      if (this.debug) {\n        var _console4;\n\n        for (var _len4 = arguments.length, optionalParams = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n          optionalParams[_key4 - 1] = arguments[_key4];\n        }\n\n        // eslint-disable-next-line no-console\n        (_console4 = console).warn.apply(_console4, [message].concat(optionalParams));\n      }\n    }\n  }]);\n\n  return ArenaLogger;\n}();\n\n\n\n//# sourceURL=webpack://Textarena/./services/ArenaLogger.ts?");

/***/ }),

/***/ "./services/ArenaModel.ts":
/*!********************************!*\
  !*** ./services/ArenaModel.ts ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return ArenaModel; });\n/* harmony import */ var arenas_ArenaFactory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! arenas/ArenaFactory */ \"./arenas/ArenaFactory.ts\");\n/* harmony import */ var models_RootNode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! models/RootNode */ \"./models/RootNode.ts\");\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\nvar ArenaModel = /*#__PURE__*/function () {\n  function ArenaModel(asm) {\n    _classCallCheck(this, ArenaModel);\n\n    this.asm = asm;\n\n    _defineProperty(this, \"rootArenaName\", '__ROOT__');\n\n    _defineProperty(this, \"arenas\", []);\n\n    _defineProperty(this, \"arenasByName\", {});\n\n    _defineProperty(this, \"formatings\", []);\n\n    _defineProperty(this, \"formatingsByName\", {});\n\n    _defineProperty(this, \"areanMarks\", {});\n\n    _defineProperty(this, \"formatingMarks\", {});\n\n    _defineProperty(this, \"rootArena\", void 0);\n\n    _defineProperty(this, \"rootModel\", void 0);\n\n    this.rootArena = this.registerArena({\n      name: this.rootArenaName,\n      tag: '',\n      attributes: [],\n      hasChildren: true\n    });\n    this.rootModel = new models_RootNode__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.rootArena);\n  }\n\n  _createClass(ArenaModel, [{\n    key: \"getOutputHtml\",\n    value: function getOutputHtml() {\n      return this.rootModel.getOutputHtml(this.getFormatings());\n    }\n  }, {\n    key: \"getHtml\",\n    value: function getHtml() {\n      return this.rootModel.getHtml(this.getFormatings());\n    }\n  }, {\n    key: \"registerArena\",\n    value: function registerArena(arenaOptions, markers, parentArenas) {\n      var _this = this;\n\n      var arena = arenas_ArenaFactory__WEBPACK_IMPORTED_MODULE_0__[\"default\"].create(arenaOptions);\n      this.arenas.push(arena);\n      this.arenasByName[arena.name] = arena;\n\n      if (parentArenas) {\n        parentArenas.forEach(function (parentName) {\n          var parentArena = _this.arenasByName[parentName];\n\n          if (!parentArena) {\n            throw new Error(\"Arena \\\"\".concat(parentName, \"\\\" not found\"));\n          }\n\n          if (!('hasChildren' in parentArena)) {\n            throw new Error(\"Arena \\\"\".concat(parentName, \"\\\" has not children\"));\n          }\n\n          parentArena.addAllowedChild(arena);\n        });\n      }\n\n      if (markers) {\n        markers.forEach(function (_ref) {\n          var tag = _ref.tag,\n              attributes = _ref.attributes;\n\n          if (!_this.areanMarks[tag]) {\n            _this.areanMarks[tag] = [];\n          }\n\n          _this.areanMarks[tag].push({\n            attributes: attributes,\n            arena: arena\n          });\n\n          _this.areanMarks[tag].sort(function (a, b) {\n            return b.attributes.length - a.attributes.length;\n          });\n        });\n      }\n\n      return arena;\n    }\n  }, {\n    key: \"registerFormating\",\n    value: function registerFormating(formating, markers) {\n      var _this2 = this;\n\n      this.formatings.push(formating);\n      this.formatingsByName[formating.name] = formating;\n      markers.forEach(function (_ref2) {\n        var tag = _ref2.tag,\n            attributes = _ref2.attributes;\n\n        if (!_this2.formatingMarks[tag]) {\n          _this2.formatingMarks[tag] = [];\n        }\n\n        _this2.formatingMarks[tag].push({\n          attributes: attributes,\n          formating: formating\n        });\n      });\n      return formating;\n    }\n  }, {\n    key: \"getArena\",\n    value: function getArena(name) {\n      return this.arenasByName[name];\n    }\n  }, {\n    key: \"getFormatings\",\n    value: function getFormatings() {\n      return this.formatingsByName;\n    }\n  }, {\n    key: \"getArenaMarks\",\n    value: function getArenaMarks(tagName) {\n      return this.areanMarks[tagName];\n    }\n  }, {\n    key: \"getFormatingMarks\",\n    value: function getFormatingMarks(tagName) {\n      return this.formatingMarks[tagName];\n    }\n  }, {\n    key: \"getTextNodeById\",\n    value: function getTextNodeById(id) {\n      var path = id.split('.').map(function (i) {\n        return parseInt(i, 10);\n      });\n      var cursor = this.rootModel;\n\n      if (path.shift() === 0) {\n        path.forEach(function (i) {\n          if (cursor && 'hasChildren' in cursor) {\n            cursor = cursor.children[i];\n          } else {\n            cursor = undefined;\n          }\n        });\n\n        if (cursor && 'hasText' in cursor) {\n          return cursor;\n        }\n      }\n\n      return undefined;\n    }\n  }, {\n    key: \"getAncestors\",\n    value: function getAncestors(node) {\n      if ('hasParent' in node) {\n        return [].concat(_toConsumableArray(this.getAncestors(node.parent)), [{\n          node: node.parent,\n          offset: node.getIndex()\n        }]);\n      }\n\n      return [];\n    }\n  }, {\n    key: \"insertHtml\",\n    value: function insertHtml(selection, html) {\n      var newSelection = selection;\n\n      if (!selection.isCollapsed()) {\n        newSelection = this.removeSelection(selection, 'backward');\n      }\n\n      var result = this.asm.parser.insertHtmlToModel(html, newSelection.startNode, newSelection.startOffset);\n\n      if (result) {\n        newSelection.setBoth(result[0], result[1]);\n      }\n\n      return newSelection;\n    }\n  }, {\n    key: \"applyMiddlewares\",\n    value: function applyMiddlewares(cursor) {\n      var result = cursor;\n\n      if ('allowText' in cursor.node.arena) {\n        var middlewares = cursor.node.arena.middlewares;\n\n        for (var i = 0; i < middlewares.length; i += 1) {\n          result = middlewares[i](result);\n        }\n      }\n\n      return result;\n    }\n  }, {\n    key: \"insertTextToModel\",\n    value: function insertTextToModel(selection, text) {\n      var typing = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var newSelection = selection;\n\n      if (!selection.isCollapsed()) {\n        newSelection = this.removeSelection(selection, 'backward');\n      }\n\n      var cursor = newSelection.startNode.insertText(text, newSelection.startOffset, true);\n\n      if (typing) {\n        cursor = this.applyMiddlewares(cursor);\n      }\n\n      newSelection.setCursor(cursor);\n      return newSelection;\n    }\n  }, {\n    key: \"removeSelection\",\n    value: function removeSelection(selection, direction) {\n      var newSelection = selection;\n\n      if (selection.isCollapsed()) {\n        var _newSelection$getCurs = newSelection.getCursor(),\n            _node = _newSelection$getCurs.node,\n            offset = _newSelection$getCurs.offset;\n\n        if (direction === 'forward') {\n          if (_node.getTextLength() === offset) {\n            var nextSibling = this.getNextSibling(_node);\n\n            if (!nextSibling) {\n              return newSelection;\n            }\n\n            var cursor = nextSibling.getTextCursor(0);\n\n            if (_node.getTextLength() === 0) {\n              _node.remove();\n\n              newSelection.setCursor(cursor);\n            } else {\n              _node.insertText(cursor.node.cutText(0), offset);\n\n              cursor.node.remove();\n            }\n          } else {\n            _node.removeText(offset, offset + 1);\n          }\n        }\n\n        if (direction === 'backward') {\n          if (offset === 0) {\n            // At the begining of the text node\n            var newNode = this.getOutFromMediator(_node);\n\n            if (newNode) {\n              newSelection.setBoth(newNode, 0);\n            } else {\n              // nowhere to get out\n              var prevSibling = _node.parent.getChild(_node.getIndex() - 1);\n\n              if (!prevSibling) {\n                return newSelection;\n              }\n\n              var _cursor = prevSibling.getTextCursor(-1);\n\n              if (_node.getTextLength() !== 0) {\n                _cursor.node.insertText(_node.getText(), _cursor.offset);\n              }\n\n              _node.remove();\n\n              newSelection.setCursor(_cursor);\n            }\n          } else {\n            _node.removeText(offset - 1, offset);\n\n            newSelection.setBoth(_node, offset - 1);\n          }\n        }\n\n        return newSelection;\n      }\n\n      var toRemove = [];\n      this.runNodesOfSelection(newSelection, function (node, start, end) {\n        if (start === undefined && end === undefined) {\n          if ('hasParent' in node) {\n            toRemove.push(node);\n          }\n        } else if ('hasText' in node) {\n          node.removeText(start || 0, end);\n        }\n      });\n      toRemove.forEach(function (node) {\n        return node.remove();\n      });\n      var startNode = newSelection.startNode,\n          startOffset = newSelection.startOffset,\n          endNode = newSelection.endNode;\n\n      if (startNode !== endNode) {\n        if (startNode.getTextLength() === 0) {\n          startNode.remove();\n\n          if (endNode.getTextLength() === 0) {\n            var aCursor = endNode.remove();\n\n            var _cursor2 = aCursor.node.insertText('', aCursor.offset);\n\n            newSelection.setCursor(_cursor2);\n          } else {\n            newSelection.setBoth(endNode, 0);\n          }\n        } else {\n          startNode.insertText(endNode.getText(), startOffset);\n          endNode.remove();\n          newSelection.setBoth(startNode, startOffset);\n        }\n      } else {\n        newSelection.setBoth(startNode, startOffset);\n      }\n\n      return newSelection;\n    }\n  }, {\n    key: \"breakSelection\",\n    value: function breakSelection(selection) {\n      var newSelection = selection;\n\n      if (!selection.isCollapsed()) {\n        newSelection = this.removeSelection(selection, 'backward');\n      }\n\n      var _newSelection$getCurs2 = newSelection.getCursor(),\n          node = _newSelection$getCurs2.node,\n          offset = _newSelection$getCurs2.offset;\n\n      var parent = node.parent,\n          arena = node.arena;\n\n      if (offset === 0) {\n        // At the begining of the text node\n        if (node.getTextLength() === 0) {\n          // Text is empty. Try to get out from this node (ex. in a list)\n          var newNode = this.getOutFromMediator(node);\n\n          if (newNode) {\n            newSelection.setBoth(newNode, 0);\n          } else {\n            // nowhere to get out\n            var nextArena = arena.nextArena || arena;\n            var nextNode = parent.createAndInsertNode(nextArena, node.getIndex() + 1);\n\n            if (nextNode) {\n              var cursor = nextNode.getTextCursor(0);\n              newSelection.setCursor(cursor);\n            }\n          }\n        } else {\n          var _newNode = parent.createAndInsertNode(arena, node.getIndex());\n\n          if (_newNode) {\n            _newNode.getTextCursor(0);\n          }\n        }\n      } else {\n        var _nextArena = arena.nextArena || arena;\n\n        var _newNode2 = parent.createAndInsertNode(_nextArena, node.getIndex() + 1);\n\n        if (_newNode2) {\n          var text = node.cutText(offset);\n\n          var _cursor3 = _newNode2.insertText(text, 0);\n\n          newSelection.setCursor(_objectSpread(_objectSpread({}, _cursor3), {}, {\n            offset: 0\n          }));\n        }\n      }\n\n      return newSelection;\n    }\n  }, {\n    key: \"moveChild\",\n    value: function moveChild(selection, direction) {\n      if (selection.isSameNode()) {\n        var _node2 = selection.startNode;\n\n        var index = _node2.getIndex();\n\n        if (direction === 'up' && index === 0) {\n          return selection;\n        }\n\n        if (direction === 'down' && _node2.isLastChild()) {\n          return selection;\n        }\n\n        var children = _node2.parent.cutChildren(index, 1);\n\n        if (direction === 'up') {\n          _node2.parent.insertChildren(children, index - 1);\n        } else {\n          _node2.parent.insertChildren(children, index + 1);\n        }\n      }\n\n      return selection;\n    }\n  }, {\n    key: \"transformModel\",\n    value: function transformModel(selection, arena) {\n      var _this3 = this;\n\n      var newSelection = selection;\n      var toCreate = [];\n      var commonAncestor = this.runNodesOfSelection(selection, function (node) {\n        _this3.runOfChildren(node, function (n) {\n          if ('hasText' in n) {\n            toCreate.push(n);\n          }\n        });\n      });\n\n      if (commonAncestor) {\n        var c = {\n          node: commonAncestor[0],\n          offset: commonAncestor[1]\n        };\n        var toRemove = [];\n        toCreate.forEach(function (n) {\n          var newNode = c.node.createAndInsertNode(arena, c.offset + 1);\n\n          if (newNode) {\n            c = newNode.getParent();\n            var cursor = newNode.insertText(n.getText(), 0, false);\n            toRemove.push(n);\n            newSelection.setCursor(cursor);\n          }\n        });\n        toRemove.forEach(function (n) {\n          return n.remove();\n        });\n      }\n\n      return newSelection;\n    }\n  }, {\n    key: \"formatingModel\",\n    value: function formatingModel(selection, formating) {\n      var _this4 = this;\n\n      this.runNodesOfSelection(selection, function (node, start, end) {\n        if ('hasText' in node) {\n          node.toggleFormating(formating.name, start || 0, end || node.getTextLength());\n        }\n\n        if ('hasChildren' in node) {\n          _this4.runOfChildren(node, function (n) {\n            if ('hasText' in n) {\n              n.toggleFormating(formating.name, 0, n.getTextLength());\n            }\n          });\n        }\n      });\n      return selection;\n    }\n  }, {\n    key: \"addInlineNode\",\n    value: function addInlineNode(selection, arena) {\n      if (selection.isSameNode() && !selection.isCollapsed()) {\n        var startNode = selection.startNode,\n            startOffset = selection.startOffset,\n            endOffset = selection.endOffset;\n        return startNode.addInlineNode(arena, startOffset, endOffset);\n      }\n\n      return undefined;\n    }\n  }, {\n    key: \"getInlineNode\",\n    value: function getInlineNode(selection, arena) {\n      if (selection.isSameNode()) {\n        var startNode = selection.startNode,\n            startOffset = selection.startOffset,\n            endOffset = selection.endOffset;\n        return startNode.getInlineNode(arena, startOffset, endOffset);\n      }\n\n      return undefined;\n    }\n  }, {\n    key: \"removeInlineNode\",\n    value: function removeInlineNode(selection, node) {\n      if (selection.isSameNode()) {\n        var startNode = selection.startNode;\n        return startNode.removeInlineNode(node);\n      }\n\n      return undefined;\n    }\n  }, {\n    key: \"updateInlineNode\",\n    value: function updateInlineNode(selection, node) {\n      if (selection.isSameNode() && !selection.isCollapsed()) {\n        var startNode = selection.startNode,\n            startOffset = selection.startOffset,\n            endOffset = selection.endOffset;\n        startNode.updateInlineNode(node, startOffset, endOffset);\n      }\n    }\n  }, {\n    key: \"runNodesOfSelection\",\n    value: function runNodesOfSelection(selection, callback) {\n      var startNode = selection.startNode,\n          startOffset = selection.startOffset,\n          endNode = selection.endNode,\n          endOffset = selection.endOffset;\n\n      if (selection.isSameNode()) {\n        callback(startNode, startOffset, endOffset);\n        var index = startNode.getIndex();\n        return [startNode.parent, index, index];\n      }\n\n      var commonAncestorCursor = this.getCommonAncestor(startNode, endNode);\n\n      if (!commonAncestorCursor) {\n        return undefined;\n      }\n\n      var _commonAncestorCursor = _slicedToArray(commonAncestorCursor, 1),\n          commonAncestor = _commonAncestorCursor[0];\n\n      var startCursor = startNode.getParent();\n      var startNodes = [];\n\n      while (startCursor.node !== commonAncestor) {\n        var len = startCursor.node.children.length;\n\n        for (var i = startCursor.offset + 1; i < len; i += 1) {\n          var child = startCursor.node.getChild(i);\n\n          if (child) {\n            startNodes.push(child);\n          }\n        }\n\n        startCursor = startCursor.node.getParent();\n      }\n\n      var endCursor = endNode.getParent();\n      var endNodes = [];\n\n      while (endCursor.node !== commonAncestor) {\n        for (var _i2 = 0; _i2 < endCursor.offset; _i2 += 1) {\n          var _child = endCursor.node.getChild(_i2);\n\n          if (_child) {\n            endNodes.push(_child);\n          }\n        }\n\n        endCursor = endCursor.node.getParent();\n      }\n\n      callback(startNode, startOffset);\n      startNodes.forEach(function (n) {\n        return callback(n);\n      });\n\n      for (var _i3 = startCursor.offset + 1; _i3 < endCursor.offset; _i3 += 1) {\n        var _child2 = commonAncestor.getChild(_i3);\n\n        if (_child2) {\n          callback(_child2);\n        }\n      }\n\n      endNodes.reverse().forEach(function (n) {\n        return callback(n);\n      });\n      callback(endNode, 0, endOffset);\n      return commonAncestorCursor;\n    }\n  }, {\n    key: \"separateNode\",\n    value: function separateNode(node, offset) {\n      if (offset === 0 || offset >= node.children.length) {\n        return undefined;\n      }\n\n      if (node.arena[\"protected\"]) {\n        return undefined;\n      }\n\n      var newNode = node.parent.createAndInsertNode(node.arena, node.getIndex() + 1);\n\n      if (!newNode || !('hasChildren' in newNode)) {\n        return undefined;\n      }\n\n      newNode.insertChildren(node.cutChildren(offset));\n      return newNode;\n    }\n  }, {\n    key: \"getOutFromMediator\",\n    value: function getOutFromMediator(node) {\n      var parent = node.parent;\n      var grandpaCursor = parent.getUnprotectedParent();\n\n      if (grandpaCursor && grandpaCursor.node.arena.arenaForText) {\n        // Try to get out from this node (ex. in a list)\n        var index = node.getIndex();\n\n        if ('parent' in parent && parent.parent === grandpaCursor.node) {\n          // try to separate\n          this.separateNode(parent, index);\n        } else if (index > 0 && !node.isLastChild()) {\n          return undefined;\n        }\n\n        var text = node.getText();\n        var offset = grandpaCursor.offset + (index === 0 ? 0 : 1);\n        var cursor = grandpaCursor.node.insertText(text, offset);\n        node.remove();\n        return cursor.node;\n      }\n\n      return undefined;\n    }\n  }, {\n    key: \"getNextSibling\",\n    value: function getNextSibling(node) {\n      if (!('parent' in node)) {\n        return undefined;\n      }\n\n      var next = node.parent.getChild(node.getIndex() + 1);\n\n      if (next) {\n        return next.getTextCursor(0).node;\n      }\n\n      return this.getNextSibling(node.parent);\n    }\n  }, {\n    key: \"runOfChildren\",\n    value: function runOfChildren(node, callback) {\n      var _this5 = this;\n\n      if ('hasChildren' in node) {\n        node.children.forEach(function (child) {\n          _this5.runOfChildren(child, callback);\n        });\n      } else {\n        callback(node);\n      }\n    }\n  }, {\n    key: \"getCommonAncestor\",\n    value: function getCommonAncestor(nodeA, nodeB) {\n      if (nodeA === nodeB) {\n        return undefined;\n      }\n\n      var ancestorsForA = this.getAncestors(nodeA);\n      var ancestorsForB = this.getAncestors(nodeB);\n      var commonMaxDeep = Math.min(ancestorsForA.length, ancestorsForB.length);\n\n      if (commonMaxDeep === 0) {\n        return undefined;\n      }\n\n      var result;\n\n      for (var i = 0; i < commonMaxDeep; i += 1) {\n        if (ancestorsForA[i].node === ancestorsForB[i].node) {\n          result = [ancestorsForA[i].node, ancestorsForA[i].offset, ancestorsForB[i].offset];\n        } else {\n          break;\n        }\n      }\n\n      return result;\n    }\n  }, {\n    key: \"model\",\n    get: function get() {\n      return this.rootModel;\n    }\n  }]);\n\n  return ArenaModel;\n}();\n\n\n\n//# sourceURL=webpack://Textarena/./services/ArenaModel.ts?");

/***/ }),

/***/ "./services/ArenaParser.ts":
/*!*********************************!*\
  !*** ./services/ArenaParser.ts ***!
  \*********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return ArenaParser; });\n/* harmony import */ var helpers_RichTextManager__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! helpers/RichTextManager */ \"./helpers/RichTextManager.ts\");\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\nvar ArenaParser = /*#__PURE__*/function () {\n  function ArenaParser(asm) {\n    _classCallCheck(this, ArenaParser);\n\n    this.asm = asm;\n\n    _defineProperty(this, \"filterXSS\", void 0);\n  }\n\n  _createClass(ArenaParser, [{\n    key: \"insertHtmlToRoot\",\n    value: function insertHtmlToRoot(htmlString) {\n      this.asm.logger.log(htmlString);\n      this.insertHtmlToModel(htmlString, this.asm.model.model, 0);\n    }\n  }, {\n    key: \"insertHtmlToModel\",\n    value: function insertHtmlToModel(htmlString, arenaNode, offset) {\n      var node = document.createElement('DIV');\n      node.innerHTML = htmlString;\n      return this.insertChildren(node, arenaNode, offset);\n    }\n  }, {\n    key: \"insertChildren\",\n    value: function insertChildren(node, arenaNode, offset) {\n      var _this = this;\n\n      var currentNode = arenaNode;\n      var currentOffset = offset;\n      var firstTextNode = true;\n      node.childNodes.forEach(function (childNode) {\n        var result = _this.insertChild(childNode, currentNode, currentOffset, firstTextNode // i === 0,\n        // i === node.childNodes.length - 1,\n        );\n\n        if (result) {\n          var _result = _slicedToArray(result, 2);\n\n          currentNode = _result[0];\n          currentOffset = _result[1];\n\n          if (result[2] && firstTextNode) {\n            firstTextNode = false;\n          }\n        }\n      });\n      return [currentNode, currentOffset];\n    }\n  }, {\n    key: \"insertChild\",\n    value: function insertChild(node, arenaNode, offset, firstTextNode) {\n      // console.log('isert', node, arenaNode);\n      if (node.nodeType === Node.TEXT_NODE) {\n        var text = this.clearText(node.textContent, // first,\n        // last,\n        !('hasText' in arenaNode));\n\n        if (text.length === 0) {\n          return [arenaNode, offset, false];\n        }\n\n        var result = arenaNode.insertText(text, offset);\n        return [result.node, result.offset, true];\n      }\n\n      if (node.nodeType === Node.ELEMENT_NODE) {\n        var elementNode = node;\n        var arena = this.checkArenaMark(elementNode);\n\n        if (arena) {\n          // TODO check if arena for text\n          if ('hasText' in arenaNode && firstTextNode) {\n            var _result2 = this.insertChildren(elementNode, arenaNode, offset);\n\n            return [].concat(_toConsumableArray(_result2), [true]);\n          }\n\n          var newArenaNode = arenaNode.createAndInsertNode(arena, offset);\n\n          if (newArenaNode) {\n            if ('hasText' in newArenaNode) {\n              var formatings = this.getText(elementNode);\n              this.asm.logger.log('this is arena for text', formatings);\n              newArenaNode.insertText(formatings, 0);\n              this.clearTextNode(newArenaNode);\n            } else {\n              this.insertChildren(elementNode, newArenaNode, 0);\n            }\n\n            return [newArenaNode.parent, newArenaNode.getIndex() + 1, true];\n          }\n\n          this.asm.logger.log('this is arena');\n\n          var _res = this.insertChildren(elementNode, arenaNode, offset);\n\n          return [].concat(_toConsumableArray(_res), [true]);\n        }\n\n        var formating = this.checkFormatingMark(elementNode);\n\n        if (formating) {\n          var _formatings = this.getText(elementNode);\n\n          _formatings.insertFormating(formating.name, 0, _formatings.getTextLength());\n\n          this.asm.logger.log('this is formating', _formatings);\n\n          var _res2 = arenaNode.insertText(_formatings, offset);\n\n          return [_res2.node, _res2.offset, true];\n        }\n\n        var res = this.insertChildren(elementNode, arenaNode, offset);\n        return [].concat(_toConsumableArray(res), [true]);\n      }\n\n      return [arenaNode, offset, false];\n    }\n  }, {\n    key: \"checkArenaMark\",\n    value: function checkArenaMark(node) {\n      var marks = this.asm.model.getArenaMarks(node.tagName);\n\n      if (marks) {\n        for (var i = 0; i < marks.length; i += 1) {\n          var mark = marks[i];\n\n          if (this.checkAttributes(node, mark.attributes)) {\n            return mark.arena;\n          }\n        }\n      }\n\n      return undefined;\n    }\n  }, {\n    key: \"checkFormatingMark\",\n    value: function checkFormatingMark(node) {\n      var marks = this.asm.model.getFormatingMarks(node.tagName);\n\n      if (marks) {\n        for (var i = 0; i < marks.length; i += 1) {\n          var mark = marks[i];\n\n          if (this.checkAttributes(node, mark.attributes)) {\n            return mark.formating;\n          }\n        }\n      }\n\n      return undefined;\n    }\n  }, {\n    key: \"checkAttributes\",\n    value: function checkAttributes(node, attributes) {\n      if (attributes.length === 0) {\n        return true;\n      }\n\n      for (var i = 0; i < attributes.length; i += 1) {\n        var attribute = attributes[i];\n\n        var _attribute$split = attribute.split('='),\n            _attribute$split2 = _slicedToArray(_attribute$split, 2),\n            name = _attribute$split2[0],\n            value = _attribute$split2[1];\n\n        if (name === 'style') {\n          var _value$split = value.split(':'),\n              _value$split2 = _slicedToArray(_value$split, 2),\n              styleName = _value$split2[0],\n              styleValue = _value$split2[1];\n\n          if (!(styleName in node.style) // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          || node.style[styleName] !== styleValue.trim().toLowerCase()) {\n            return false;\n          }\n        } else if (node.getAttribute(name) !== value) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }, {\n    key: \"getText\",\n    value: function getText(node) {\n      var _this2 = this;\n\n      var formatings = new helpers_RichTextManager__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\n      var offset = 0;\n      node.childNodes.forEach(function (childNode) {\n        if (childNode.nodeType === Node.TEXT_NODE) {\n          var text = _this2.clearText(childNode.textContent);\n\n          offset = formatings.insertText(text, offset);\n        } else if (childNode.nodeType === Node.ELEMENT_NODE) {\n          var elementNode = childNode;\n\n          var newFormatings = _this2.getText(elementNode);\n\n          var arena = _this2.checkArenaMark(elementNode);\n\n          if (arena && 'inline' in arena) {\n            var inlineNode = newFormatings.addInlineNode(arena, 0, newFormatings.getTextLength());\n\n            if (inlineNode) {\n              elementNode.getAttributeNames().forEach(function (attr) {\n                inlineNode.setAttribute(attr, elementNode.getAttribute(attr) || '');\n              });\n            }\n          }\n\n          var formating = _this2.checkFormatingMark(elementNode);\n\n          if (formating) {\n            newFormatings.insertFormating(formating.name, 0, newFormatings.getTextLength());\n          }\n\n          offset = formatings.insertText(newFormatings, offset);\n        } else {\n          _this2.asm.logger.error('unaccepted node type, remove', childNode);\n        } // [currentNode, currentOffset] = this.parseNode(childNode, currentNode, currentOffset);\n\n      });\n      return formatings;\n    }\n  }, {\n    key: \"clearText\",\n    value: function clearText(text) {\n      var ignoreEmpty = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var result = text || ''; // const dontInsertEmptyString = first || last || !('hasText' in arenaNode);\n      // console.log('Clear text', `«${result}»`, `fisrt: ${first}`, `last: ${first}`,\n      // console.log('Clear text', `«${result}»`,\n      //   `ignoreEmpty: ${ignoreEmpty}`);\n      //  `dontInsertEmptyString: ${dontInsertEmptyString}`);\n      // TODO except char 160\n\n      if (ignoreEmpty && /^[\\s\\n]*$/.test(result)) {\n        // console.log('\\tDont insert');\n        return '';\n      }\n\n      result = result.replace(/\\n/g, ' ');\n      result = result.replace(/\\s{2,}/g, ' '); // if (first) {\n      //   result = result.replace(/^[\\s\\n]+/, '');\n      // }\n      // if (last) {\n      //   result = result.replace(/[\\s\\n]+$/, '');\n      // }\n\n      return result;\n    }\n  }, {\n    key: \"clearTextNode\",\n    value: function clearTextNode(newArenaNode) {\n      newArenaNode.ltrim();\n      newArenaNode.rtrim();\n      newArenaNode.clearSpaces();\n    }\n  }]);\n\n  return ArenaParser;\n}();\n\n\n\n//# sourceURL=webpack://Textarena/./services/ArenaParser.ts?");

/***/ }),

/***/ "./services/ArenaServiceManager.ts":
/*!*****************************************!*\
  !*** ./services/ArenaServiceManager.ts ***!
  \*****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return ArenaServiceManager; });\n/* harmony import */ var services_ArenaBrowser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! services/ArenaBrowser */ \"./services/ArenaBrowser.ts\");\n/* harmony import */ var services_ArenaCommandManager__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! services/ArenaCommandManager */ \"./services/ArenaCommandManager.ts\");\n/* harmony import */ var services_ArenaLogger__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! services/ArenaLogger */ \"./services/ArenaLogger.ts\");\n/* harmony import */ var services_ArenaModel__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! services/ArenaModel */ \"./services/ArenaModel.ts\");\n/* harmony import */ var services_ArenaParser__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! services/ArenaParser */ \"./services/ArenaParser.ts\");\n/* harmony import */ var services_ArenaView__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! services/ArenaView */ \"./services/ArenaView.ts\");\n/* harmony import */ var services_CreatorBar__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! services/CreatorBar */ \"./services/CreatorBar.ts\");\n/* harmony import */ var services_EventManager__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! services/EventManager */ \"./services/EventManager.ts\");\n/* harmony import */ var services_Toolbar__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! services/Toolbar */ \"./services/Toolbar.ts\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\n\n\n\n\n\n\nvar ArenaServiceManager = function ArenaServiceManager(textarena) {\n  _classCallCheck(this, ArenaServiceManager);\n\n  this.textarena = textarena;\n\n  _defineProperty(this, \"logger\", void 0);\n\n  _defineProperty(this, \"eventManager\", void 0);\n\n  _defineProperty(this, \"browser\", void 0);\n\n  _defineProperty(this, \"view\", void 0);\n\n  _defineProperty(this, \"commandManager\", void 0);\n\n  _defineProperty(this, \"parser\", void 0);\n\n  _defineProperty(this, \"model\", void 0);\n\n  _defineProperty(this, \"toolbar\", void 0);\n\n  _defineProperty(this, \"creatorBar\", void 0);\n\n  this.eventManager = new services_EventManager__WEBPACK_IMPORTED_MODULE_7__[\"default\"](this);\n  this.logger = new services_ArenaLogger__WEBPACK_IMPORTED_MODULE_2__[\"default\"]();\n  this.parser = new services_ArenaParser__WEBPACK_IMPORTED_MODULE_4__[\"default\"](this);\n  this.model = new services_ArenaModel__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this);\n  this.browser = new services_ArenaBrowser__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this);\n  this.view = new services_ArenaView__WEBPACK_IMPORTED_MODULE_5__[\"default\"](this);\n  this.commandManager = new services_ArenaCommandManager__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this);\n  this.toolbar = new services_Toolbar__WEBPACK_IMPORTED_MODULE_8__[\"default\"](this);\n  this.creatorBar = new services_CreatorBar__WEBPACK_IMPORTED_MODULE_6__[\"default\"](this);\n};\n\n\n\n//# sourceURL=webpack://Textarena/./services/ArenaServiceManager.ts?");

/***/ }),

/***/ "./services/ArenaView.ts":
/*!*******************************!*\
  !*** ./services/ArenaView.ts ***!
  \*******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return ArenaView; });\n/* harmony import */ var lit_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit-html */ \"../node_modules/lit-html/lit-html.js\");\n/* harmony import */ var helpers_ArenaSelection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! helpers/ArenaSelection */ \"./helpers/ArenaSelection.ts\");\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\nvar ArenaView = /*#__PURE__*/function () {\n  function ArenaView(asm) {\n    _classCallCheck(this, ArenaView);\n\n    this.asm = asm;\n\n    _defineProperty(this, \"currentSelection\", void 0);\n  }\n\n  _createClass(ArenaView, [{\n    key: \"render\",\n    value: function render(selection) {\n      var result = this.asm.model.getHtml();\n      var container = this.asm.textarena.getEditorElement().getElem();\n\n      Object(lit_html__WEBPACK_IMPORTED_MODULE_0__[\"render\"])(result, container);\n\n      if (selection) {\n        this.currentSelection = selection;\n      }\n\n      if (this.currentSelection) {\n        this.applyArenaSelection(this.currentSelection);\n      }\n    }\n  }, {\n    key: \"getCurrentSelection\",\n    value: function getCurrentSelection() {\n      if (!this.currentSelection) {\n        this.currentSelection = this.detectArenaSelection();\n      }\n\n      return this.currentSelection;\n    }\n  }, {\n    key: \"resetCurrentSelection\",\n    value: function resetCurrentSelection() {\n      this.currentSelection = undefined;\n    }\n  }, {\n    key: \"applyArenaSelection\",\n    value: function applyArenaSelection(selection) {\n      var s = window.getSelection();\n\n      if (s) {\n        var startNode = selection.startNode,\n            startOffset = selection.startOffset,\n            endNode = selection.endNode,\n            endOffset = selection.endOffset;\n        var startResult = this.getElementAndOffset(startNode, startOffset);\n        var endResult = selection.isCollapsed() ? startResult : this.getElementAndOffset(endNode, endOffset);\n\n        if (startResult && endResult) {\n          var _startResult = _slicedToArray(startResult, 2),\n              anchorNode = _startResult[0],\n              anchorOffset = _startResult[1];\n\n          var _endResult = _slicedToArray(endResult, 2),\n              focusNode = _endResult[0],\n              focusOffset = _endResult[1];\n\n          s.setBaseAndExtent(anchorNode, anchorOffset, focusNode, focusOffset);\n        }\n      }\n\n      return this;\n    }\n  }, {\n    key: \"detectArenaSelection\",\n    value: function detectArenaSelection() {\n      var s = window.getSelection();\n      var range = s ? s.getRangeAt(0) : undefined;\n\n      if (s && range) {\n        var startId = this.getNodeIdAndOffset(range.startContainer, range.startOffset);\n        var endId = this.getNodeIdAndOffset(range.endContainer, range.endOffset);\n\n        if (startId && endId) {\n          var startNode = this.asm.model.getTextNodeById(startId[0]);\n          var endNode = this.asm.model.getTextNodeById(endId[0]);\n\n          if (startNode && endNode) {\n            var direction = s.focusNode === range.endContainer ? 'forward' : 'backward';\n            return new helpers_ArenaSelection__WEBPACK_IMPORTED_MODULE_1__[\"default\"](startNode, startId[1], endNode, endId[1], direction);\n          }\n        }\n      }\n\n      return undefined;\n    }\n  }, {\n    key: \"getNodeIdAndOffset\",\n    value: function getNodeIdAndOffset(node, offset) {\n      if (node.nodeType === Node.ELEMENT_NODE) {\n        var elementNode = node;\n        var id = elementNode.getAttribute('observe-id');\n\n        if (id) {\n          if (!node.textContent || !/\\u00A0/.test(node.textContent) && /^[\\s\\n]*$/g.test(node.textContent)) {\n            return [id, 0];\n          }\n\n          return [id, offset];\n        }\n      }\n\n      if (node.parentElement) {\n        var newOffset = offset;\n        var siblings = this.getChildNodes(node.parentElement);\n        var myIndex = siblings.indexOf(node);\n\n        if (node.nodeType === Node.TEXT_NODE && myIndex === siblings.length - 1 && this.isEmptyNode(node)) {\n          newOffset = 0;\n        }\n\n        var stillEmpty = true;\n\n        for (var i = 0; i < myIndex; i += 1) {\n          var sibling = siblings[i];\n\n          if (stillEmpty) {\n            if (!this.isEmptyNode(sibling)) {\n              stillEmpty = false;\n            }\n          }\n\n          if (!stillEmpty) {\n            newOffset += this.getTextLength(sibling);\n          }\n        }\n\n        return this.getNodeIdAndOffset(node.parentElement, newOffset);\n      }\n\n      return undefined;\n    }\n  }, {\n    key: \"getChildNodes\",\n    value: function getChildNodes(node) {\n      return Array.from(node.childNodes).filter(function (child) {\n        return [Node.TEXT_NODE, Node.ELEMENT_NODE].includes(child.nodeType);\n      });\n    }\n  }, {\n    key: \"isEmptyNode\",\n    value: function isEmptyNode(node) {\n      if (node.nodeType === Node.TEXT_NODE) {\n        var text = node.textContent || '';\n        return !/\\u00A0/.test(text) && /^[\\s\\n]*$/.test(text);\n      }\n\n      if (node.nodeType === Node.ELEMENT_NODE) {\n        if (node.tagName === 'BR') {\n          return true;\n        }\n\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"getTextLength\",\n    value: function getTextLength(node) {\n      var _this = this;\n\n      if (node.nodeType === Node.TEXT_NODE) {\n        var text = node.textContent || '';\n        return text.length;\n      }\n\n      if (node.nodeType === Node.ELEMENT_NODE) {\n        var len = 0;\n        node.childNodes.forEach(function (childNode) {\n          len += _this.getTextLength(childNode);\n        });\n        return len;\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"getElementAndOffset\",\n    value: function getElementAndOffset(node, offset) {\n      var element = this.findElementById(node.getGlobalIndex());\n\n      if (!element) {\n        return undefined;\n      }\n\n      if (offset === 0) {\n        return [element, 0];\n      }\n\n      var result = this.reachOffset(element, offset);\n\n      if (typeof result === 'number') {\n        return undefined;\n      }\n\n      return result;\n    }\n  }, {\n    key: \"findElementById\",\n    value: function findElementById(id) {\n      return document.querySelector(\"[observe-id=\\\"\".concat(id, \"\\\"]\"));\n    }\n  }, {\n    key: \"reachOffset\",\n    value: function reachOffset(element, offset) {\n      var reachedOffset = 0;\n      var stillEmpty = true;\n\n      for (var i = 0; i < element.childNodes.length; i += 1) {\n        var childNode = element.childNodes[i];\n\n        if (stillEmpty) {\n          if (!this.isEmptyNode(childNode)) {\n            stillEmpty = false;\n          }\n        }\n\n        if (!stillEmpty) {\n          if (childNode.nodeType === Node.TEXT_NODE) {\n            var text = childNode.textContent || '';\n            var curOffset = Math.min(text.length, offset - reachedOffset);\n            reachedOffset += curOffset;\n\n            if (reachedOffset === offset) {\n              return [childNode, curOffset];\n            }\n          } else if (childNode.nodeType === Node.ELEMENT_NODE) {\n            var result = this.reachOffset(childNode, offset - reachedOffset);\n\n            if (typeof result === 'number') {\n              reachedOffset += result;\n            } else {\n              return result;\n            }\n          }\n        }\n      }\n\n      return reachedOffset;\n    }\n  }]);\n\n  return ArenaView;\n}();\n\n\n\n//# sourceURL=webpack://Textarena/./services/ArenaView.ts?");

/***/ }),

/***/ "./services/CreatorBar.ts":
/*!********************************!*\
  !*** ./services/CreatorBar.ts ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return CreatorBar; });\n/* harmony import */ var helpers_ElementHelper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! helpers/ElementHelper */ \"./helpers/ElementHelper.ts\");\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\nvar CreatorBar = /*#__PURE__*/function () {\n  function CreatorBar(asm) {\n    var _this = this;\n\n    _classCallCheck(this, CreatorBar);\n\n    this.asm = asm;\n\n    _defineProperty(this, \"enabled\", false);\n\n    _defineProperty(this, \"elem\", void 0);\n\n    _defineProperty(this, \"list\", void 0);\n\n    _defineProperty(this, \"availableCreators\", {});\n\n    _defineProperty(this, \"creators\", []);\n\n    _defineProperty(this, \"showed\", false);\n\n    _defineProperty(this, \"active\", false);\n\n    _defineProperty(this, \"currentFocusElement\", void 0);\n\n    _defineProperty(this, \"keyDownListenerInstance\", void 0);\n\n    _defineProperty(this, \"keyUpListenerInstance\", void 0);\n\n    this.elem = new helpers_ElementHelper__WEBPACK_IMPORTED_MODULE_0__[\"default\"]('DIV', 'textarena-creator');\n    this.elem.onClick(function () {\n      _this.closeList();\n    });\n    this.list = new helpers_ElementHelper__WEBPACK_IMPORTED_MODULE_0__[\"default\"]('DIV', 'textarena-creator__list');\n    this.hide();\n    var createButton = new helpers_ElementHelper__WEBPACK_IMPORTED_MODULE_0__[\"default\"]('BUTTON', 'textarena-creator__create-button');\n    createButton.onClick(function (e) {\n      e.stopPropagation();\n\n      if (_this.active) {\n        _this.closeList();\n      } else {\n        _this.openList();\n      }\n    });\n    createButton.setInnerHTML(\"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" viewBox=\\\"0 0 14 14\\\">\\n    <path d=\\\"M8.05 5.8h4.625a1.125 1.125 0 0 1 0 2.25H8.05v4.625a1.125 1.125 0 0 1-2.25 0V8.05H1.125a1.125 1.125 0 0 1 0-2.25H5.8V1.125a1.125 1.125 0 0 1 2.25 0V5.8z\\\"/>\\n    </svg>\"); // const MACOS = isMac();\n    // const altKey = MACOS ? '⌥' : 'Alt';\n\n    var placeholder = new helpers_ElementHelper__WEBPACK_IMPORTED_MODULE_0__[\"default\"]('DIV', 'textarena-creator__placeholder');\n    this.elem.appendChild(createButton);\n    this.elem.appendChild(this.list);\n    this.elem.appendChild(placeholder);\n    this.asm.textarena.getContainerElement().appendChild(this.getElem());\n    this.asm.eventManager.subscribe('moveCursor', function () {\n      _this.handleChangeSelection();\n    });\n    this.asm.commandManager.registerCommand('open-creator-list', function (_t, selection) {\n      _this.openList();\n\n      return selection;\n    });\n    this.asm.commandManager.registerShortcut('Alt + KeyQ', 'open-creator-list');\n    this.keyDownListenerInstance = this.keyDownListener.bind(this);\n    this.keyUpListenerInstance = this.keyDownListener.bind(this);\n    this.asm.eventManager.subscribe('turnOn', function () {\n      _this.elem.addEventListener('keydown', _this.keyDownListenerInstance, false);\n\n      _this.elem.addEventListener('keyup', _this.keyUpListenerInstance, false);\n    });\n    this.keyUpListenerInstance = this.keyUpListener.bind(this);\n    this.asm.eventManager.subscribe('turnOff', function () {\n      _this.elem.removeEventListener('keydown', _this.keyDownListenerInstance);\n\n      _this.elem.removeEventListener('keyup', _this.keyUpListenerInstance);\n    });\n  }\n\n  _createClass(CreatorBar, [{\n    key: \"setOptions\",\n    value: function setOptions(creatorBarOptions) {\n      var _this2 = this;\n\n      if (creatorBarOptions.creators) {\n        this.list.setInnerHTML('');\n        this.creators = [];\n        creatorBarOptions.creators.forEach(function (name) {\n          if (!_this2.availableCreators[name]) {\n            throw Error(\"Creator \\\"\".concat(name, \"\\\" not found\"));\n          }\n\n          var options = _this2.availableCreators[name];\n          var elem = new helpers_ElementHelper__WEBPACK_IMPORTED_MODULE_0__[\"default\"]('BUTTON', 'textarena-creator__item');\n\n          var _this2$asm$commandMan = _this2.asm.commandManager.parseShortcut(options.shortcut),\n              _this2$asm$commandMan2 = _slicedToArray(_this2$asm$commandMan, 1),\n              modifiers = _this2$asm$commandMan2[0];\n\n          elem.onClick(function (e) {\n            e.preventDefault();\n\n            _this2.executeTool(options);\n          });\n\n          if (options.icon) {\n            elem.setInnerHTML(options.icon);\n          }\n\n          if (options.hint) {\n            var keyElem = new helpers_ElementHelper__WEBPACK_IMPORTED_MODULE_0__[\"default\"]('DIV', 'textarena-creator__hint', options.hint);\n            elem.appendChild(keyElem);\n          }\n\n          _this2.list.append(elem);\n\n          _this2.creators.push({\n            elem: elem,\n            options: options,\n            modifiers: modifiers\n          });\n        });\n      }\n\n      this.enabled = !!creatorBarOptions.enabled;\n\n      if (!this.enabled) {\n        this.hide();\n      }\n    }\n  }, {\n    key: \"registerCreator\",\n    value: function registerCreator(opts) {\n      this.availableCreators[opts.name] = opts;\n    }\n  }, {\n    key: \"showHints\",\n    value: function showHints(sum) {\n      this.creators.forEach(function (tool) {\n        if (tool.modifiers === sum) {\n          tool.elem.addClass('textarena-creator__item_show-hint');\n        } else {\n          tool.elem.removeClass('textarena-creator__item_show-hint');\n        }\n      });\n    }\n  }, {\n    key: \"handleChangeSelection\",\n    value: function handleChangeSelection() {\n      if (!this.enabled) {\n        return;\n      }\n\n      var selection = this.asm.view.getCurrentSelection();\n\n      if (selection && selection.isCollapsed() && selection.startNode.getTextLength() === 0) {\n        var target = this.asm.view.findElementById(selection.startNode.getGlobalIndex());\n\n        if (target) {\n          this.show(target);\n          return;\n        }\n      }\n\n      this.hide();\n    }\n  }, {\n    key: \"keyUpListener\",\n    value: function keyUpListener(e) {\n      var modifiersSum = this.asm.browser.getModifiersSum(e);\n      this.showHints(modifiersSum);\n    }\n  }, {\n    key: \"keyDownListener\",\n    value: function keyDownListener(e) {\n      var modifiersSum = this.asm.browser.getModifiersSum(e);\n      this.showHints(modifiersSum);\n    }\n  }, {\n    key: \"executeTool\",\n    value: function executeTool(options) {\n      var selection = this.asm.view.getCurrentSelection();\n      this.asm.commandManager.execCommand(options.command, selection);\n      this.hide();\n    }\n  }, {\n    key: \"getElem\",\n    value: function getElem() {\n      return this.elem.getElem();\n    }\n  }, {\n    key: \"show\",\n    value: function show(target) {\n      this.showed = true;\n      this.elem.css({\n        display: 'flex',\n        top: \"\".concat(target.offsetTop, \"px\")\n      });\n      this.closeList();\n    }\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      this.showed = false;\n      this.elem.css({\n        display: 'none'\n      });\n      this.closeList();\n    }\n  }, {\n    key: \"openList\",\n    value: function openList() {\n      if (this.showed) {\n        this.active = true;\n        this.elem.addClass('textarena-creator_active');\n\n        if (this.creators.length > 0) {\n          this.creators[0].elem.focus();\n        }\n      }\n    }\n  }, {\n    key: \"closeList\",\n    value: function closeList() {\n      this.active = false;\n      this.elem.removeClass('textarena-creator_active');\n      this.asm.textarena.getEditorElement().focus();\n    }\n  }]);\n\n  return CreatorBar;\n}();\n\n\n\n//# sourceURL=webpack://Textarena/./services/CreatorBar.ts?");

/***/ }),

/***/ "./services/EventManager.ts":
/*!**********************************!*\
  !*** ./services/EventManager.ts ***!
  \**********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return EventManager; });\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar EventManager = /*#__PURE__*/function () {\n  function EventManager(asm) {\n    _classCallCheck(this, EventManager);\n\n    this.asm = asm;\n\n    _defineProperty(this, \"handlers\", {});\n  }\n\n  _createClass(EventManager, [{\n    key: \"fire\",\n    value: function fire(event) {\n      this.asm.logger.log(\"fire:  \".concat(event));\n      var eventName = typeof event === 'string' ? event : event.name;\n\n      if (this.handlers[eventName]) {\n        this.handlers[eventName].map(function (handler) {\n          return handler(event);\n        });\n      }\n    }\n  }, {\n    key: \"subscribe\",\n    value: function subscribe(event, handler) {\n      if (!this.handlers[event]) {\n        this.handlers[event] = [];\n      }\n\n      this.handlers[event].push(handler);\n    }\n  }]);\n\n  return EventManager;\n}();\n\n\n\n//# sourceURL=webpack://Textarena/./services/EventManager.ts?");

/***/ }),

/***/ "./services/Toolbar.ts":
/*!*****************************!*\
  !*** ./services/Toolbar.ts ***!
  \*****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Toolbar; });\n/* harmony import */ var helpers_ElementHelper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! helpers/ElementHelper */ \"./helpers/ElementHelper.ts\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\nfunction getFocusElement() {\n  var s = window.getSelection();\n\n  if (!s) {\n    return undefined;\n  }\n\n  var focusNode = s.focusNode;\n\n  if (focusNode) {\n    return focusNode.nodeType === 1 ? focusNode : focusNode.parentElement;\n  }\n\n  return undefined;\n}\n\nvar Toolbar = /*#__PURE__*/function () {\n  function Toolbar(asm) {\n    var _this = this;\n\n    _classCallCheck(this, Toolbar);\n\n    this.asm = asm;\n\n    _defineProperty(this, \"enabled\", false);\n\n    _defineProperty(this, \"showed\", false);\n\n    _defineProperty(this, \"controlKeyShowed\", false);\n\n    _defineProperty(this, \"altKeyShowed\", false);\n\n    _defineProperty(this, \"elem\", void 0);\n\n    _defineProperty(this, \"list\", void 0);\n\n    _defineProperty(this, \"pointer\", void 0);\n\n    _defineProperty(this, \"availableTools\", {});\n\n    _defineProperty(this, \"tools\", []);\n\n    _defineProperty(this, \"leftPadding\", 15);\n\n    _defineProperty(this, \"rightPadding\", 30);\n\n    _defineProperty(this, \"container\", void 0);\n\n    this.elem = new helpers_ElementHelper__WEBPACK_IMPORTED_MODULE_0__[\"default\"]('DIV', 'textarena-toolbar');\n    this.pointer = new helpers_ElementHelper__WEBPACK_IMPORTED_MODULE_0__[\"default\"]('DIV', 'textarena-toolbar__pointer');\n    this.list = new helpers_ElementHelper__WEBPACK_IMPORTED_MODULE_0__[\"default\"]('DIV', 'textarena-toolbar__list');\n    this.elem.appendChild(this.list);\n    this.elem.appendChild(this.pointer);\n    this.hide();\n    this.asm.eventManager.subscribe('textSelected', function () {\n      _this.show();\n    });\n    this.asm.eventManager.subscribe('textUnselected', function () {\n      _this.hide();\n    });\n    this.asm.eventManager.subscribe('selectionChanged', function () {\n      _this.show();\n    });\n    this.asm.eventManager.subscribe('keyDown', this.keyListener.bind(this));\n    this.asm.eventManager.subscribe('keyUp', this.keyListener.bind(this));\n    this.container = this.asm.textarena.getContainerElement();\n    this.container.appendChild(this.getElem());\n  }\n\n  _createClass(Toolbar, [{\n    key: \"setOptions\",\n    value: function setOptions(toolbarOptions) {\n      var _this2 = this;\n\n      if (toolbarOptions.tools) {\n        this.list.setInnerHTML('');\n        this.tools = toolbarOptions.tools.map(function (toolOptions) {\n          if (!_this2.availableTools[toolOptions]) {\n            throw Error(\"Tool \\\"\".concat(toolOptions, \"\\\" not found\"));\n          }\n\n          var options = _this2.availableTools[toolOptions];\n          var elem = new helpers_ElementHelper__WEBPACK_IMPORTED_MODULE_0__[\"default\"]('DIV', 'textarena-toolbar__item');\n\n          var _this2$asm$commandMan = _this2.asm.commandManager.parseShortcut(options.shortcut),\n              _this2$asm$commandMan2 = _slicedToArray(_this2$asm$commandMan, 1),\n              modifiers = _this2$asm$commandMan2[0];\n\n          var tool = {\n            elem: elem,\n            options: options,\n            modifiers: modifiers\n          };\n          elem.onClick(function (e) {\n            e.preventDefault();\n\n            _this2.executeTool(tool);\n          });\n\n          if (options.icon) {\n            elem.setInnerHTML(options.icon);\n          }\n\n          if (options.hint) {\n            var keyElem = new helpers_ElementHelper__WEBPACK_IMPORTED_MODULE_0__[\"default\"]('DIV', 'textarena-toolbar__hint', options.hint);\n            elem.appendChild(keyElem);\n          }\n\n          _this2.list.appendChild(elem);\n\n          return tool;\n        });\n      }\n\n      this.enabled = !!toolbarOptions.enabled;\n\n      if (!this.enabled) {\n        this.hide();\n      }\n    }\n  }, {\n    key: \"registerTool\",\n    value: function registerTool(opts) {\n      this.availableTools[opts.name] = opts;\n    }\n  }, {\n    key: \"keyListener\",\n    value: function keyListener(event) {\n      if (!this.enabled) {\n        return;\n      }\n\n      if (_typeof(event) === 'object' && typeof event.data === 'number') {\n        this.tools.forEach(function (tool) {\n          if (tool.modifiers === event.data) {\n            tool.elem.addClass('textarena-toolbar__item_show-hint');\n          } else {\n            tool.elem.removeClass('textarena-toolbar__item_show-hint');\n          }\n        });\n      }\n    }\n  }, {\n    key: \"executeTool\",\n    value: function executeTool(tool) {\n      var options = tool.options;\n      var selection = this.asm.view.getCurrentSelection();\n      this.asm.commandManager.execCommand(options.command, selection);\n      this.hide();\n    }\n  }, {\n    key: \"updateState\",\n    value: function updateState() {\n      var _this3 = this;\n\n      var sel = this.asm.view.getCurrentSelection();\n      var status = {};\n      this.tools.forEach(function (_ref) {\n        var _ref$options = _ref.options,\n            name = _ref$options.name,\n            checkStatus = _ref$options.checkStatus;\n        status[name] = !!checkStatus;\n      });\n\n      if (sel) {\n        this.asm.model.runNodesOfSelection(sel, function (node, start, end) {\n          _this3.tools.forEach(function (_ref2) {\n            var _ref2$options = _ref2.options,\n                name = _ref2$options.name,\n                checkStatus = _ref2$options.checkStatus;\n\n            if (status[name]) {\n              if (!checkStatus) {\n                status[name] = false;\n              } else {\n                status[name] = checkStatus(node, start, end);\n              }\n            }\n          });\n        });\n      }\n\n      this.tools.forEach(function (_ref3) {\n        var elem = _ref3.elem,\n            name = _ref3.options.name;\n\n        if (status[name]) {\n          elem.addClass('textarena-toolbar__item_active');\n        } else {\n          elem.removeClass('textarena-toolbar__item_active');\n        }\n      });\n    }\n  }, {\n    key: \"getElem\",\n    value: function getElem() {\n      return this.elem.getElem();\n    }\n  }, {\n    key: \"show\",\n    value: function show() {\n      if (!this.enabled) {\n        return;\n      }\n\n      var s = window.getSelection();\n\n      if (!s || s.isCollapsed || s.rangeCount === 0) {\n        return;\n      }\n\n      var focusElement = getFocusElement();\n\n      if (!focusElement) {\n        return;\n      }\n\n      var rootElement = focusElement.closest('.textarena-editor');\n\n      if (!rootElement) {\n        return;\n      }\n\n      var range = s.getRangeAt(0);\n      var rect = range.getBoundingClientRect();\n      var containerRect = this.container.getBoundingClientRect();\n      var positionTop = true;\n\n      if (rect.y < window.innerHeight / 2) {\n        positionTop = rect.top >= window.innerHeight - rect.bottom;\n      }\n\n      if (positionTop) {\n        var elemBottom = containerRect.bottom - rect.top;\n\n        if (rect.top < 100) {\n          elemBottom -= 100;\n        }\n\n        this.elem.css({\n          top: 'auto',\n          bottom: \"\".concat(elemBottom, \"px\")\n        });\n        this.elem.removeClass('textarena-toolbar_bottom');\n        this.elem.addClass('textarena-toolbar_top');\n      } else {\n        var elemTop = rect.top - containerRect.top + rect.height;\n\n        if (window.innerHeight - rect.bottom < 100) {\n          elemTop -= 100;\n        }\n\n        this.elem.css({\n          top: \"\".concat(elemTop, \"px\"),\n          bottom: 'auto'\n        });\n        this.elem.removeClass('textarena-toolbar_top');\n        this.elem.addClass('textarena-toolbar_bottom');\n      }\n\n      this.list.css({\n        marginLeft: '0'\n      });\n      this.elem.css({\n        left: \"\".concat(this.leftPadding - containerRect.left, \"px\"),\n        right: \"\".concat(containerRect.right - window.innerWidth + this.rightPadding, \"px\"),\n        display: 'flex',\n        visibility: 'hidden'\n      });\n      var centerPosition = (rect.left + rect.right) / 2;\n      var elemWidth = this.elem.getElem().offsetWidth;\n      var listWidth = this.list.getElem().offsetWidth;\n      var listLeft = Math.max(0, Math.min(elemWidth - listWidth, centerPosition - this.leftPadding - listWidth / 2));\n      this.list.css({\n        marginLeft: \"\".concat(listLeft, \"px\")\n      });\n      var pointerLeft = Math.max(15, Math.min(elemWidth, centerPosition - this.leftPadding - 8));\n      this.pointer.css({\n        left: \"\".concat(pointerLeft, \"px\")\n      });\n      this.updateState();\n      this.elem.css({\n        visibility: 'visible'\n      });\n      this.showed = true;\n    }\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      this.elem.css({\n        display: 'none'\n      });\n      this.showed = false;\n    }\n  }]);\n\n  return Toolbar;\n}();\n\n\n\n//# sourceURL=webpack://Textarena/./services/Toolbar.ts?");

/***/ }),

/***/ 0:
/*!****************************!*\
  !*** multi ./Textarena.ts ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! ./Textarena.ts */\"./Textarena.ts\");\n\n\n//# sourceURL=webpack://Textarena/multi_./Textarena.ts?");

/***/ })

/******/ })["default"];
});